// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: prophetstor/api/datahub/configs/scaler.proto

package configs

import (
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	resources "prophetstor.com/api/datahub/resources"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ScalingType int32

const (
	ScalingType_SCALING_TYPE_UNDEFINED ScalingType = 0
	ScalingType_PREDICT_ONLY           ScalingType = 1
	ScalingType_HPA                    ScalingType = 2
)

// Enum value maps for ScalingType.
var (
	ScalingType_name = map[int32]string{
		0: "SCALING_TYPE_UNDEFINED",
		1: "PREDICT_ONLY",
		2: "HPA",
	}
	ScalingType_value = map[string]int32{
		"SCALING_TYPE_UNDEFINED": 0,
		"PREDICT_ONLY":           1,
		"HPA":                    2,
	}
)

func (x ScalingType) Enum() *ScalingType {
	p := new(ScalingType)
	*p = x
	return p
}

func (x ScalingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScalingType) Descriptor() protoreflect.EnumDescriptor {
	return file_prophetstor_api_datahub_configs_scaler_proto_enumTypes[0].Descriptor()
}

func (ScalingType) Type() protoreflect.EnumType {
	return &file_prophetstor_api_datahub_configs_scaler_proto_enumTypes[0]
}

func (x ScalingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScalingType.Descriptor instead.
func (ScalingType) EnumDescriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_scaler_proto_rawDescGZIP(), []int{0}
}

type TargetType int32

const (
	TargetType_TARGET_TYPE_UNDEFINED TargetType = 0
	TargetType_GENERIC               TargetType = 1
	TargetType_KAFKA                 TargetType = 2
)

// Enum value maps for TargetType.
var (
	TargetType_name = map[int32]string{
		0: "TARGET_TYPE_UNDEFINED",
		1: "GENERIC",
		2: "KAFKA",
	}
	TargetType_value = map[string]int32{
		"TARGET_TYPE_UNDEFINED": 0,
		"GENERIC":               1,
		"KAFKA":                 2,
	}
)

func (x TargetType) Enum() *TargetType {
	p := new(TargetType)
	*p = x
	return p
}

func (x TargetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TargetType) Descriptor() protoreflect.EnumDescriptor {
	return file_prophetstor_api_datahub_configs_scaler_proto_enumTypes[1].Descriptor()
}

func (TargetType) Type() protoreflect.EnumType {
	return &file_prophetstor_api_datahub_configs_scaler_proto_enumTypes[1]
}

func (x TargetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TargetType.Descriptor instead.
func (TargetType) EnumDescriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_scaler_proto_rawDescGZIP(), []int{1}
}

type ControllerKind int32

const (
	ControllerKind_CONTROLLER_KIND_UNDEFINED ControllerKind = 0
	ControllerKind_DEPLOYMENT                ControllerKind = 1
	ControllerKind_STATEFULSET               ControllerKind = 2
	ControllerKind_DEPLOYMENTCONFIG          ControllerKind = 3
)

// Enum value maps for ControllerKind.
var (
	ControllerKind_name = map[int32]string{
		0: "CONTROLLER_KIND_UNDEFINED",
		1: "DEPLOYMENT",
		2: "STATEFULSET",
		3: "DEPLOYMENTCONFIG",
	}
	ControllerKind_value = map[string]int32{
		"CONTROLLER_KIND_UNDEFINED": 0,
		"DEPLOYMENT":                1,
		"STATEFULSET":               2,
		"DEPLOYMENTCONFIG":          3,
	}
)

func (x ControllerKind) Enum() *ControllerKind {
	p := new(ControllerKind)
	*p = x
	return p
}

func (x ControllerKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControllerKind) Descriptor() protoreflect.EnumDescriptor {
	return file_prophetstor_api_datahub_configs_scaler_proto_enumTypes[2].Descriptor()
}

func (ControllerKind) Type() protoreflect.EnumType {
	return &file_prophetstor_api_datahub_configs_scaler_proto_enumTypes[2]
}

func (x ControllerKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControllerKind.Descriptor instead.
func (ControllerKind) EnumDescriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_scaler_proto_rawDescGZIP(), []int{2}
}

type HPAParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinReplicas *wrappers.Int32Value `protobuf:"bytes,1,opt,name=min_replicas,json=minReplicas,proto3" json:"min_replicas,omitempty"`
	MaxReplicas int32                `protobuf:"varint,2,opt,name=max_replicas,json=maxReplicas,proto3" json:"max_replicas,omitempty"`
}

func (x *HPAParameters) Reset() {
	*x = HPAParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HPAParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HPAParameters) ProtoMessage() {}

func (x *HPAParameters) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HPAParameters.ProtoReflect.Descriptor instead.
func (*HPAParameters) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_scaler_proto_rawDescGZIP(), []int{0}
}

func (x *HPAParameters) GetMinReplicas() *wrappers.Int32Value {
	if x != nil {
		return x.MinReplicas
	}
	return nil
}

func (x *HPAParameters) GetMaxReplicas() int32 {
	if x != nil {
		return x.MaxReplicas
	}
	return 0
}

type GenericHPAParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HpaParameter *HPAParameters `protobuf:"bytes,1,opt,name=hpa_parameter,json=hpaParameter,proto3" json:"hpa_parameter,omitempty"`
}

func (x *GenericHPAParameters) Reset() {
	*x = GenericHPAParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericHPAParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericHPAParameters) ProtoMessage() {}

func (x *GenericHPAParameters) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericHPAParameters.ProtoReflect.Descriptor instead.
func (*GenericHPAParameters) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_scaler_proto_rawDescGZIP(), []int{1}
}

func (x *GenericHPAParameters) GetHpaParameter() *HPAParameters {
	if x != nil {
		return x.HpaParameter
	}
	return nil
}

type KafkaHPAParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HpaParameter *HPAParameters `protobuf:"bytes,1,opt,name=hpa_parameter,json=hpaParameter,proto3" json:"hpa_parameter,omitempty"`
}

func (x *KafkaHPAParameters) Reset() {
	*x = KafkaHPAParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KafkaHPAParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaHPAParameters) ProtoMessage() {}

func (x *KafkaHPAParameters) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaHPAParameters.ProtoReflect.Descriptor instead.
func (*KafkaHPAParameters) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_scaler_proto_rawDescGZIP(), []int{2}
}

func (x *KafkaHPAParameters) GetHpaParameter() *HPAParameters {
	if x != nil {
		return x.HpaParameter
	}
	return nil
}

type Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace      string         `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name           string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ControllerKind ControllerKind `protobuf:"varint,3,opt,name=controller_kind,json=controllerKind,proto3,enum=prophetstor.api.datahub.configs.ControllerKind" json:"controller_kind,omitempty"`
}

func (x *Target) Reset() {
	*x = Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_scaler_proto_rawDescGZIP(), []int{3}
}

func (x *Target) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Target) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Target) GetControllerKind() ControllerKind {
	if x != nil {
		return x.ControllerKind
	}
	return ControllerKind_CONTROLLER_KIND_UNDEFINED
}

type GenericController struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target        *Target               `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	HpaParameters *GenericHPAParameters `protobuf:"bytes,2,opt,name=hpa_parameters,json=hpaParameters,proto3" json:"hpa_parameters,omitempty"`
}

func (x *GenericController) Reset() {
	*x = GenericController{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericController) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericController) ProtoMessage() {}

func (x *GenericController) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericController.ProtoReflect.Descriptor instead.
func (*GenericController) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_scaler_proto_rawDescGZIP(), []int{4}
}

func (x *GenericController) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *GenericController) GetHpaParameters() *GenericHPAParameters {
	if x != nil {
		return x.HpaParameters
	}
	return nil
}

type ConsumerGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace      string                `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name           string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ControllerKind ControllerKind        `protobuf:"varint,3,opt,name=controller_kind,json=controllerKind,proto3,enum=prophetstor.api.datahub.configs.ControllerKind" json:"controller_kind,omitempty"`
	Topic          string                `protobuf:"bytes,4,opt,name=topic,proto3" json:"topic,omitempty"`
	GroupId        *wrappers.StringValue `protobuf:"bytes,5,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *ConsumerGroup) Reset() {
	*x = ConsumerGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumerGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerGroup) ProtoMessage() {}

func (x *ConsumerGroup) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerGroup.ProtoReflect.Descriptor instead.
func (*ConsumerGroup) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_scaler_proto_rawDescGZIP(), []int{5}
}

func (x *ConsumerGroup) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ConsumerGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConsumerGroup) GetControllerKind() ControllerKind {
	if x != nil {
		return x.ControllerKind
	}
	return ControllerKind_CONTROLLER_KIND_UNDEFINED
}

func (x *ConsumerGroup) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *ConsumerGroup) GetGroupId() *wrappers.StringValue {
	if x != nil {
		return x.GroupId
	}
	return nil
}

type KafkaController struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerGroup     *ConsumerGroup      `protobuf:"bytes,1,opt,name=consumer_group,json=consumerGroup,proto3" json:"consumer_group,omitempty"`
	ExporterNamespace string              `protobuf:"bytes,2,opt,name=exporter_namespace,json=exporterNamespace,proto3" json:"exporter_namespace,omitempty"`
	HpaParameters     *KafkaHPAParameters `protobuf:"bytes,3,opt,name=hpa_parameters,json=hpaParameters,proto3" json:"hpa_parameters,omitempty"`
}

func (x *KafkaController) Reset() {
	*x = KafkaController{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KafkaController) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaController) ProtoMessage() {}

func (x *KafkaController) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaController.ProtoReflect.Descriptor instead.
func (*KafkaController) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_scaler_proto_rawDescGZIP(), []int{6}
}

func (x *KafkaController) GetConsumerGroup() *ConsumerGroup {
	if x != nil {
		return x.ConsumerGroup
	}
	return nil
}

func (x *KafkaController) GetExporterNamespace() string {
	if x != nil {
		return x.ExporterNamespace
	}
	return ""
}

func (x *KafkaController) GetHpaParameters() *KafkaHPAParameters {
	if x != nil {
		return x.HpaParameters
	}
	return nil
}

type Controller struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnableExecution *wrappers.BoolValue `protobuf:"bytes,1,opt,name=enable_execution,json=enableExecution,proto3" json:"enable_execution,omitempty"`
	TargetType      TargetType          `protobuf:"varint,2,opt,name=target_type,json=targetType,proto3,enum=prophetstor.api.datahub.configs.TargetType" json:"target_type,omitempty"`
	ScalingType     ScalingType         `protobuf:"varint,3,opt,name=scaling_type,json=scalingType,proto3,enum=prophetstor.api.datahub.configs.ScalingType" json:"scaling_type,omitempty"`
	// Types that are assignable to TargetTypeController:
	//	*Controller_GenericController
	//	*Controller_KafkaController
	TargetTypeController isController_TargetTypeController `protobuf_oneof:"target_type_controller"`
}

func (x *Controller) Reset() {
	*x = Controller{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Controller) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Controller) ProtoMessage() {}

func (x *Controller) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Controller.ProtoReflect.Descriptor instead.
func (*Controller) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_scaler_proto_rawDescGZIP(), []int{7}
}

func (x *Controller) GetEnableExecution() *wrappers.BoolValue {
	if x != nil {
		return x.EnableExecution
	}
	return nil
}

func (x *Controller) GetTargetType() TargetType {
	if x != nil {
		return x.TargetType
	}
	return TargetType_TARGET_TYPE_UNDEFINED
}

func (x *Controller) GetScalingType() ScalingType {
	if x != nil {
		return x.ScalingType
	}
	return ScalingType_SCALING_TYPE_UNDEFINED
}

func (m *Controller) GetTargetTypeController() isController_TargetTypeController {
	if m != nil {
		return m.TargetTypeController
	}
	return nil
}

func (x *Controller) GetGenericController() *GenericController {
	if x, ok := x.GetTargetTypeController().(*Controller_GenericController); ok {
		return x.GenericController
	}
	return nil
}

func (x *Controller) GetKafkaController() *KafkaController {
	if x, ok := x.GetTargetTypeController().(*Controller_KafkaController); ok {
		return x.KafkaController
	}
	return nil
}

type isController_TargetTypeController interface {
	isController_TargetTypeController()
}

type Controller_GenericController struct {
	GenericController *GenericController `protobuf:"bytes,4,opt,name=generic_controller,json=genericController,proto3,oneof"`
}

type Controller_KafkaController struct {
	KafkaController *KafkaController `protobuf:"bytes,5,opt,name=kafka_controller,json=kafkaController,proto3,oneof"`
}

func (*Controller_GenericController) isController_TargetTypeController() {}

func (*Controller_KafkaController) isController_TargetTypeController() {}

type Scaler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectMeta        *resources.ObjectMeta `protobuf:"bytes,1,opt,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	TargetClusterName string                `protobuf:"bytes,2,opt,name=target_cluster_name,json=targetClusterName,proto3" json:"target_cluster_name,omitempty"`
	Controllers       []*Controller         `protobuf:"bytes,3,rep,name=controllers,proto3" json:"controllers,omitempty"`
}

func (x *Scaler) Reset() {
	*x = Scaler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scaler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scaler) ProtoMessage() {}

func (x *Scaler) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scaler.ProtoReflect.Descriptor instead.
func (*Scaler) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_scaler_proto_rawDescGZIP(), []int{8}
}

func (x *Scaler) GetObjectMeta() *resources.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *Scaler) GetTargetClusterName() string {
	if x != nil {
		return x.TargetClusterName
	}
	return ""
}

func (x *Scaler) GetControllers() []*Controller {
	if x != nil {
		return x.Controllers
	}
	return nil
}

var File_prophetstor_api_datahub_configs_scaler_proto protoreflect.FileDescriptor

var file_prophetstor_api_datahub_configs_scaler_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x2f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f,
	0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x1a,
	0x30, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x72, 0x0a, 0x0d, 0x48, 0x50, 0x41, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x73, 0x22, 0x6b, 0x0a, 0x14, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63,
	0x48, 0x50, 0x41, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x53, 0x0a,
	0x0d, 0x68, 0x70, 0x61, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74,
	0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x48, 0x50, 0x41, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x0c, 0x68, 0x70, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x22, 0x69, 0x0a, 0x12, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x48, 0x50, 0x41, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x53, 0x0a, 0x0d, 0x68, 0x70, 0x61, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x2e, 0x48, 0x50, 0x41, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52,
	0x0c, 0x68, 0x70, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x22, 0x94, 0x01,
	0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x4b, 0x69, 0x6e, 0x64, 0x22, 0xb2, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x5c, 0x0a, 0x0e, 0x68,
	0x70, 0x61, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x48, 0x50, 0x41,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0d, 0x68, 0x70, 0x61, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0xea, 0x01, 0x0a, 0x0d, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x58, 0x0a,
	0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74,
	0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x37, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0xf3, 0x01, 0x0a, 0x0f, 0x4b, 0x61, 0x66, 0x6b, 0x61,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x5a, 0x0a, 0x0e, 0x68, 0x70, 0x61, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68,
	0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61,
	0x48, 0x50, 0x41, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0d, 0x68,
	0x70, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0xd0, 0x03, 0x0a,
	0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x10, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65,
	0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x4f, 0x0a, 0x0c, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74,
	0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x63, 0x0a, 0x12, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x11, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x5d, 0x0a, 0x10, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x0f, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x42, 0x18, 0x0a, 0x16, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x22,
	0xd7, 0x01, 0x0a, 0x06, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x0b, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x2a, 0x44, 0x0a, 0x0b, 0x53, 0x63, 0x61,
	0x6c, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x43, 0x41, 0x4c,
	0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x45, 0x44, 0x49, 0x43, 0x54, 0x5f,
	0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x50, 0x41, 0x10, 0x02, 0x2a,
	0x3f, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x15, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x44,
	0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x45, 0x4e, 0x45,
	0x52, 0x49, 0x43, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4b, 0x41, 0x46, 0x4b, 0x41, 0x10, 0x02,
	0x2a, 0x66, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4b, 0x69,
	0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x4c, 0x45, 0x52,
	0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x46, 0x55, 0x4c, 0x53, 0x45, 0x54,
	0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x03, 0x42, 0x25, 0x5a, 0x23, 0x70, 0x72, 0x6f, 0x70,
	0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prophetstor_api_datahub_configs_scaler_proto_rawDescOnce sync.Once
	file_prophetstor_api_datahub_configs_scaler_proto_rawDescData = file_prophetstor_api_datahub_configs_scaler_proto_rawDesc
)

func file_prophetstor_api_datahub_configs_scaler_proto_rawDescGZIP() []byte {
	file_prophetstor_api_datahub_configs_scaler_proto_rawDescOnce.Do(func() {
		file_prophetstor_api_datahub_configs_scaler_proto_rawDescData = protoimpl.X.CompressGZIP(file_prophetstor_api_datahub_configs_scaler_proto_rawDescData)
	})
	return file_prophetstor_api_datahub_configs_scaler_proto_rawDescData
}

var file_prophetstor_api_datahub_configs_scaler_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_prophetstor_api_datahub_configs_scaler_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_prophetstor_api_datahub_configs_scaler_proto_goTypes = []interface{}{
	(ScalingType)(0),             // 0: prophetstor.api.datahub.configs.ScalingType
	(TargetType)(0),              // 1: prophetstor.api.datahub.configs.TargetType
	(ControllerKind)(0),          // 2: prophetstor.api.datahub.configs.ControllerKind
	(*HPAParameters)(nil),        // 3: prophetstor.api.datahub.configs.HPAParameters
	(*GenericHPAParameters)(nil), // 4: prophetstor.api.datahub.configs.GenericHPAParameters
	(*KafkaHPAParameters)(nil),   // 5: prophetstor.api.datahub.configs.KafkaHPAParameters
	(*Target)(nil),               // 6: prophetstor.api.datahub.configs.Target
	(*GenericController)(nil),    // 7: prophetstor.api.datahub.configs.GenericController
	(*ConsumerGroup)(nil),        // 8: prophetstor.api.datahub.configs.ConsumerGroup
	(*KafkaController)(nil),      // 9: prophetstor.api.datahub.configs.KafkaController
	(*Controller)(nil),           // 10: prophetstor.api.datahub.configs.Controller
	(*Scaler)(nil),               // 11: prophetstor.api.datahub.configs.Scaler
	(*wrappers.Int32Value)(nil),  // 12: google.protobuf.Int32Value
	(*wrappers.StringValue)(nil), // 13: google.protobuf.StringValue
	(*wrappers.BoolValue)(nil),   // 14: google.protobuf.BoolValue
	(*resources.ObjectMeta)(nil), // 15: prophetstor.api.datahub.resources.ObjectMeta
}
var file_prophetstor_api_datahub_configs_scaler_proto_depIdxs = []int32{
	12, // 0: prophetstor.api.datahub.configs.HPAParameters.min_replicas:type_name -> google.protobuf.Int32Value
	3,  // 1: prophetstor.api.datahub.configs.GenericHPAParameters.hpa_parameter:type_name -> prophetstor.api.datahub.configs.HPAParameters
	3,  // 2: prophetstor.api.datahub.configs.KafkaHPAParameters.hpa_parameter:type_name -> prophetstor.api.datahub.configs.HPAParameters
	2,  // 3: prophetstor.api.datahub.configs.Target.controller_kind:type_name -> prophetstor.api.datahub.configs.ControllerKind
	6,  // 4: prophetstor.api.datahub.configs.GenericController.target:type_name -> prophetstor.api.datahub.configs.Target
	4,  // 5: prophetstor.api.datahub.configs.GenericController.hpa_parameters:type_name -> prophetstor.api.datahub.configs.GenericHPAParameters
	2,  // 6: prophetstor.api.datahub.configs.ConsumerGroup.controller_kind:type_name -> prophetstor.api.datahub.configs.ControllerKind
	13, // 7: prophetstor.api.datahub.configs.ConsumerGroup.group_id:type_name -> google.protobuf.StringValue
	8,  // 8: prophetstor.api.datahub.configs.KafkaController.consumer_group:type_name -> prophetstor.api.datahub.configs.ConsumerGroup
	5,  // 9: prophetstor.api.datahub.configs.KafkaController.hpa_parameters:type_name -> prophetstor.api.datahub.configs.KafkaHPAParameters
	14, // 10: prophetstor.api.datahub.configs.Controller.enable_execution:type_name -> google.protobuf.BoolValue
	1,  // 11: prophetstor.api.datahub.configs.Controller.target_type:type_name -> prophetstor.api.datahub.configs.TargetType
	0,  // 12: prophetstor.api.datahub.configs.Controller.scaling_type:type_name -> prophetstor.api.datahub.configs.ScalingType
	7,  // 13: prophetstor.api.datahub.configs.Controller.generic_controller:type_name -> prophetstor.api.datahub.configs.GenericController
	9,  // 14: prophetstor.api.datahub.configs.Controller.kafka_controller:type_name -> prophetstor.api.datahub.configs.KafkaController
	15, // 15: prophetstor.api.datahub.configs.Scaler.object_meta:type_name -> prophetstor.api.datahub.resources.ObjectMeta
	10, // 16: prophetstor.api.datahub.configs.Scaler.controllers:type_name -> prophetstor.api.datahub.configs.Controller
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_prophetstor_api_datahub_configs_scaler_proto_init() }
func file_prophetstor_api_datahub_configs_scaler_proto_init() {
	if File_prophetstor_api_datahub_configs_scaler_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HPAParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericHPAParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KafkaHPAParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericController); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumerGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KafkaController); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Controller); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scaler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_prophetstor_api_datahub_configs_scaler_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*Controller_GenericController)(nil),
		(*Controller_KafkaController)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prophetstor_api_datahub_configs_scaler_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_prophetstor_api_datahub_configs_scaler_proto_goTypes,
		DependencyIndexes: file_prophetstor_api_datahub_configs_scaler_proto_depIdxs,
		EnumInfos:         file_prophetstor_api_datahub_configs_scaler_proto_enumTypes,
		MessageInfos:      file_prophetstor_api_datahub_configs_scaler_proto_msgTypes,
	}.Build()
	File_prophetstor_api_datahub_configs_scaler_proto = out.File
	file_prophetstor_api_datahub_configs_scaler_proto_rawDesc = nil
	file_prophetstor_api_datahub_configs_scaler_proto_goTypes = nil
	file_prophetstor_api_datahub_configs_scaler_proto_depIdxs = nil
}
