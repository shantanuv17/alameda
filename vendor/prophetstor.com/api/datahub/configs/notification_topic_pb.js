// source: prophetstor/api/datahub/configs/notification_topic.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var prophetstor_api_datahub_resources_metadata_pb = require('../../../../prophetstor/api/datahub/resources/metadata_pb.js');
goog.object.extend(proto, prophetstor_api_datahub_resources_metadata_pb);
var prophetstor_api_datahub_events_types_pb = require('../../../../prophetstor/api/datahub/events/types_pb.js');
goog.object.extend(proto, prophetstor_api_datahub_events_types_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.Channel', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.EmailChannel', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.NotificationTopic', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.Source', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.Subject', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.Topic', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.EmailChannel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.configs.EmailChannel.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.configs.EmailChannel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.EmailChannel.displayName = 'proto.prophetstor.api.datahub.configs.EmailChannel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.Channel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.configs.Channel.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.configs.Channel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.Channel.displayName = 'proto.prophetstor.api.datahub.configs.Channel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.Subject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.configs.Subject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.Subject.displayName = 'proto.prophetstor.api.datahub.configs.Subject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.Source = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.configs.Source, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.Source.displayName = 'proto.prophetstor.api.datahub.configs.Source';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.Topic = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.configs.Topic.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.configs.Topic, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.Topic.displayName = 'proto.prophetstor.api.datahub.configs.Topic';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.NotificationTopic = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.configs.NotificationTopic.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.configs.NotificationTopic, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.NotificationTopic.displayName = 'proto.prophetstor.api.datahub.configs.NotificationTopic';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.configs.EmailChannel.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.EmailChannel.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.EmailChannel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.EmailChannel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.EmailChannel.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    toListList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    ccListList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.EmailChannel}
 */
proto.prophetstor.api.datahub.configs.EmailChannel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.EmailChannel;
  return proto.prophetstor.api.datahub.configs.EmailChannel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.EmailChannel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.EmailChannel}
 */
proto.prophetstor.api.datahub.configs.EmailChannel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addToList(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addCcList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.EmailChannel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.EmailChannel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.EmailChannel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.EmailChannel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getToListList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getCcListList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.prophetstor.api.datahub.configs.EmailChannel.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.configs.EmailChannel} returns this
 */
proto.prophetstor.api.datahub.configs.EmailChannel.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string to_list = 2;
 * @return {!Array<string>}
 */
proto.prophetstor.api.datahub.configs.EmailChannel.prototype.getToListList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.prophetstor.api.datahub.configs.EmailChannel} returns this
 */
proto.prophetstor.api.datahub.configs.EmailChannel.prototype.setToListList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.configs.EmailChannel} returns this
 */
proto.prophetstor.api.datahub.configs.EmailChannel.prototype.addToList = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.configs.EmailChannel} returns this
 */
proto.prophetstor.api.datahub.configs.EmailChannel.prototype.clearToListList = function() {
  return this.setToListList([]);
};


/**
 * repeated string cc_list = 3;
 * @return {!Array<string>}
 */
proto.prophetstor.api.datahub.configs.EmailChannel.prototype.getCcListList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.prophetstor.api.datahub.configs.EmailChannel} returns this
 */
proto.prophetstor.api.datahub.configs.EmailChannel.prototype.setCcListList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.configs.EmailChannel} returns this
 */
proto.prophetstor.api.datahub.configs.EmailChannel.prototype.addCcList = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.configs.EmailChannel} returns this
 */
proto.prophetstor.api.datahub.configs.EmailChannel.prototype.clearCcListList = function() {
  return this.setCcListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.configs.Channel.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.Channel.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.Channel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.Channel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.Channel.toObject = function(includeInstance, msg) {
  var f, obj = {
    emailChannelsList: jspb.Message.toObjectList(msg.getEmailChannelsList(),
    proto.prophetstor.api.datahub.configs.EmailChannel.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.Channel}
 */
proto.prophetstor.api.datahub.configs.Channel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.Channel;
  return proto.prophetstor.api.datahub.configs.Channel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.Channel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.Channel}
 */
proto.prophetstor.api.datahub.configs.Channel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.prophetstor.api.datahub.configs.EmailChannel;
      reader.readMessage(value,proto.prophetstor.api.datahub.configs.EmailChannel.deserializeBinaryFromReader);
      msg.addEmailChannels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.Channel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.Channel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.Channel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.Channel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmailChannelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.prophetstor.api.datahub.configs.EmailChannel.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EmailChannel email_channels = 1;
 * @return {!Array<!proto.prophetstor.api.datahub.configs.EmailChannel>}
 */
proto.prophetstor.api.datahub.configs.Channel.prototype.getEmailChannelsList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.configs.EmailChannel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.prophetstor.api.datahub.configs.EmailChannel, 1));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.configs.EmailChannel>} value
 * @return {!proto.prophetstor.api.datahub.configs.Channel} returns this
*/
proto.prophetstor.api.datahub.configs.Channel.prototype.setEmailChannelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.configs.EmailChannel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.configs.EmailChannel}
 */
proto.prophetstor.api.datahub.configs.Channel.prototype.addEmailChannels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.prophetstor.api.datahub.configs.EmailChannel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.configs.Channel} returns this
 */
proto.prophetstor.api.datahub.configs.Channel.prototype.clearEmailChannelsList = function() {
  return this.setEmailChannelsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.Subject.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.Subject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.Subject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.Subject.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    apiVersion: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.Subject}
 */
proto.prophetstor.api.datahub.configs.Subject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.Subject;
  return proto.prophetstor.api.datahub.configs.Subject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.Subject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.Subject}
 */
proto.prophetstor.api.datahub.configs.Subject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setApiVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.Subject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.Subject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.Subject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.Subject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getApiVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string kind = 1;
 * @return {string}
 */
proto.prophetstor.api.datahub.configs.Subject.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.configs.Subject} returns this
 */
proto.prophetstor.api.datahub.configs.Subject.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.prophetstor.api.datahub.configs.Subject.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.configs.Subject} returns this
 */
proto.prophetstor.api.datahub.configs.Subject.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.prophetstor.api.datahub.configs.Subject.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.configs.Subject} returns this
 */
proto.prophetstor.api.datahub.configs.Subject.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string api_version = 4;
 * @return {string}
 */
proto.prophetstor.api.datahub.configs.Subject.prototype.getApiVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.configs.Subject} returns this
 */
proto.prophetstor.api.datahub.configs.Subject.prototype.setApiVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.Source.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.Source.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.Source} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.Source.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: jspb.Message.getFieldWithDefault(msg, 1, ""),
    component: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.Source}
 */
proto.prophetstor.api.datahub.configs.Source.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.Source;
  return proto.prophetstor.api.datahub.configs.Source.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.Source} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.Source}
 */
proto.prophetstor.api.datahub.configs.Source.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.Source.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.Source.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.Source} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.Source.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHost();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getComponent();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.prophetstor.api.datahub.configs.Source.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.configs.Source} returns this
 */
proto.prophetstor.api.datahub.configs.Source.prototype.setHost = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string component = 2;
 * @return {string}
 */
proto.prophetstor.api.datahub.configs.Source.prototype.getComponent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.configs.Source} returns this
 */
proto.prophetstor.api.datahub.configs.Source.prototype.setComponent = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.configs.Topic.repeatedFields_ = [1,2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.Topic.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.Topic.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.Topic} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.Topic.toObject = function(includeInstance, msg) {
  var f, obj = {
    typesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    levelsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    subjectsList: jspb.Message.toObjectList(msg.getSubjectsList(),
    proto.prophetstor.api.datahub.configs.Subject.toObject, includeInstance),
    sourcesList: jspb.Message.toObjectList(msg.getSourcesList(),
    proto.prophetstor.api.datahub.configs.Source.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.Topic}
 */
proto.prophetstor.api.datahub.configs.Topic.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.Topic;
  return proto.prophetstor.api.datahub.configs.Topic.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.Topic} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.Topic}
 */
proto.prophetstor.api.datahub.configs.Topic.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<!proto.prophetstor.api.datahub.events.EventType>} */ (reader.readPackedEnum());
      msg.setTypesList(value);
      break;
    case 2:
      var value = /** @type {!Array<!proto.prophetstor.api.datahub.events.EventLevel>} */ (reader.readPackedEnum());
      msg.setLevelsList(value);
      break;
    case 3:
      var value = new proto.prophetstor.api.datahub.configs.Subject;
      reader.readMessage(value,proto.prophetstor.api.datahub.configs.Subject.deserializeBinaryFromReader);
      msg.addSubjects(value);
      break;
    case 4:
      var value = new proto.prophetstor.api.datahub.configs.Source;
      reader.readMessage(value,proto.prophetstor.api.datahub.configs.Source.deserializeBinaryFromReader);
      msg.addSources(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.Topic.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.Topic.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.Topic} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.Topic.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
  f = message.getLevelsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
  f = message.getSubjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.prophetstor.api.datahub.configs.Subject.serializeBinaryToWriter
    );
  }
  f = message.getSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.prophetstor.api.datahub.configs.Source.serializeBinaryToWriter
    );
  }
};


/**
 * repeated prophetstor.api.datahub.events.EventType types = 1;
 * @return {!Array<!proto.prophetstor.api.datahub.events.EventType>}
 */
proto.prophetstor.api.datahub.configs.Topic.prototype.getTypesList = function() {
  return /** @type {!Array<!proto.prophetstor.api.datahub.events.EventType>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.events.EventType>} value
 * @return {!proto.prophetstor.api.datahub.configs.Topic} returns this
 */
proto.prophetstor.api.datahub.configs.Topic.prototype.setTypesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.prophetstor.api.datahub.events.EventType} value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.configs.Topic} returns this
 */
proto.prophetstor.api.datahub.configs.Topic.prototype.addTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.configs.Topic} returns this
 */
proto.prophetstor.api.datahub.configs.Topic.prototype.clearTypesList = function() {
  return this.setTypesList([]);
};


/**
 * repeated prophetstor.api.datahub.events.EventLevel levels = 2;
 * @return {!Array<!proto.prophetstor.api.datahub.events.EventLevel>}
 */
proto.prophetstor.api.datahub.configs.Topic.prototype.getLevelsList = function() {
  return /** @type {!Array<!proto.prophetstor.api.datahub.events.EventLevel>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.events.EventLevel>} value
 * @return {!proto.prophetstor.api.datahub.configs.Topic} returns this
 */
proto.prophetstor.api.datahub.configs.Topic.prototype.setLevelsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.prophetstor.api.datahub.events.EventLevel} value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.configs.Topic} returns this
 */
proto.prophetstor.api.datahub.configs.Topic.prototype.addLevels = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.configs.Topic} returns this
 */
proto.prophetstor.api.datahub.configs.Topic.prototype.clearLevelsList = function() {
  return this.setLevelsList([]);
};


/**
 * repeated Subject subjects = 3;
 * @return {!Array<!proto.prophetstor.api.datahub.configs.Subject>}
 */
proto.prophetstor.api.datahub.configs.Topic.prototype.getSubjectsList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.configs.Subject>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.prophetstor.api.datahub.configs.Subject, 3));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.configs.Subject>} value
 * @return {!proto.prophetstor.api.datahub.configs.Topic} returns this
*/
proto.prophetstor.api.datahub.configs.Topic.prototype.setSubjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.configs.Subject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.configs.Subject}
 */
proto.prophetstor.api.datahub.configs.Topic.prototype.addSubjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.prophetstor.api.datahub.configs.Subject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.configs.Topic} returns this
 */
proto.prophetstor.api.datahub.configs.Topic.prototype.clearSubjectsList = function() {
  return this.setSubjectsList([]);
};


/**
 * repeated Source sources = 4;
 * @return {!Array<!proto.prophetstor.api.datahub.configs.Source>}
 */
proto.prophetstor.api.datahub.configs.Topic.prototype.getSourcesList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.configs.Source>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.prophetstor.api.datahub.configs.Source, 4));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.configs.Source>} value
 * @return {!proto.prophetstor.api.datahub.configs.Topic} returns this
*/
proto.prophetstor.api.datahub.configs.Topic.prototype.setSourcesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.configs.Source=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.configs.Source}
 */
proto.prophetstor.api.datahub.configs.Topic.prototype.addSources = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.prophetstor.api.datahub.configs.Source, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.configs.Topic} returns this
 */
proto.prophetstor.api.datahub.configs.Topic.prototype.clearSourcesList = function() {
  return this.setSourcesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.configs.NotificationTopic.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.NotificationTopic.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.NotificationTopic.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.NotificationTopic} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.NotificationTopic.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectMeta: (f = msg.getObjectMeta()) && prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.toObject(includeInstance, f),
    disabled: (f = msg.getDisabled()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    topicsList: jspb.Message.toObjectList(msg.getTopicsList(),
    proto.prophetstor.api.datahub.configs.Topic.toObject, includeInstance),
    channel: (f = msg.getChannel()) && proto.prophetstor.api.datahub.configs.Channel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.NotificationTopic}
 */
proto.prophetstor.api.datahub.configs.NotificationTopic.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.NotificationTopic;
  return proto.prophetstor.api.datahub.configs.NotificationTopic.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.NotificationTopic} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.NotificationTopic}
 */
proto.prophetstor.api.datahub.configs.NotificationTopic.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new prophetstor_api_datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setObjectMeta(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setDisabled(value);
      break;
    case 3:
      var value = new proto.prophetstor.api.datahub.configs.Topic;
      reader.readMessage(value,proto.prophetstor.api.datahub.configs.Topic.deserializeBinaryFromReader);
      msg.addTopics(value);
      break;
    case 4:
      var value = new proto.prophetstor.api.datahub.configs.Channel;
      reader.readMessage(value,proto.prophetstor.api.datahub.configs.Channel.deserializeBinaryFromReader);
      msg.setChannel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.NotificationTopic.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.NotificationTopic.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.NotificationTopic} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.NotificationTopic.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getDisabled();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getTopicsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.prophetstor.api.datahub.configs.Topic.serializeBinaryToWriter
    );
  }
  f = message.getChannel();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.prophetstor.api.datahub.configs.Channel.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.api.datahub.resources.ObjectMeta object_meta = 1;
 * @return {?proto.prophetstor.api.datahub.resources.ObjectMeta}
 */
proto.prophetstor.api.datahub.configs.NotificationTopic.prototype.getObjectMeta = function() {
  return /** @type{?proto.prophetstor.api.datahub.resources.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_resources_metadata_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.resources.ObjectMeta|undefined} value
 * @return {!proto.prophetstor.api.datahub.configs.NotificationTopic} returns this
*/
proto.prophetstor.api.datahub.configs.NotificationTopic.prototype.setObjectMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.configs.NotificationTopic} returns this
 */
proto.prophetstor.api.datahub.configs.NotificationTopic.prototype.clearObjectMeta = function() {
  return this.setObjectMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.configs.NotificationTopic.prototype.hasObjectMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.BoolValue disabled = 2;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.prophetstor.api.datahub.configs.NotificationTopic.prototype.getDisabled = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 2));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.prophetstor.api.datahub.configs.NotificationTopic} returns this
*/
proto.prophetstor.api.datahub.configs.NotificationTopic.prototype.setDisabled = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.configs.NotificationTopic} returns this
 */
proto.prophetstor.api.datahub.configs.NotificationTopic.prototype.clearDisabled = function() {
  return this.setDisabled(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.configs.NotificationTopic.prototype.hasDisabled = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Topic topics = 3;
 * @return {!Array<!proto.prophetstor.api.datahub.configs.Topic>}
 */
proto.prophetstor.api.datahub.configs.NotificationTopic.prototype.getTopicsList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.configs.Topic>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.prophetstor.api.datahub.configs.Topic, 3));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.configs.Topic>} value
 * @return {!proto.prophetstor.api.datahub.configs.NotificationTopic} returns this
*/
proto.prophetstor.api.datahub.configs.NotificationTopic.prototype.setTopicsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.configs.Topic=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.configs.Topic}
 */
proto.prophetstor.api.datahub.configs.NotificationTopic.prototype.addTopics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.prophetstor.api.datahub.configs.Topic, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.configs.NotificationTopic} returns this
 */
proto.prophetstor.api.datahub.configs.NotificationTopic.prototype.clearTopicsList = function() {
  return this.setTopicsList([]);
};


/**
 * optional Channel channel = 4;
 * @return {?proto.prophetstor.api.datahub.configs.Channel}
 */
proto.prophetstor.api.datahub.configs.NotificationTopic.prototype.getChannel = function() {
  return /** @type{?proto.prophetstor.api.datahub.configs.Channel} */ (
    jspb.Message.getWrapperField(this, proto.prophetstor.api.datahub.configs.Channel, 4));
};


/**
 * @param {?proto.prophetstor.api.datahub.configs.Channel|undefined} value
 * @return {!proto.prophetstor.api.datahub.configs.NotificationTopic} returns this
*/
proto.prophetstor.api.datahub.configs.NotificationTopic.prototype.setChannel = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.configs.NotificationTopic} returns this
 */
proto.prophetstor.api.datahub.configs.NotificationTopic.prototype.clearChannel = function() {
  return this.setChannel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.configs.NotificationTopic.prototype.hasChannel = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.prophetstor.api.datahub.configs);
