// source: prophetstor/api/datahub/configs/scaler.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var prophetstor_api_datahub_resources_metadata_pb = require('../../../../prophetstor/api/datahub/resources/metadata_pb.js');
goog.object.extend(proto, prophetstor_api_datahub_resources_metadata_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.ConsumerGroup', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.Controller', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.Controller.TargetTypeControllerCase', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.ControllerKind', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.GenericController', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.GenericHPAParameters', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.HPAParameters', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.KafkaController', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.KafkaHPAParameters', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.Scaler', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.ScalingType', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.Target', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.TargetType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.HPAParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.configs.HPAParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.HPAParameters.displayName = 'proto.prophetstor.api.datahub.configs.HPAParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.GenericHPAParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.configs.GenericHPAParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.GenericHPAParameters.displayName = 'proto.prophetstor.api.datahub.configs.GenericHPAParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.KafkaHPAParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.configs.KafkaHPAParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.KafkaHPAParameters.displayName = 'proto.prophetstor.api.datahub.configs.KafkaHPAParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.Target = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.configs.Target, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.Target.displayName = 'proto.prophetstor.api.datahub.configs.Target';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.GenericController = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.configs.GenericController, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.GenericController.displayName = 'proto.prophetstor.api.datahub.configs.GenericController';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.ConsumerGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.configs.ConsumerGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.ConsumerGroup.displayName = 'proto.prophetstor.api.datahub.configs.ConsumerGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.KafkaController = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.configs.KafkaController, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.KafkaController.displayName = 'proto.prophetstor.api.datahub.configs.KafkaController';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.Controller = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.prophetstor.api.datahub.configs.Controller.oneofGroups_);
};
goog.inherits(proto.prophetstor.api.datahub.configs.Controller, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.Controller.displayName = 'proto.prophetstor.api.datahub.configs.Controller';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.Scaler = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.configs.Scaler.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.configs.Scaler, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.Scaler.displayName = 'proto.prophetstor.api.datahub.configs.Scaler';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.HPAParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.HPAParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.HPAParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.HPAParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    minReplicas: (f = msg.getMinReplicas()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    maxReplicas: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.HPAParameters}
 */
proto.prophetstor.api.datahub.configs.HPAParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.HPAParameters;
  return proto.prophetstor.api.datahub.configs.HPAParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.HPAParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.HPAParameters}
 */
proto.prophetstor.api.datahub.configs.HPAParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setMinReplicas(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxReplicas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.HPAParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.HPAParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.HPAParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.HPAParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinReplicas();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getMaxReplicas();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.Int32Value min_replicas = 1;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.prophetstor.api.datahub.configs.HPAParameters.prototype.getMinReplicas = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 1));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.prophetstor.api.datahub.configs.HPAParameters} returns this
*/
proto.prophetstor.api.datahub.configs.HPAParameters.prototype.setMinReplicas = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.configs.HPAParameters} returns this
 */
proto.prophetstor.api.datahub.configs.HPAParameters.prototype.clearMinReplicas = function() {
  return this.setMinReplicas(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.configs.HPAParameters.prototype.hasMinReplicas = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 max_replicas = 2;
 * @return {number}
 */
proto.prophetstor.api.datahub.configs.HPAParameters.prototype.getMaxReplicas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.api.datahub.configs.HPAParameters} returns this
 */
proto.prophetstor.api.datahub.configs.HPAParameters.prototype.setMaxReplicas = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.GenericHPAParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.GenericHPAParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.GenericHPAParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.GenericHPAParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    hpaParameter: (f = msg.getHpaParameter()) && proto.prophetstor.api.datahub.configs.HPAParameters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.GenericHPAParameters}
 */
proto.prophetstor.api.datahub.configs.GenericHPAParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.GenericHPAParameters;
  return proto.prophetstor.api.datahub.configs.GenericHPAParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.GenericHPAParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.GenericHPAParameters}
 */
proto.prophetstor.api.datahub.configs.GenericHPAParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.prophetstor.api.datahub.configs.HPAParameters;
      reader.readMessage(value,proto.prophetstor.api.datahub.configs.HPAParameters.deserializeBinaryFromReader);
      msg.setHpaParameter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.GenericHPAParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.GenericHPAParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.GenericHPAParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.GenericHPAParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHpaParameter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.prophetstor.api.datahub.configs.HPAParameters.serializeBinaryToWriter
    );
  }
};


/**
 * optional HPAParameters hpa_parameter = 1;
 * @return {?proto.prophetstor.api.datahub.configs.HPAParameters}
 */
proto.prophetstor.api.datahub.configs.GenericHPAParameters.prototype.getHpaParameter = function() {
  return /** @type{?proto.prophetstor.api.datahub.configs.HPAParameters} */ (
    jspb.Message.getWrapperField(this, proto.prophetstor.api.datahub.configs.HPAParameters, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.configs.HPAParameters|undefined} value
 * @return {!proto.prophetstor.api.datahub.configs.GenericHPAParameters} returns this
*/
proto.prophetstor.api.datahub.configs.GenericHPAParameters.prototype.setHpaParameter = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.configs.GenericHPAParameters} returns this
 */
proto.prophetstor.api.datahub.configs.GenericHPAParameters.prototype.clearHpaParameter = function() {
  return this.setHpaParameter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.configs.GenericHPAParameters.prototype.hasHpaParameter = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.KafkaHPAParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.KafkaHPAParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.KafkaHPAParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.KafkaHPAParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    hpaParameter: (f = msg.getHpaParameter()) && proto.prophetstor.api.datahub.configs.HPAParameters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.KafkaHPAParameters}
 */
proto.prophetstor.api.datahub.configs.KafkaHPAParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.KafkaHPAParameters;
  return proto.prophetstor.api.datahub.configs.KafkaHPAParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.KafkaHPAParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.KafkaHPAParameters}
 */
proto.prophetstor.api.datahub.configs.KafkaHPAParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.prophetstor.api.datahub.configs.HPAParameters;
      reader.readMessage(value,proto.prophetstor.api.datahub.configs.HPAParameters.deserializeBinaryFromReader);
      msg.setHpaParameter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.KafkaHPAParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.KafkaHPAParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.KafkaHPAParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.KafkaHPAParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHpaParameter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.prophetstor.api.datahub.configs.HPAParameters.serializeBinaryToWriter
    );
  }
};


/**
 * optional HPAParameters hpa_parameter = 1;
 * @return {?proto.prophetstor.api.datahub.configs.HPAParameters}
 */
proto.prophetstor.api.datahub.configs.KafkaHPAParameters.prototype.getHpaParameter = function() {
  return /** @type{?proto.prophetstor.api.datahub.configs.HPAParameters} */ (
    jspb.Message.getWrapperField(this, proto.prophetstor.api.datahub.configs.HPAParameters, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.configs.HPAParameters|undefined} value
 * @return {!proto.prophetstor.api.datahub.configs.KafkaHPAParameters} returns this
*/
proto.prophetstor.api.datahub.configs.KafkaHPAParameters.prototype.setHpaParameter = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.configs.KafkaHPAParameters} returns this
 */
proto.prophetstor.api.datahub.configs.KafkaHPAParameters.prototype.clearHpaParameter = function() {
  return this.setHpaParameter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.configs.KafkaHPAParameters.prototype.hasHpaParameter = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.Target.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.Target.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.Target} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.Target.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    controllerKind: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.Target}
 */
proto.prophetstor.api.datahub.configs.Target.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.Target;
  return proto.prophetstor.api.datahub.configs.Target.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.Target} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.Target}
 */
proto.prophetstor.api.datahub.configs.Target.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {!proto.prophetstor.api.datahub.configs.ControllerKind} */ (reader.readEnum());
      msg.setControllerKind(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.Target.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.Target.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.Target} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.Target.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getControllerKind();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.prophetstor.api.datahub.configs.Target.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.configs.Target} returns this
 */
proto.prophetstor.api.datahub.configs.Target.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.prophetstor.api.datahub.configs.Target.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.configs.Target} returns this
 */
proto.prophetstor.api.datahub.configs.Target.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ControllerKind controller_kind = 3;
 * @return {!proto.prophetstor.api.datahub.configs.ControllerKind}
 */
proto.prophetstor.api.datahub.configs.Target.prototype.getControllerKind = function() {
  return /** @type {!proto.prophetstor.api.datahub.configs.ControllerKind} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.configs.ControllerKind} value
 * @return {!proto.prophetstor.api.datahub.configs.Target} returns this
 */
proto.prophetstor.api.datahub.configs.Target.prototype.setControllerKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.GenericController.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.GenericController.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.GenericController} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.GenericController.toObject = function(includeInstance, msg) {
  var f, obj = {
    target: (f = msg.getTarget()) && proto.prophetstor.api.datahub.configs.Target.toObject(includeInstance, f),
    hpaParameters: (f = msg.getHpaParameters()) && proto.prophetstor.api.datahub.configs.GenericHPAParameters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.GenericController}
 */
proto.prophetstor.api.datahub.configs.GenericController.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.GenericController;
  return proto.prophetstor.api.datahub.configs.GenericController.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.GenericController} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.GenericController}
 */
proto.prophetstor.api.datahub.configs.GenericController.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.prophetstor.api.datahub.configs.Target;
      reader.readMessage(value,proto.prophetstor.api.datahub.configs.Target.deserializeBinaryFromReader);
      msg.setTarget(value);
      break;
    case 2:
      var value = new proto.prophetstor.api.datahub.configs.GenericHPAParameters;
      reader.readMessage(value,proto.prophetstor.api.datahub.configs.GenericHPAParameters.deserializeBinaryFromReader);
      msg.setHpaParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.GenericController.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.GenericController.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.GenericController} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.GenericController.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTarget();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.prophetstor.api.datahub.configs.Target.serializeBinaryToWriter
    );
  }
  f = message.getHpaParameters();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.prophetstor.api.datahub.configs.GenericHPAParameters.serializeBinaryToWriter
    );
  }
};


/**
 * optional Target target = 1;
 * @return {?proto.prophetstor.api.datahub.configs.Target}
 */
proto.prophetstor.api.datahub.configs.GenericController.prototype.getTarget = function() {
  return /** @type{?proto.prophetstor.api.datahub.configs.Target} */ (
    jspb.Message.getWrapperField(this, proto.prophetstor.api.datahub.configs.Target, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.configs.Target|undefined} value
 * @return {!proto.prophetstor.api.datahub.configs.GenericController} returns this
*/
proto.prophetstor.api.datahub.configs.GenericController.prototype.setTarget = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.configs.GenericController} returns this
 */
proto.prophetstor.api.datahub.configs.GenericController.prototype.clearTarget = function() {
  return this.setTarget(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.configs.GenericController.prototype.hasTarget = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GenericHPAParameters hpa_parameters = 2;
 * @return {?proto.prophetstor.api.datahub.configs.GenericHPAParameters}
 */
proto.prophetstor.api.datahub.configs.GenericController.prototype.getHpaParameters = function() {
  return /** @type{?proto.prophetstor.api.datahub.configs.GenericHPAParameters} */ (
    jspb.Message.getWrapperField(this, proto.prophetstor.api.datahub.configs.GenericHPAParameters, 2));
};


/**
 * @param {?proto.prophetstor.api.datahub.configs.GenericHPAParameters|undefined} value
 * @return {!proto.prophetstor.api.datahub.configs.GenericController} returns this
*/
proto.prophetstor.api.datahub.configs.GenericController.prototype.setHpaParameters = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.configs.GenericController} returns this
 */
proto.prophetstor.api.datahub.configs.GenericController.prototype.clearHpaParameters = function() {
  return this.setHpaParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.configs.GenericController.prototype.hasHpaParameters = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.ConsumerGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.ConsumerGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.ConsumerGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.ConsumerGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    controllerKind: jspb.Message.getFieldWithDefault(msg, 3, 0),
    topic: jspb.Message.getFieldWithDefault(msg, 4, ""),
    groupId: (f = msg.getGroupId()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.ConsumerGroup}
 */
proto.prophetstor.api.datahub.configs.ConsumerGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.ConsumerGroup;
  return proto.prophetstor.api.datahub.configs.ConsumerGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.ConsumerGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.ConsumerGroup}
 */
proto.prophetstor.api.datahub.configs.ConsumerGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {!proto.prophetstor.api.datahub.configs.ControllerKind} */ (reader.readEnum());
      msg.setControllerKind(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopic(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.ConsumerGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.ConsumerGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.ConsumerGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.ConsumerGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getControllerKind();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getTopic();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getGroupId();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.prophetstor.api.datahub.configs.ConsumerGroup.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.configs.ConsumerGroup} returns this
 */
proto.prophetstor.api.datahub.configs.ConsumerGroup.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.prophetstor.api.datahub.configs.ConsumerGroup.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.configs.ConsumerGroup} returns this
 */
proto.prophetstor.api.datahub.configs.ConsumerGroup.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ControllerKind controller_kind = 3;
 * @return {!proto.prophetstor.api.datahub.configs.ControllerKind}
 */
proto.prophetstor.api.datahub.configs.ConsumerGroup.prototype.getControllerKind = function() {
  return /** @type {!proto.prophetstor.api.datahub.configs.ControllerKind} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.configs.ControllerKind} value
 * @return {!proto.prophetstor.api.datahub.configs.ConsumerGroup} returns this
 */
proto.prophetstor.api.datahub.configs.ConsumerGroup.prototype.setControllerKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string topic = 4;
 * @return {string}
 */
proto.prophetstor.api.datahub.configs.ConsumerGroup.prototype.getTopic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.configs.ConsumerGroup} returns this
 */
proto.prophetstor.api.datahub.configs.ConsumerGroup.prototype.setTopic = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional google.protobuf.StringValue group_id = 5;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.prophetstor.api.datahub.configs.ConsumerGroup.prototype.getGroupId = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 5));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.prophetstor.api.datahub.configs.ConsumerGroup} returns this
*/
proto.prophetstor.api.datahub.configs.ConsumerGroup.prototype.setGroupId = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.configs.ConsumerGroup} returns this
 */
proto.prophetstor.api.datahub.configs.ConsumerGroup.prototype.clearGroupId = function() {
  return this.setGroupId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.configs.ConsumerGroup.prototype.hasGroupId = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.KafkaController.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.KafkaController.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.KafkaController} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.KafkaController.toObject = function(includeInstance, msg) {
  var f, obj = {
    consumerGroup: (f = msg.getConsumerGroup()) && proto.prophetstor.api.datahub.configs.ConsumerGroup.toObject(includeInstance, f),
    exporterNamespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    hpaParameters: (f = msg.getHpaParameters()) && proto.prophetstor.api.datahub.configs.KafkaHPAParameters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.KafkaController}
 */
proto.prophetstor.api.datahub.configs.KafkaController.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.KafkaController;
  return proto.prophetstor.api.datahub.configs.KafkaController.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.KafkaController} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.KafkaController}
 */
proto.prophetstor.api.datahub.configs.KafkaController.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.prophetstor.api.datahub.configs.ConsumerGroup;
      reader.readMessage(value,proto.prophetstor.api.datahub.configs.ConsumerGroup.deserializeBinaryFromReader);
      msg.setConsumerGroup(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExporterNamespace(value);
      break;
    case 3:
      var value = new proto.prophetstor.api.datahub.configs.KafkaHPAParameters;
      reader.readMessage(value,proto.prophetstor.api.datahub.configs.KafkaHPAParameters.deserializeBinaryFromReader);
      msg.setHpaParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.KafkaController.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.KafkaController.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.KafkaController} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.KafkaController.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsumerGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.prophetstor.api.datahub.configs.ConsumerGroup.serializeBinaryToWriter
    );
  }
  f = message.getExporterNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHpaParameters();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.prophetstor.api.datahub.configs.KafkaHPAParameters.serializeBinaryToWriter
    );
  }
};


/**
 * optional ConsumerGroup consumer_group = 1;
 * @return {?proto.prophetstor.api.datahub.configs.ConsumerGroup}
 */
proto.prophetstor.api.datahub.configs.KafkaController.prototype.getConsumerGroup = function() {
  return /** @type{?proto.prophetstor.api.datahub.configs.ConsumerGroup} */ (
    jspb.Message.getWrapperField(this, proto.prophetstor.api.datahub.configs.ConsumerGroup, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.configs.ConsumerGroup|undefined} value
 * @return {!proto.prophetstor.api.datahub.configs.KafkaController} returns this
*/
proto.prophetstor.api.datahub.configs.KafkaController.prototype.setConsumerGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.configs.KafkaController} returns this
 */
proto.prophetstor.api.datahub.configs.KafkaController.prototype.clearConsumerGroup = function() {
  return this.setConsumerGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.configs.KafkaController.prototype.hasConsumerGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string exporter_namespace = 2;
 * @return {string}
 */
proto.prophetstor.api.datahub.configs.KafkaController.prototype.getExporterNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.configs.KafkaController} returns this
 */
proto.prophetstor.api.datahub.configs.KafkaController.prototype.setExporterNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional KafkaHPAParameters hpa_parameters = 3;
 * @return {?proto.prophetstor.api.datahub.configs.KafkaHPAParameters}
 */
proto.prophetstor.api.datahub.configs.KafkaController.prototype.getHpaParameters = function() {
  return /** @type{?proto.prophetstor.api.datahub.configs.KafkaHPAParameters} */ (
    jspb.Message.getWrapperField(this, proto.prophetstor.api.datahub.configs.KafkaHPAParameters, 3));
};


/**
 * @param {?proto.prophetstor.api.datahub.configs.KafkaHPAParameters|undefined} value
 * @return {!proto.prophetstor.api.datahub.configs.KafkaController} returns this
*/
proto.prophetstor.api.datahub.configs.KafkaController.prototype.setHpaParameters = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.configs.KafkaController} returns this
 */
proto.prophetstor.api.datahub.configs.KafkaController.prototype.clearHpaParameters = function() {
  return this.setHpaParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.configs.KafkaController.prototype.hasHpaParameters = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.prophetstor.api.datahub.configs.Controller.oneofGroups_ = [[4,5]];

/**
 * @enum {number}
 */
proto.prophetstor.api.datahub.configs.Controller.TargetTypeControllerCase = {
  TARGET_TYPE_CONTROLLER_NOT_SET: 0,
  GENERIC_CONTROLLER: 4,
  KAFKA_CONTROLLER: 5
};

/**
 * @return {proto.prophetstor.api.datahub.configs.Controller.TargetTypeControllerCase}
 */
proto.prophetstor.api.datahub.configs.Controller.prototype.getTargetTypeControllerCase = function() {
  return /** @type {proto.prophetstor.api.datahub.configs.Controller.TargetTypeControllerCase} */(jspb.Message.computeOneofCase(this, proto.prophetstor.api.datahub.configs.Controller.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.Controller.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.Controller.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.Controller} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.Controller.toObject = function(includeInstance, msg) {
  var f, obj = {
    enableExecution: (f = msg.getEnableExecution()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    targetType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    scalingType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    genericController: (f = msg.getGenericController()) && proto.prophetstor.api.datahub.configs.GenericController.toObject(includeInstance, f),
    kafkaController: (f = msg.getKafkaController()) && proto.prophetstor.api.datahub.configs.KafkaController.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.Controller}
 */
proto.prophetstor.api.datahub.configs.Controller.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.Controller;
  return proto.prophetstor.api.datahub.configs.Controller.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.Controller} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.Controller}
 */
proto.prophetstor.api.datahub.configs.Controller.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setEnableExecution(value);
      break;
    case 2:
      var value = /** @type {!proto.prophetstor.api.datahub.configs.TargetType} */ (reader.readEnum());
      msg.setTargetType(value);
      break;
    case 3:
      var value = /** @type {!proto.prophetstor.api.datahub.configs.ScalingType} */ (reader.readEnum());
      msg.setScalingType(value);
      break;
    case 4:
      var value = new proto.prophetstor.api.datahub.configs.GenericController;
      reader.readMessage(value,proto.prophetstor.api.datahub.configs.GenericController.deserializeBinaryFromReader);
      msg.setGenericController(value);
      break;
    case 5:
      var value = new proto.prophetstor.api.datahub.configs.KafkaController;
      reader.readMessage(value,proto.prophetstor.api.datahub.configs.KafkaController.deserializeBinaryFromReader);
      msg.setKafkaController(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.Controller.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.Controller.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.Controller} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.Controller.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnableExecution();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getTargetType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getScalingType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getGenericController();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.prophetstor.api.datahub.configs.GenericController.serializeBinaryToWriter
    );
  }
  f = message.getKafkaController();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.prophetstor.api.datahub.configs.KafkaController.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.BoolValue enable_execution = 1;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.prophetstor.api.datahub.configs.Controller.prototype.getEnableExecution = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 1));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.prophetstor.api.datahub.configs.Controller} returns this
*/
proto.prophetstor.api.datahub.configs.Controller.prototype.setEnableExecution = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.configs.Controller} returns this
 */
proto.prophetstor.api.datahub.configs.Controller.prototype.clearEnableExecution = function() {
  return this.setEnableExecution(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.configs.Controller.prototype.hasEnableExecution = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TargetType target_type = 2;
 * @return {!proto.prophetstor.api.datahub.configs.TargetType}
 */
proto.prophetstor.api.datahub.configs.Controller.prototype.getTargetType = function() {
  return /** @type {!proto.prophetstor.api.datahub.configs.TargetType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.configs.TargetType} value
 * @return {!proto.prophetstor.api.datahub.configs.Controller} returns this
 */
proto.prophetstor.api.datahub.configs.Controller.prototype.setTargetType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional ScalingType scaling_type = 3;
 * @return {!proto.prophetstor.api.datahub.configs.ScalingType}
 */
proto.prophetstor.api.datahub.configs.Controller.prototype.getScalingType = function() {
  return /** @type {!proto.prophetstor.api.datahub.configs.ScalingType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.configs.ScalingType} value
 * @return {!proto.prophetstor.api.datahub.configs.Controller} returns this
 */
proto.prophetstor.api.datahub.configs.Controller.prototype.setScalingType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional GenericController generic_controller = 4;
 * @return {?proto.prophetstor.api.datahub.configs.GenericController}
 */
proto.prophetstor.api.datahub.configs.Controller.prototype.getGenericController = function() {
  return /** @type{?proto.prophetstor.api.datahub.configs.GenericController} */ (
    jspb.Message.getWrapperField(this, proto.prophetstor.api.datahub.configs.GenericController, 4));
};


/**
 * @param {?proto.prophetstor.api.datahub.configs.GenericController|undefined} value
 * @return {!proto.prophetstor.api.datahub.configs.Controller} returns this
*/
proto.prophetstor.api.datahub.configs.Controller.prototype.setGenericController = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.prophetstor.api.datahub.configs.Controller.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.configs.Controller} returns this
 */
proto.prophetstor.api.datahub.configs.Controller.prototype.clearGenericController = function() {
  return this.setGenericController(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.configs.Controller.prototype.hasGenericController = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional KafkaController kafka_controller = 5;
 * @return {?proto.prophetstor.api.datahub.configs.KafkaController}
 */
proto.prophetstor.api.datahub.configs.Controller.prototype.getKafkaController = function() {
  return /** @type{?proto.prophetstor.api.datahub.configs.KafkaController} */ (
    jspb.Message.getWrapperField(this, proto.prophetstor.api.datahub.configs.KafkaController, 5));
};


/**
 * @param {?proto.prophetstor.api.datahub.configs.KafkaController|undefined} value
 * @return {!proto.prophetstor.api.datahub.configs.Controller} returns this
*/
proto.prophetstor.api.datahub.configs.Controller.prototype.setKafkaController = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.prophetstor.api.datahub.configs.Controller.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.configs.Controller} returns this
 */
proto.prophetstor.api.datahub.configs.Controller.prototype.clearKafkaController = function() {
  return this.setKafkaController(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.configs.Controller.prototype.hasKafkaController = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.configs.Scaler.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.Scaler.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.Scaler.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.Scaler} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.Scaler.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectMeta: (f = msg.getObjectMeta()) && prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.toObject(includeInstance, f),
    targetClusterName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    controllersList: jspb.Message.toObjectList(msg.getControllersList(),
    proto.prophetstor.api.datahub.configs.Controller.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.Scaler}
 */
proto.prophetstor.api.datahub.configs.Scaler.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.Scaler;
  return proto.prophetstor.api.datahub.configs.Scaler.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.Scaler} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.Scaler}
 */
proto.prophetstor.api.datahub.configs.Scaler.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new prophetstor_api_datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setObjectMeta(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetClusterName(value);
      break;
    case 3:
      var value = new proto.prophetstor.api.datahub.configs.Controller;
      reader.readMessage(value,proto.prophetstor.api.datahub.configs.Controller.deserializeBinaryFromReader);
      msg.addControllers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.Scaler.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.Scaler.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.Scaler} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.Scaler.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getTargetClusterName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getControllersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.prophetstor.api.datahub.configs.Controller.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.api.datahub.resources.ObjectMeta object_meta = 1;
 * @return {?proto.prophetstor.api.datahub.resources.ObjectMeta}
 */
proto.prophetstor.api.datahub.configs.Scaler.prototype.getObjectMeta = function() {
  return /** @type{?proto.prophetstor.api.datahub.resources.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_resources_metadata_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.resources.ObjectMeta|undefined} value
 * @return {!proto.prophetstor.api.datahub.configs.Scaler} returns this
*/
proto.prophetstor.api.datahub.configs.Scaler.prototype.setObjectMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.configs.Scaler} returns this
 */
proto.prophetstor.api.datahub.configs.Scaler.prototype.clearObjectMeta = function() {
  return this.setObjectMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.configs.Scaler.prototype.hasObjectMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string target_cluster_name = 2;
 * @return {string}
 */
proto.prophetstor.api.datahub.configs.Scaler.prototype.getTargetClusterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.configs.Scaler} returns this
 */
proto.prophetstor.api.datahub.configs.Scaler.prototype.setTargetClusterName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Controller controllers = 3;
 * @return {!Array<!proto.prophetstor.api.datahub.configs.Controller>}
 */
proto.prophetstor.api.datahub.configs.Scaler.prototype.getControllersList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.configs.Controller>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.prophetstor.api.datahub.configs.Controller, 3));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.configs.Controller>} value
 * @return {!proto.prophetstor.api.datahub.configs.Scaler} returns this
*/
proto.prophetstor.api.datahub.configs.Scaler.prototype.setControllersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.configs.Controller=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.configs.Controller}
 */
proto.prophetstor.api.datahub.configs.Scaler.prototype.addControllers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.prophetstor.api.datahub.configs.Controller, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.configs.Scaler} returns this
 */
proto.prophetstor.api.datahub.configs.Scaler.prototype.clearControllersList = function() {
  return this.setControllersList([]);
};


/**
 * @enum {number}
 */
proto.prophetstor.api.datahub.configs.ScalingType = {
  SCALING_TYPE_UNDEFINED: 0,
  PREDICT_ONLY: 1,
  HPA: 2
};

/**
 * @enum {number}
 */
proto.prophetstor.api.datahub.configs.TargetType = {
  TARGET_TYPE_UNDEFINED: 0,
  GENERIC: 1,
  KAFKA: 2
};

/**
 * @enum {number}
 */
proto.prophetstor.api.datahub.configs.ControllerKind = {
  CONTROLLER_KIND_UNDEFINED: 0,
  DEPLOYMENT: 1,
  STATEFULSET: 2,
  DEPLOYMENTCONFIG: 3
};

goog.object.extend(exports, proto.prophetstor.api.datahub.configs);
