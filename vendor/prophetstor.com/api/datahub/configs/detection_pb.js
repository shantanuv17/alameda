// source: prophetstor/api/datahub/configs/detection.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var prophetstor_api_datahub_resources_metadata_pb = require('../../../../prophetstor/api/datahub/resources/metadata_pb.js');
goog.object.extend(proto, prophetstor_api_datahub_resources_metadata_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.Detection', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.DetectionMode', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.Match', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.MetricType', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.ResourceType', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.Selector', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.StandardResource', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.StandardRule', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.Threshold', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.configs.WorkloadThreshold', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.Threshold = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.configs.Threshold, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.Threshold.displayName = 'proto.prophetstor.api.datahub.configs.Threshold';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.Selector = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.configs.Selector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.Selector.displayName = 'proto.prophetstor.api.datahub.configs.Selector';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.StandardResource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.configs.StandardResource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.StandardResource.displayName = 'proto.prophetstor.api.datahub.configs.StandardResource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.StandardRule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.configs.StandardRule.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.configs.StandardRule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.StandardRule.displayName = 'proto.prophetstor.api.datahub.configs.StandardRule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.WorkloadThreshold = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.configs.WorkloadThreshold.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.configs.WorkloadThreshold, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.WorkloadThreshold.displayName = 'proto.prophetstor.api.datahub.configs.WorkloadThreshold';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.configs.Detection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.configs.Detection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.configs.Detection.displayName = 'proto.prophetstor.api.datahub.configs.Detection';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.Threshold.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.Threshold.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.Threshold} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.Threshold.toObject = function(includeInstance, msg) {
  var f, obj = {
    metricType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    overrun: (f = msg.getOverrun()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    underrun: (f = msg.getUnderrun()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.Threshold}
 */
proto.prophetstor.api.datahub.configs.Threshold.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.Threshold;
  return proto.prophetstor.api.datahub.configs.Threshold.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.Threshold} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.Threshold}
 */
proto.prophetstor.api.datahub.configs.Threshold.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.prophetstor.api.datahub.configs.MetricType} */ (reader.readEnum());
      msg.setMetricType(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setOverrun(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setUnderrun(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.Threshold.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.Threshold.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.Threshold} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.Threshold.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetricType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getOverrun();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getUnderrun();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional MetricType metric_type = 1;
 * @return {!proto.prophetstor.api.datahub.configs.MetricType}
 */
proto.prophetstor.api.datahub.configs.Threshold.prototype.getMetricType = function() {
  return /** @type {!proto.prophetstor.api.datahub.configs.MetricType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.configs.MetricType} value
 * @return {!proto.prophetstor.api.datahub.configs.Threshold} returns this
 */
proto.prophetstor.api.datahub.configs.Threshold.prototype.setMetricType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional google.protobuf.StringValue overrun = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.prophetstor.api.datahub.configs.Threshold.prototype.getOverrun = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.prophetstor.api.datahub.configs.Threshold} returns this
*/
proto.prophetstor.api.datahub.configs.Threshold.prototype.setOverrun = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.configs.Threshold} returns this
 */
proto.prophetstor.api.datahub.configs.Threshold.prototype.clearOverrun = function() {
  return this.setOverrun(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.configs.Threshold.prototype.hasOverrun = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.StringValue underrun = 3;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.prophetstor.api.datahub.configs.Threshold.prototype.getUnderrun = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 3));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.prophetstor.api.datahub.configs.Threshold} returns this
*/
proto.prophetstor.api.datahub.configs.Threshold.prototype.setUnderrun = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.configs.Threshold} returns this
 */
proto.prophetstor.api.datahub.configs.Threshold.prototype.clearUnderrun = function() {
  return this.setUnderrun(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.configs.Threshold.prototype.hasUnderrun = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.Selector.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.Selector.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.Selector} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.Selector.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 3, ""),
    match: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.Selector}
 */
proto.prophetstor.api.datahub.configs.Selector.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.Selector;
  return proto.prophetstor.api.datahub.configs.Selector.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.Selector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.Selector}
 */
proto.prophetstor.api.datahub.configs.Selector.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 4:
      var value = /** @type {!proto.prophetstor.api.datahub.configs.Match} */ (reader.readEnum());
      msg.setMatch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.Selector.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.Selector.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.Selector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.Selector.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMatch();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string cluster_name = 1;
 * @return {string}
 */
proto.prophetstor.api.datahub.configs.Selector.prototype.getClusterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.configs.Selector} returns this
 */
proto.prophetstor.api.datahub.configs.Selector.prototype.setClusterName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.prophetstor.api.datahub.configs.Selector.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.configs.Selector} returns this
 */
proto.prophetstor.api.datahub.configs.Selector.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string namespace = 3;
 * @return {string}
 */
proto.prophetstor.api.datahub.configs.Selector.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.configs.Selector} returns this
 */
proto.prophetstor.api.datahub.configs.Selector.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Match match = 4;
 * @return {!proto.prophetstor.api.datahub.configs.Match}
 */
proto.prophetstor.api.datahub.configs.Selector.prototype.getMatch = function() {
  return /** @type {!proto.prophetstor.api.datahub.configs.Match} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.configs.Match} value
 * @return {!proto.prophetstor.api.datahub.configs.Selector} returns this
 */
proto.prophetstor.api.datahub.configs.Selector.prototype.setMatch = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.StandardResource.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.StandardResource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.StandardResource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.StandardResource.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resourceType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    selector: (f = msg.getSelector()) && proto.prophetstor.api.datahub.configs.Selector.toObject(includeInstance, f),
    inheritedRule: jspb.Message.getFieldWithDefault(msg, 4, ""),
    detectionOde: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.StandardResource}
 */
proto.prophetstor.api.datahub.configs.StandardResource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.StandardResource;
  return proto.prophetstor.api.datahub.configs.StandardResource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.StandardResource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.StandardResource}
 */
proto.prophetstor.api.datahub.configs.StandardResource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.prophetstor.api.datahub.configs.ResourceType} */ (reader.readEnum());
      msg.setResourceType(value);
      break;
    case 3:
      var value = new proto.prophetstor.api.datahub.configs.Selector;
      reader.readMessage(value,proto.prophetstor.api.datahub.configs.Selector.deserializeBinaryFromReader);
      msg.setSelector(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setInheritedRule(value);
      break;
    case 5:
      var value = /** @type {!proto.prophetstor.api.datahub.configs.DetectionMode} */ (reader.readEnum());
      msg.setDetectionOde(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.StandardResource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.StandardResource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.StandardResource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.StandardResource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResourceType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getSelector();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.prophetstor.api.datahub.configs.Selector.serializeBinaryToWriter
    );
  }
  f = message.getInheritedRule();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDetectionOde();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.prophetstor.api.datahub.configs.StandardResource.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.configs.StandardResource} returns this
 */
proto.prophetstor.api.datahub.configs.StandardResource.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ResourceType resource_type = 2;
 * @return {!proto.prophetstor.api.datahub.configs.ResourceType}
 */
proto.prophetstor.api.datahub.configs.StandardResource.prototype.getResourceType = function() {
  return /** @type {!proto.prophetstor.api.datahub.configs.ResourceType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.configs.ResourceType} value
 * @return {!proto.prophetstor.api.datahub.configs.StandardResource} returns this
 */
proto.prophetstor.api.datahub.configs.StandardResource.prototype.setResourceType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Selector selector = 3;
 * @return {?proto.prophetstor.api.datahub.configs.Selector}
 */
proto.prophetstor.api.datahub.configs.StandardResource.prototype.getSelector = function() {
  return /** @type{?proto.prophetstor.api.datahub.configs.Selector} */ (
    jspb.Message.getWrapperField(this, proto.prophetstor.api.datahub.configs.Selector, 3));
};


/**
 * @param {?proto.prophetstor.api.datahub.configs.Selector|undefined} value
 * @return {!proto.prophetstor.api.datahub.configs.StandardResource} returns this
*/
proto.prophetstor.api.datahub.configs.StandardResource.prototype.setSelector = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.configs.StandardResource} returns this
 */
proto.prophetstor.api.datahub.configs.StandardResource.prototype.clearSelector = function() {
  return this.setSelector(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.configs.StandardResource.prototype.hasSelector = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string inherited_rule = 4;
 * @return {string}
 */
proto.prophetstor.api.datahub.configs.StandardResource.prototype.getInheritedRule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.configs.StandardResource} returns this
 */
proto.prophetstor.api.datahub.configs.StandardResource.prototype.setInheritedRule = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional DetectionMode detection_ode = 5;
 * @return {!proto.prophetstor.api.datahub.configs.DetectionMode}
 */
proto.prophetstor.api.datahub.configs.StandardResource.prototype.getDetectionOde = function() {
  return /** @type {!proto.prophetstor.api.datahub.configs.DetectionMode} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.configs.DetectionMode} value
 * @return {!proto.prophetstor.api.datahub.configs.StandardResource} returns this
 */
proto.prophetstor.api.datahub.configs.StandardResource.prototype.setDetectionOde = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.configs.StandardRule.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.StandardRule.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.StandardRule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.StandardRule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.StandardRule.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    thresholdsList: jspb.Message.toObjectList(msg.getThresholdsList(),
    proto.prophetstor.api.datahub.configs.Threshold.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.StandardRule}
 */
proto.prophetstor.api.datahub.configs.StandardRule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.StandardRule;
  return proto.prophetstor.api.datahub.configs.StandardRule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.StandardRule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.StandardRule}
 */
proto.prophetstor.api.datahub.configs.StandardRule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.prophetstor.api.datahub.configs.Threshold;
      reader.readMessage(value,proto.prophetstor.api.datahub.configs.Threshold.deserializeBinaryFromReader);
      msg.addThresholds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.StandardRule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.StandardRule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.StandardRule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.StandardRule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getThresholdsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.prophetstor.api.datahub.configs.Threshold.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.prophetstor.api.datahub.configs.StandardRule.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.configs.StandardRule} returns this
 */
proto.prophetstor.api.datahub.configs.StandardRule.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Threshold thresholds = 2;
 * @return {!Array<!proto.prophetstor.api.datahub.configs.Threshold>}
 */
proto.prophetstor.api.datahub.configs.StandardRule.prototype.getThresholdsList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.configs.Threshold>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.prophetstor.api.datahub.configs.Threshold, 2));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.configs.Threshold>} value
 * @return {!proto.prophetstor.api.datahub.configs.StandardRule} returns this
*/
proto.prophetstor.api.datahub.configs.StandardRule.prototype.setThresholdsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.configs.Threshold=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.configs.Threshold}
 */
proto.prophetstor.api.datahub.configs.StandardRule.prototype.addThresholds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.api.datahub.configs.Threshold, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.configs.StandardRule} returns this
 */
proto.prophetstor.api.datahub.configs.StandardRule.prototype.clearThresholdsList = function() {
  return this.setThresholdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.configs.WorkloadThreshold.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.WorkloadThreshold.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.WorkloadThreshold.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.WorkloadThreshold} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.WorkloadThreshold.toObject = function(includeInstance, msg) {
  var f, obj = {
    standardResourceList: jspb.Message.toObjectList(msg.getStandardResourceList(),
    proto.prophetstor.api.datahub.configs.StandardResource.toObject, includeInstance),
    standardRulesList: jspb.Message.toObjectList(msg.getStandardRulesList(),
    proto.prophetstor.api.datahub.configs.StandardRule.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.WorkloadThreshold}
 */
proto.prophetstor.api.datahub.configs.WorkloadThreshold.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.WorkloadThreshold;
  return proto.prophetstor.api.datahub.configs.WorkloadThreshold.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.WorkloadThreshold} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.WorkloadThreshold}
 */
proto.prophetstor.api.datahub.configs.WorkloadThreshold.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.prophetstor.api.datahub.configs.StandardResource;
      reader.readMessage(value,proto.prophetstor.api.datahub.configs.StandardResource.deserializeBinaryFromReader);
      msg.addStandardResource(value);
      break;
    case 2:
      var value = new proto.prophetstor.api.datahub.configs.StandardRule;
      reader.readMessage(value,proto.prophetstor.api.datahub.configs.StandardRule.deserializeBinaryFromReader);
      msg.addStandardRules(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.WorkloadThreshold.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.WorkloadThreshold.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.WorkloadThreshold} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.WorkloadThreshold.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStandardResourceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.prophetstor.api.datahub.configs.StandardResource.serializeBinaryToWriter
    );
  }
  f = message.getStandardRulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.prophetstor.api.datahub.configs.StandardRule.serializeBinaryToWriter
    );
  }
};


/**
 * repeated StandardResource standard_resource = 1;
 * @return {!Array<!proto.prophetstor.api.datahub.configs.StandardResource>}
 */
proto.prophetstor.api.datahub.configs.WorkloadThreshold.prototype.getStandardResourceList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.configs.StandardResource>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.prophetstor.api.datahub.configs.StandardResource, 1));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.configs.StandardResource>} value
 * @return {!proto.prophetstor.api.datahub.configs.WorkloadThreshold} returns this
*/
proto.prophetstor.api.datahub.configs.WorkloadThreshold.prototype.setStandardResourceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.configs.StandardResource=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.configs.StandardResource}
 */
proto.prophetstor.api.datahub.configs.WorkloadThreshold.prototype.addStandardResource = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.prophetstor.api.datahub.configs.StandardResource, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.configs.WorkloadThreshold} returns this
 */
proto.prophetstor.api.datahub.configs.WorkloadThreshold.prototype.clearStandardResourceList = function() {
  return this.setStandardResourceList([]);
};


/**
 * repeated StandardRule standard_rules = 2;
 * @return {!Array<!proto.prophetstor.api.datahub.configs.StandardRule>}
 */
proto.prophetstor.api.datahub.configs.WorkloadThreshold.prototype.getStandardRulesList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.configs.StandardRule>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.prophetstor.api.datahub.configs.StandardRule, 2));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.configs.StandardRule>} value
 * @return {!proto.prophetstor.api.datahub.configs.WorkloadThreshold} returns this
*/
proto.prophetstor.api.datahub.configs.WorkloadThreshold.prototype.setStandardRulesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.configs.StandardRule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.configs.StandardRule}
 */
proto.prophetstor.api.datahub.configs.WorkloadThreshold.prototype.addStandardRules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.api.datahub.configs.StandardRule, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.configs.WorkloadThreshold} returns this
 */
proto.prophetstor.api.datahub.configs.WorkloadThreshold.prototype.clearStandardRulesList = function() {
  return this.setStandardRulesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.configs.Detection.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.configs.Detection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.configs.Detection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.Detection.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectMeta: (f = msg.getObjectMeta()) && prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.toObject(includeInstance, f),
    workloadThreshold: (f = msg.getWorkloadThreshold()) && proto.prophetstor.api.datahub.configs.WorkloadThreshold.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.configs.Detection}
 */
proto.prophetstor.api.datahub.configs.Detection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.configs.Detection;
  return proto.prophetstor.api.datahub.configs.Detection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.configs.Detection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.configs.Detection}
 */
proto.prophetstor.api.datahub.configs.Detection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new prophetstor_api_datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setObjectMeta(value);
      break;
    case 2:
      var value = new proto.prophetstor.api.datahub.configs.WorkloadThreshold;
      reader.readMessage(value,proto.prophetstor.api.datahub.configs.WorkloadThreshold.deserializeBinaryFromReader);
      msg.setWorkloadThreshold(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.configs.Detection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.configs.Detection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.configs.Detection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.configs.Detection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getWorkloadThreshold();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.prophetstor.api.datahub.configs.WorkloadThreshold.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.api.datahub.resources.ObjectMeta object_meta = 1;
 * @return {?proto.prophetstor.api.datahub.resources.ObjectMeta}
 */
proto.prophetstor.api.datahub.configs.Detection.prototype.getObjectMeta = function() {
  return /** @type{?proto.prophetstor.api.datahub.resources.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_resources_metadata_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.resources.ObjectMeta|undefined} value
 * @return {!proto.prophetstor.api.datahub.configs.Detection} returns this
*/
proto.prophetstor.api.datahub.configs.Detection.prototype.setObjectMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.configs.Detection} returns this
 */
proto.prophetstor.api.datahub.configs.Detection.prototype.clearObjectMeta = function() {
  return this.setObjectMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.configs.Detection.prototype.hasObjectMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional WorkloadThreshold workload_threshold = 2;
 * @return {?proto.prophetstor.api.datahub.configs.WorkloadThreshold}
 */
proto.prophetstor.api.datahub.configs.Detection.prototype.getWorkloadThreshold = function() {
  return /** @type{?proto.prophetstor.api.datahub.configs.WorkloadThreshold} */ (
    jspb.Message.getWrapperField(this, proto.prophetstor.api.datahub.configs.WorkloadThreshold, 2));
};


/**
 * @param {?proto.prophetstor.api.datahub.configs.WorkloadThreshold|undefined} value
 * @return {!proto.prophetstor.api.datahub.configs.Detection} returns this
*/
proto.prophetstor.api.datahub.configs.Detection.prototype.setWorkloadThreshold = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.configs.Detection} returns this
 */
proto.prophetstor.api.datahub.configs.Detection.prototype.clearWorkloadThreshold = function() {
  return this.setWorkloadThreshold(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.configs.Detection.prototype.hasWorkloadThreshold = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.prophetstor.api.datahub.configs.MetricType = {
  METRIC_TYPE_UNDEFINED: 0,
  CPU: 1,
  MEMORY: 2
};

/**
 * @enum {number}
 */
proto.prophetstor.api.datahub.configs.Match = {
  MATCH_UNDEFINED: 0,
  EXACT: 1,
  PREFIX: 2,
  SUFFIX: 3
};

/**
 * @enum {number}
 */
proto.prophetstor.api.datahub.configs.DetectionMode = {
  DETECTION_MODE_UNDEFINED: 0,
  REALTIME: 1,
  FORECAST: 2
};

/**
 * @enum {number}
 */
proto.prophetstor.api.datahub.configs.ResourceType = {
  RESOURCE_TYPE_UNDEFINED: 0,
  APPLICATION: 1,
  POD: 2,
  NODE: 3,
  NAMESPACE: 4,
  CLUSTER: 5,
  CONTROLLER: 6,
  GPU: 7
};

goog.object.extend(exports, proto.prophetstor.api.datahub.configs);
