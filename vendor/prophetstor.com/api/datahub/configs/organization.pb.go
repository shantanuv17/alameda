// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: prophetstor/api/datahub/configs/organization.proto

package configs

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	resources "prophetstor.com/api/datahub/resources"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LogicOperator int32

const (
	LogicOperator_LOGIC_OPERATOR_UNDEFINED LogicOperator = 0
	LogicOperator_INCLUDE                  LogicOperator = 1
	LogicOperator_EXCLUDE                  LogicOperator = 2
)

// Enum value maps for LogicOperator.
var (
	LogicOperator_name = map[int32]string{
		0: "LOGIC_OPERATOR_UNDEFINED",
		1: "INCLUDE",
		2: "EXCLUDE",
	}
	LogicOperator_value = map[string]int32{
		"LOGIC_OPERATOR_UNDEFINED": 0,
		"INCLUDE":                  1,
		"EXCLUDE":                  2,
	}
)

func (x LogicOperator) Enum() *LogicOperator {
	p := new(LogicOperator)
	*p = x
	return p
}

func (x LogicOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogicOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_prophetstor_api_datahub_configs_organization_proto_enumTypes[0].Descriptor()
}

func (LogicOperator) Type() protoreflect.EnumType {
	return &file_prophetstor_api_datahub_configs_organization_proto_enumTypes[0]
}

func (x LogicOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogicOperator.Descriptor instead.
func (LogicOperator) EnumDescriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_organization_proto_rawDescGZIP(), []int{0}
}

type DataSourceType int32

const (
	DataSourceType_DATA_SOURCETYPE_UNDEFINED DataSourceType = 0
	DataSourceType_DATADOG                   DataSourceType = 1
	DataSourceType_PROMETHEUS                DataSourceType = 2
)

// Enum value maps for DataSourceType.
var (
	DataSourceType_name = map[int32]string{
		0: "DATA_SOURCETYPE_UNDEFINED",
		1: "DATADOG",
		2: "PROMETHEUS",
	}
	DataSourceType_value = map[string]int32{
		"DATA_SOURCETYPE_UNDEFINED": 0,
		"DATADOG":                   1,
		"PROMETHEUS":                2,
	}
)

func (x DataSourceType) Enum() *DataSourceType {
	p := new(DataSourceType)
	*p = x
	return p
}

func (x DataSourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataSourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_prophetstor_api_datahub_configs_organization_proto_enumTypes[1].Descriptor()
}

func (DataSourceType) Type() protoreflect.EnumType {
	return &file_prophetstor_api_datahub_configs_organization_proto_enumTypes[1]
}

func (x DataSourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataSourceType.Descriptor instead.
func (DataSourceType) EnumDescriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_organization_proto_rawDescGZIP(), []int{1}
}

type FeatureType int32

const (
	FeatureType_FEATURE_TYPE_UNDEFINED FeatureType = 0
	FeatureType_RESOURCE_PLANNING      FeatureType = 1
	FeatureType_COST_ANALYSIS          FeatureType = 2
)

// Enum value maps for FeatureType.
var (
	FeatureType_name = map[int32]string{
		0: "FEATURE_TYPE_UNDEFINED",
		1: "RESOURCE_PLANNING",
		2: "COST_ANALYSIS",
	}
	FeatureType_value = map[string]int32{
		"FEATURE_TYPE_UNDEFINED": 0,
		"RESOURCE_PLANNING":      1,
		"COST_ANALYSIS":          2,
	}
)

func (x FeatureType) Enum() *FeatureType {
	p := new(FeatureType)
	*p = x
	return p
}

func (x FeatureType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FeatureType) Descriptor() protoreflect.EnumDescriptor {
	return file_prophetstor_api_datahub_configs_organization_proto_enumTypes[2].Descriptor()
}

func (FeatureType) Type() protoreflect.EnumType {
	return &file_prophetstor_api_datahub_configs_organization_proto_enumTypes[2]
}

func (x FeatureType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FeatureType.Descriptor instead.
func (FeatureType) EnumDescriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_organization_proto_rawDescGZIP(), []int{2}
}

type FeatureMode int32

const (
	FeatureMode_FEATURE_MODE_UNDEFINED FeatureMode = 0
	FeatureMode_UPLOAD_RESULT          FeatureMode = 1
	FeatureMode_LOCAL_ONLY             FeatureMode = 2
)

// Enum value maps for FeatureMode.
var (
	FeatureMode_name = map[int32]string{
		0: "FEATURE_MODE_UNDEFINED",
		1: "UPLOAD_RESULT",
		2: "LOCAL_ONLY",
	}
	FeatureMode_value = map[string]int32{
		"FEATURE_MODE_UNDEFINED": 0,
		"UPLOAD_RESULT":          1,
		"LOCAL_ONLY":             2,
	}
)

func (x FeatureMode) Enum() *FeatureMode {
	p := new(FeatureMode)
	*p = x
	return p
}

func (x FeatureMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FeatureMode) Descriptor() protoreflect.EnumDescriptor {
	return file_prophetstor_api_datahub_configs_organization_proto_enumTypes[3].Descriptor()
}

func (FeatureMode) Type() protoreflect.EnumType {
	return &file_prophetstor_api_datahub_configs_organization_proto_enumTypes[3]
}

func (x FeatureMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FeatureMode.Descriptor instead.
func (FeatureMode) EnumDescriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_organization_proto_rawDescGZIP(), []int{3}
}

type WatchedNamespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names    []string      `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	Operator LogicOperator `protobuf:"varint,2,opt,name=operator,proto3,enum=prophetstor.api.datahub.configs.LogicOperator" json:"operator,omitempty"`
}

func (x *WatchedNamespace) Reset() {
	*x = WatchedNamespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_configs_organization_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchedNamespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchedNamespace) ProtoMessage() {}

func (x *WatchedNamespace) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_configs_organization_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchedNamespace.ProtoReflect.Descriptor instead.
func (*WatchedNamespace) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_organization_proto_rawDescGZIP(), []int{0}
}

func (x *WatchedNamespace) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *WatchedNamespace) GetOperator() LogicOperator {
	if x != nil {
		return x.Operator
	}
	return LogicOperator_LOGIC_OPERATOR_UNDEFINED
}

type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Key) Reset() {
	*x = Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_configs_organization_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_configs_organization_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_organization_proto_rawDescGZIP(), []int{1}
}

func (x *Key) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type FeatureMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool        `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Mode    FeatureMode `protobuf:"varint,2,opt,name=mode,proto3,enum=prophetstor.api.datahub.configs.FeatureMode" json:"mode,omitempty"`
}

func (x *FeatureMeta) Reset() {
	*x = FeatureMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_configs_organization_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureMeta) ProtoMessage() {}

func (x *FeatureMeta) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_configs_organization_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureMeta.ProtoReflect.Descriptor instead.
func (*FeatureMeta) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_organization_proto_rawDescGZIP(), []int{2}
}

func (x *FeatureMeta) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *FeatureMeta) GetMode() FeatureMode {
	if x != nil {
		return x.Mode
	}
	return FeatureMode_FEATURE_MODE_UNDEFINED
}

type ResourcePlanningFeature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeatureMeta *FeatureMeta `protobuf:"bytes,1,opt,name=feature_meta,json=featureMeta,proto3" json:"feature_meta,omitempty"`
}

func (x *ResourcePlanningFeature) Reset() {
	*x = ResourcePlanningFeature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_configs_organization_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcePlanningFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcePlanningFeature) ProtoMessage() {}

func (x *ResourcePlanningFeature) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_configs_organization_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcePlanningFeature.ProtoReflect.Descriptor instead.
func (*ResourcePlanningFeature) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_organization_proto_rawDescGZIP(), []int{3}
}

func (x *ResourcePlanningFeature) GetFeatureMeta() *FeatureMeta {
	if x != nil {
		return x.FeatureMeta
	}
	return nil
}

type CostAnalysisFeature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeatureMeta *FeatureMeta `protobuf:"bytes,1,opt,name=feature_meta,json=featureMeta,proto3" json:"feature_meta,omitempty"`
}

func (x *CostAnalysisFeature) Reset() {
	*x = CostAnalysisFeature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_configs_organization_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CostAnalysisFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CostAnalysisFeature) ProtoMessage() {}

func (x *CostAnalysisFeature) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_configs_organization_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CostAnalysisFeature.ProtoReflect.Descriptor instead.
func (*CostAnalysisFeature) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_organization_proto_rawDescGZIP(), []int{4}
}

func (x *CostAnalysisFeature) GetFeatureMeta() *FeatureMeta {
	if x != nil {
		return x.FeatureMeta
	}
	return nil
}

type DataSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    DataSourceType `protobuf:"varint,1,opt,name=type,proto3,enum=prophetstor.api.datahub.configs.DataSourceType" json:"type,omitempty"`
	Keys    []*Key         `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	Account string         `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	Address string         `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *DataSource) Reset() {
	*x = DataSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_configs_organization_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSource) ProtoMessage() {}

func (x *DataSource) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_configs_organization_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSource.ProtoReflect.Descriptor instead.
func (*DataSource) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_organization_proto_rawDescGZIP(), []int{5}
}

func (x *DataSource) GetType() DataSourceType {
	if x != nil {
		return x.Type
	}
	return DataSourceType_DATA_SOURCETYPE_UNDEFINED
}

func (x *DataSource) GetKeys() []*Key {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *DataSource) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *DataSource) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type Feature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type FeatureType `protobuf:"varint,1,opt,name=type,proto3,enum=prophetstor.api.datahub.configs.FeatureType" json:"type,omitempty"`
	// Types that are assignable to TypeFeature:
	//	*Feature_ResourcePlanningFeature
	//	*Feature_CostAnalysisFeature
	TypeFeature isFeature_TypeFeature `protobuf_oneof:"type_feature"`
}

func (x *Feature) Reset() {
	*x = Feature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_configs_organization_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Feature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feature) ProtoMessage() {}

func (x *Feature) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_configs_organization_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feature.ProtoReflect.Descriptor instead.
func (*Feature) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_organization_proto_rawDescGZIP(), []int{6}
}

func (x *Feature) GetType() FeatureType {
	if x != nil {
		return x.Type
	}
	return FeatureType_FEATURE_TYPE_UNDEFINED
}

func (m *Feature) GetTypeFeature() isFeature_TypeFeature {
	if m != nil {
		return m.TypeFeature
	}
	return nil
}

func (x *Feature) GetResourcePlanningFeature() *ResourcePlanningFeature {
	if x, ok := x.GetTypeFeature().(*Feature_ResourcePlanningFeature); ok {
		return x.ResourcePlanningFeature
	}
	return nil
}

func (x *Feature) GetCostAnalysisFeature() *CostAnalysisFeature {
	if x, ok := x.GetTypeFeature().(*Feature_CostAnalysisFeature); ok {
		return x.CostAnalysisFeature
	}
	return nil
}

type isFeature_TypeFeature interface {
	isFeature_TypeFeature()
}

type Feature_ResourcePlanningFeature struct {
	ResourcePlanningFeature *ResourcePlanningFeature `protobuf:"bytes,2,opt,name=resource_planning_feature,json=resourcePlanningFeature,proto3,oneof"`
}

type Feature_CostAnalysisFeature struct {
	CostAnalysisFeature *CostAnalysisFeature `protobuf:"bytes,3,opt,name=cost_analysis_feature,json=costAnalysisFeature,proto3,oneof"`
}

func (*Feature_ResourcePlanningFeature) isFeature_TypeFeature() {}

func (*Feature_CostAnalysisFeature) isFeature_TypeFeature() {}

type Cluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DataSource       *DataSource       `protobuf:"bytes,2,opt,name=data_source,json=dataSource,proto3" json:"data_source,omitempty"`
	WatchedNamespace *WatchedNamespace `protobuf:"bytes,3,opt,name=watched_namespace,json=watchedNamespace,proto3" json:"watched_namespace,omitempty"`
	Features         []*Feature        `protobuf:"bytes,4,rep,name=features,proto3" json:"features,omitempty"`
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_configs_organization_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_configs_organization_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_organization_proto_rawDescGZIP(), []int{7}
}

func (x *Cluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cluster) GetDataSource() *DataSource {
	if x != nil {
		return x.DataSource
	}
	return nil
}

func (x *Cluster) GetWatchedNamespace() *WatchedNamespace {
	if x != nil {
		return x.WatchedNamespace
	}
	return nil
}

func (x *Cluster) GetFeatures() []*Feature {
	if x != nil {
		return x.Features
	}
	return nil
}

type Organization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectMeta       *resources.ObjectMeta `protobuf:"bytes,1,opt,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	Tenant           string                `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Features         []*Feature            `protobuf:"bytes,3,rep,name=features,proto3" json:"features,omitempty"`
	DataSource       *DataSource           `protobuf:"bytes,4,opt,name=data_source,json=dataSource,proto3" json:"data_source,omitempty"`
	WatchedNamespace *WatchedNamespace     `protobuf:"bytes,5,opt,name=watched_namespace,json=watchedNamespace,proto3" json:"watched_namespace,omitempty"`
}

func (x *Organization) Reset() {
	*x = Organization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_configs_organization_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Organization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Organization) ProtoMessage() {}

func (x *Organization) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_configs_organization_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Organization.ProtoReflect.Descriptor instead.
func (*Organization) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_configs_organization_proto_rawDescGZIP(), []int{8}
}

func (x *Organization) GetObjectMeta() *resources.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *Organization) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *Organization) GetFeatures() []*Feature {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *Organization) GetDataSource() *DataSource {
	if x != nil {
		return x.DataSource
	}
	return nil
}

func (x *Organization) GetWatchedNamespace() *WatchedNamespace {
	if x != nil {
		return x.WatchedNamespace
	}
	return nil
}

var File_prophetstor_api_datahub_configs_organization_proto protoreflect.FileDescriptor

var file_prophetstor_api_datahub_configs_organization_proto_rawDesc = []byte{
	0x0a, 0x32, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x1a, 0x30, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74,
	0x6f, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x74, 0x0a, 0x10, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x4a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x17, 0x0a,
	0x03, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x69, 0x0a, 0x0b, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x40, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e,
	0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x22, 0x6a, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x4f, 0x0a, 0x0c,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x66, 0x0a,
	0x13, 0x43, 0x6f, 0x73, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x22, 0xbf, 0x01, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65,
	0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xbf, 0x02, 0x0a, 0x07, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x76, 0x0a, 0x19, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68,
	0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x48, 0x00, 0x52, 0x17, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6c,
	0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x6a, 0x0a,
	0x15, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x43,
	0x6f, 0x73, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x48, 0x00, 0x52, 0x13, 0x63, 0x6f, 0x73, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x91, 0x02, 0x0a, 0x07, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0a, 0x64, 0x61, 0x74,
	0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x10, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x70,
	0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0xea, 0x02,
	0x0a, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e,
	0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68,
	0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x0b,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0a,
	0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73,
	0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x10, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2a, 0x47, 0x0a, 0x0d, 0x4c, 0x6f,
	0x67, 0x69, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x18, 0x4c,
	0x4f, 0x47, 0x49, 0x43, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x55, 0x4e,
	0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x43,
	0x4c, 0x55, 0x44, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x43, 0x4c, 0x55, 0x44,
	0x45, 0x10, 0x02, 0x2a, 0x4c, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x41, 0x54, 0x41, 0x44, 0x4f, 0x47, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x4d, 0x45, 0x54, 0x48, 0x45, 0x55, 0x53, 0x10,
	0x02, 0x2a, 0x53, 0x0a, 0x0b, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x16, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11,
	0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x4e, 0x49, 0x4e,
	0x47, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x53, 0x54, 0x5f, 0x41, 0x4e, 0x41, 0x4c,
	0x59, 0x53, 0x49, 0x53, 0x10, 0x02, 0x2a, 0x4c, 0x0a, 0x0b, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45,
	0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x55,
	0x4c, 0x54, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x4f, 0x4e,
	0x4c, 0x59, 0x10, 0x02, 0x42, 0x25, 0x5a, 0x23, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73,
	0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x68, 0x75, 0x62, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_prophetstor_api_datahub_configs_organization_proto_rawDescOnce sync.Once
	file_prophetstor_api_datahub_configs_organization_proto_rawDescData = file_prophetstor_api_datahub_configs_organization_proto_rawDesc
)

func file_prophetstor_api_datahub_configs_organization_proto_rawDescGZIP() []byte {
	file_prophetstor_api_datahub_configs_organization_proto_rawDescOnce.Do(func() {
		file_prophetstor_api_datahub_configs_organization_proto_rawDescData = protoimpl.X.CompressGZIP(file_prophetstor_api_datahub_configs_organization_proto_rawDescData)
	})
	return file_prophetstor_api_datahub_configs_organization_proto_rawDescData
}

var file_prophetstor_api_datahub_configs_organization_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_prophetstor_api_datahub_configs_organization_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_prophetstor_api_datahub_configs_organization_proto_goTypes = []interface{}{
	(LogicOperator)(0),              // 0: prophetstor.api.datahub.configs.LogicOperator
	(DataSourceType)(0),             // 1: prophetstor.api.datahub.configs.DataSourceType
	(FeatureType)(0),                // 2: prophetstor.api.datahub.configs.FeatureType
	(FeatureMode)(0),                // 3: prophetstor.api.datahub.configs.FeatureMode
	(*WatchedNamespace)(nil),        // 4: prophetstor.api.datahub.configs.WatchedNamespace
	(*Key)(nil),                     // 5: prophetstor.api.datahub.configs.Key
	(*FeatureMeta)(nil),             // 6: prophetstor.api.datahub.configs.FeatureMeta
	(*ResourcePlanningFeature)(nil), // 7: prophetstor.api.datahub.configs.ResourcePlanningFeature
	(*CostAnalysisFeature)(nil),     // 8: prophetstor.api.datahub.configs.CostAnalysisFeature
	(*DataSource)(nil),              // 9: prophetstor.api.datahub.configs.DataSource
	(*Feature)(nil),                 // 10: prophetstor.api.datahub.configs.Feature
	(*Cluster)(nil),                 // 11: prophetstor.api.datahub.configs.Cluster
	(*Organization)(nil),            // 12: prophetstor.api.datahub.configs.Organization
	(*resources.ObjectMeta)(nil),    // 13: prophetstor.api.datahub.resources.ObjectMeta
}
var file_prophetstor_api_datahub_configs_organization_proto_depIdxs = []int32{
	0,  // 0: prophetstor.api.datahub.configs.WatchedNamespace.operator:type_name -> prophetstor.api.datahub.configs.LogicOperator
	3,  // 1: prophetstor.api.datahub.configs.FeatureMeta.mode:type_name -> prophetstor.api.datahub.configs.FeatureMode
	6,  // 2: prophetstor.api.datahub.configs.ResourcePlanningFeature.feature_meta:type_name -> prophetstor.api.datahub.configs.FeatureMeta
	6,  // 3: prophetstor.api.datahub.configs.CostAnalysisFeature.feature_meta:type_name -> prophetstor.api.datahub.configs.FeatureMeta
	1,  // 4: prophetstor.api.datahub.configs.DataSource.type:type_name -> prophetstor.api.datahub.configs.DataSourceType
	5,  // 5: prophetstor.api.datahub.configs.DataSource.keys:type_name -> prophetstor.api.datahub.configs.Key
	2,  // 6: prophetstor.api.datahub.configs.Feature.type:type_name -> prophetstor.api.datahub.configs.FeatureType
	7,  // 7: prophetstor.api.datahub.configs.Feature.resource_planning_feature:type_name -> prophetstor.api.datahub.configs.ResourcePlanningFeature
	8,  // 8: prophetstor.api.datahub.configs.Feature.cost_analysis_feature:type_name -> prophetstor.api.datahub.configs.CostAnalysisFeature
	9,  // 9: prophetstor.api.datahub.configs.Cluster.data_source:type_name -> prophetstor.api.datahub.configs.DataSource
	4,  // 10: prophetstor.api.datahub.configs.Cluster.watched_namespace:type_name -> prophetstor.api.datahub.configs.WatchedNamespace
	10, // 11: prophetstor.api.datahub.configs.Cluster.features:type_name -> prophetstor.api.datahub.configs.Feature
	13, // 12: prophetstor.api.datahub.configs.Organization.object_meta:type_name -> prophetstor.api.datahub.resources.ObjectMeta
	10, // 13: prophetstor.api.datahub.configs.Organization.features:type_name -> prophetstor.api.datahub.configs.Feature
	9,  // 14: prophetstor.api.datahub.configs.Organization.data_source:type_name -> prophetstor.api.datahub.configs.DataSource
	4,  // 15: prophetstor.api.datahub.configs.Organization.watched_namespace:type_name -> prophetstor.api.datahub.configs.WatchedNamespace
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_prophetstor_api_datahub_configs_organization_proto_init() }
func file_prophetstor_api_datahub_configs_organization_proto_init() {
	if File_prophetstor_api_datahub_configs_organization_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_prophetstor_api_datahub_configs_organization_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchedNamespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_configs_organization_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_configs_organization_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_configs_organization_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcePlanningFeature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_configs_organization_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CostAnalysisFeature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_configs_organization_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_configs_organization_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Feature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_configs_organization_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_configs_organization_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Organization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_prophetstor_api_datahub_configs_organization_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Feature_ResourcePlanningFeature)(nil),
		(*Feature_CostAnalysisFeature)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prophetstor_api_datahub_configs_organization_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_prophetstor_api_datahub_configs_organization_proto_goTypes,
		DependencyIndexes: file_prophetstor_api_datahub_configs_organization_proto_depIdxs,
		EnumInfos:         file_prophetstor_api_datahub_configs_organization_proto_enumTypes,
		MessageInfos:      file_prophetstor_api_datahub_configs_organization_proto_msgTypes,
	}.Build()
	File_prophetstor_api_datahub_configs_organization_proto = out.File
	file_prophetstor_api_datahub_configs_organization_proto_rawDesc = nil
	file_prophetstor_api_datahub_configs_organization_proto_goTypes = nil
	file_prophetstor_api_datahub_configs_organization_proto_depIdxs = nil
}
