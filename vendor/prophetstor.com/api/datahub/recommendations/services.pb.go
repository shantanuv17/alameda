// This file has messages related to recommendations of containers, pods, and nodes

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: prophetstor/api/datahub/recommendations/services.proto

package recommendations

import (
	proto "github.com/golang/protobuf/proto"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "prophetstor.com/api/datahub/common"
	resources "prophetstor.com/api/datahub/resources"
	schemas "prophetstor.com/api/datahub/schemas"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//*
// Represents a request for creating pods' recommendation.
type CreatePodRecommendationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodRecommendations []*PodRecommendation `protobuf:"bytes,1,rep,name=pod_recommendations,json=podRecommendations,proto3" json:"pod_recommendations,omitempty"`
	Granularity        int64                `protobuf:"varint,2,opt,name=granularity,proto3" json:"granularity,omitempty"`
}

func (x *CreatePodRecommendationsRequest) Reset() {
	*x = CreatePodRecommendationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePodRecommendationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePodRecommendationsRequest) ProtoMessage() {}

func (x *CreatePodRecommendationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePodRecommendationsRequest.ProtoReflect.Descriptor instead.
func (*CreatePodRecommendationsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePodRecommendationsRequest) GetPodRecommendations() []*PodRecommendation {
	if x != nil {
		return x.PodRecommendations
	}
	return nil
}

func (x *CreatePodRecommendationsRequest) GetGranularity() int64 {
	if x != nil {
		return x.Granularity
	}
	return 0
}

//*
// Represents a request for creating controllers' recommendation.
type CreateControllerRecommendationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControllerRecommendations []*ControllerRecommendation `protobuf:"bytes,1,rep,name=controller_recommendations,json=controllerRecommendations,proto3" json:"controller_recommendations,omitempty"`
}

func (x *CreateControllerRecommendationsRequest) Reset() {
	*x = CreateControllerRecommendationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateControllerRecommendationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateControllerRecommendationsRequest) ProtoMessage() {}

func (x *CreateControllerRecommendationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateControllerRecommendationsRequest.ProtoReflect.Descriptor instead.
func (*CreateControllerRecommendationsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{1}
}

func (x *CreateControllerRecommendationsRequest) GetControllerRecommendations() []*ControllerRecommendation {
	if x != nil {
		return x.ControllerRecommendations
	}
	return nil
}

//*
// Represents a request for creating alameda scalers' recommendation.
type CreateApplicationRecommendationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationRecommendations []*ApplicationRecommendation `protobuf:"bytes,1,rep,name=application_recommendations,json=applicationRecommendations,proto3" json:"application_recommendations,omitempty"`
}

func (x *CreateApplicationRecommendationsRequest) Reset() {
	*x = CreateApplicationRecommendationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApplicationRecommendationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApplicationRecommendationsRequest) ProtoMessage() {}

func (x *CreateApplicationRecommendationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApplicationRecommendationsRequest.ProtoReflect.Descriptor instead.
func (*CreateApplicationRecommendationsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{2}
}

func (x *CreateApplicationRecommendationsRequest) GetApplicationRecommendations() []*ApplicationRecommendation {
	if x != nil {
		return x.ApplicationRecommendations
	}
	return nil
}

//*
// Represents a request for creating namespaces' recommendation.
type CreateNamespaceRecommendationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceRecommendations []*NamespaceRecommendation `protobuf:"bytes,1,rep,name=namespace_recommendations,json=namespaceRecommendations,proto3" json:"namespace_recommendations,omitempty"`
}

func (x *CreateNamespaceRecommendationsRequest) Reset() {
	*x = CreateNamespaceRecommendationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNamespaceRecommendationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespaceRecommendationsRequest) ProtoMessage() {}

func (x *CreateNamespaceRecommendationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespaceRecommendationsRequest.ProtoReflect.Descriptor instead.
func (*CreateNamespaceRecommendationsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{3}
}

func (x *CreateNamespaceRecommendationsRequest) GetNamespaceRecommendations() []*NamespaceRecommendation {
	if x != nil {
		return x.NamespaceRecommendations
	}
	return nil
}

//*
// Represents a request for creating nodes' recommendation.
type CreateNodeRecommendationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeRecommendations []*NodeRecommendation `protobuf:"bytes,1,rep,name=node_recommendations,json=nodeRecommendations,proto3" json:"node_recommendations,omitempty"`
}

func (x *CreateNodeRecommendationsRequest) Reset() {
	*x = CreateNodeRecommendationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNodeRecommendationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodeRecommendationsRequest) ProtoMessage() {}

func (x *CreateNodeRecommendationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodeRecommendationsRequest.ProtoReflect.Descriptor instead.
func (*CreateNodeRecommendationsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{4}
}

func (x *CreateNodeRecommendationsRequest) GetNodeRecommendations() []*NodeRecommendation {
	if x != nil {
		return x.NodeRecommendations
	}
	return nil
}

//*
// Represents a request for creating clusters' recommendation.
type CreateClusterRecommendationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterRecommendations []*ClusterRecommendation `protobuf:"bytes,1,rep,name=cluster_recommendations,json=clusterRecommendations,proto3" json:"cluster_recommendations,omitempty"`
}

func (x *CreateClusterRecommendationsRequest) Reset() {
	*x = CreateClusterRecommendationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClusterRecommendationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClusterRecommendationsRequest) ProtoMessage() {}

func (x *CreateClusterRecommendationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClusterRecommendationsRequest.ProtoReflect.Descriptor instead.
func (*CreateClusterRecommendationsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{5}
}

func (x *CreateClusterRecommendationsRequest) GetClusterRecommendations() []*ClusterRecommendation {
	if x != nil {
		return x.ClusterRecommendations
	}
	return nil
}

//*
// Represents a request for listing recommendations of pods.
type ListPodRecommendationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryCondition *common.QueryCondition  `protobuf:"bytes,1,opt,name=query_condition,json=queryCondition,proto3" json:"query_condition,omitempty"`
	ObjectMeta     []*resources.ObjectMeta `protobuf:"bytes,2,rep,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	Kind           resources.Kind          `protobuf:"varint,3,opt,name=kind,proto3,enum=prophetstor.api.datahub.resources.Kind" json:"kind,omitempty"`
	Granularity    int64                   `protobuf:"varint,4,opt,name=granularity,proto3" json:"granularity,omitempty"`
}

func (x *ListPodRecommendationsRequest) Reset() {
	*x = ListPodRecommendationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPodRecommendationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPodRecommendationsRequest) ProtoMessage() {}

func (x *ListPodRecommendationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPodRecommendationsRequest.ProtoReflect.Descriptor instead.
func (*ListPodRecommendationsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{6}
}

func (x *ListPodRecommendationsRequest) GetQueryCondition() *common.QueryCondition {
	if x != nil {
		return x.QueryCondition
	}
	return nil
}

func (x *ListPodRecommendationsRequest) GetObjectMeta() []*resources.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *ListPodRecommendationsRequest) GetKind() resources.Kind {
	if x != nil {
		return x.Kind
	}
	return resources.Kind_KIND_UNDEFINED
}

func (x *ListPodRecommendationsRequest) GetGranularity() int64 {
	if x != nil {
		return x.Granularity
	}
	return 0
}

//*
// Represents a response for listing pods recommendations request.
type ListPodRecommendationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status             *status.Status       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	PodRecommendations []*PodRecommendation `protobuf:"bytes,2,rep,name=pod_recommendations,json=podRecommendations,proto3" json:"pod_recommendations,omitempty"`
}

func (x *ListPodRecommendationsResponse) Reset() {
	*x = ListPodRecommendationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPodRecommendationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPodRecommendationsResponse) ProtoMessage() {}

func (x *ListPodRecommendationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPodRecommendationsResponse.ProtoReflect.Descriptor instead.
func (*ListPodRecommendationsResponse) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{7}
}

func (x *ListPodRecommendationsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListPodRecommendationsResponse) GetPodRecommendations() []*PodRecommendation {
	if x != nil {
		return x.PodRecommendations
	}
	return nil
}

//*
// Represents a request for listing recommendations of controllers.
type ListControllerRecommendationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryCondition  *common.QueryCondition    `protobuf:"bytes,1,opt,name=query_condition,json=queryCondition,proto3" json:"query_condition,omitempty"`
	ObjectMeta      []*resources.ObjectMeta   `protobuf:"bytes,2,rep,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	Kind            resources.Kind            `protobuf:"varint,3,opt,name=kind,proto3,enum=prophetstor.api.datahub.resources.Kind" json:"kind,omitempty"`
	RecommendedType ControllerRecommendedType `protobuf:"varint,4,opt,name=recommended_type,json=recommendedType,proto3,enum=prophetstor.api.datahub.recommendations.ControllerRecommendedType" json:"recommended_type,omitempty"`
}

func (x *ListControllerRecommendationsRequest) Reset() {
	*x = ListControllerRecommendationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListControllerRecommendationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListControllerRecommendationsRequest) ProtoMessage() {}

func (x *ListControllerRecommendationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListControllerRecommendationsRequest.ProtoReflect.Descriptor instead.
func (*ListControllerRecommendationsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{8}
}

func (x *ListControllerRecommendationsRequest) GetQueryCondition() *common.QueryCondition {
	if x != nil {
		return x.QueryCondition
	}
	return nil
}

func (x *ListControllerRecommendationsRequest) GetObjectMeta() []*resources.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *ListControllerRecommendationsRequest) GetKind() resources.Kind {
	if x != nil {
		return x.Kind
	}
	return resources.Kind_KIND_UNDEFINED
}

func (x *ListControllerRecommendationsRequest) GetRecommendedType() ControllerRecommendedType {
	if x != nil {
		return x.RecommendedType
	}
	return ControllerRecommendedType_CRT_UNDEFINED
}

//*
// Represents a response for listing controllers recommendations request.
type ListControllerRecommendationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                    *status.Status              `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ControllerRecommendations []*ControllerRecommendation `protobuf:"bytes,2,rep,name=controller_recommendations,json=controllerRecommendations,proto3" json:"controller_recommendations,omitempty"`
}

func (x *ListControllerRecommendationsResponse) Reset() {
	*x = ListControllerRecommendationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListControllerRecommendationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListControllerRecommendationsResponse) ProtoMessage() {}

func (x *ListControllerRecommendationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListControllerRecommendationsResponse.ProtoReflect.Descriptor instead.
func (*ListControllerRecommendationsResponse) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{9}
}

func (x *ListControllerRecommendationsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListControllerRecommendationsResponse) GetControllerRecommendations() []*ControllerRecommendation {
	if x != nil {
		return x.ControllerRecommendations
	}
	return nil
}

//*
// Represents a request for listing recommendations of alameda scalers.
type ListApplicationRecommendationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryCondition  *common.QueryCondition    `protobuf:"bytes,1,opt,name=query_condition,json=queryCondition,proto3" json:"query_condition,omitempty"`
	ObjectMeta      []*resources.ObjectMeta   `protobuf:"bytes,2,rep,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	Kind            resources.Kind            `protobuf:"varint,3,opt,name=kind,proto3,enum=prophetstor.api.datahub.resources.Kind" json:"kind,omitempty"`
	RecommendedType ControllerRecommendedType `protobuf:"varint,4,opt,name=recommended_type,json=recommendedType,proto3,enum=prophetstor.api.datahub.recommendations.ControllerRecommendedType" json:"recommended_type,omitempty"`
}

func (x *ListApplicationRecommendationsRequest) Reset() {
	*x = ListApplicationRecommendationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApplicationRecommendationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationRecommendationsRequest) ProtoMessage() {}

func (x *ListApplicationRecommendationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApplicationRecommendationsRequest.ProtoReflect.Descriptor instead.
func (*ListApplicationRecommendationsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{10}
}

func (x *ListApplicationRecommendationsRequest) GetQueryCondition() *common.QueryCondition {
	if x != nil {
		return x.QueryCondition
	}
	return nil
}

func (x *ListApplicationRecommendationsRequest) GetObjectMeta() []*resources.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *ListApplicationRecommendationsRequest) GetKind() resources.Kind {
	if x != nil {
		return x.Kind
	}
	return resources.Kind_KIND_UNDEFINED
}

func (x *ListApplicationRecommendationsRequest) GetRecommendedType() ControllerRecommendedType {
	if x != nil {
		return x.RecommendedType
	}
	return ControllerRecommendedType_CRT_UNDEFINED
}

//*
// Represents a response for listing alameda scalers recommendations request.
type ListApplicationRecommendationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                     *status.Status               `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ApplicationRecommendations []*ApplicationRecommendation `protobuf:"bytes,2,rep,name=application_recommendations,json=applicationRecommendations,proto3" json:"application_recommendations,omitempty"`
}

func (x *ListApplicationRecommendationsResponse) Reset() {
	*x = ListApplicationRecommendationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApplicationRecommendationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationRecommendationsResponse) ProtoMessage() {}

func (x *ListApplicationRecommendationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApplicationRecommendationsResponse.ProtoReflect.Descriptor instead.
func (*ListApplicationRecommendationsResponse) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{11}
}

func (x *ListApplicationRecommendationsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListApplicationRecommendationsResponse) GetApplicationRecommendations() []*ApplicationRecommendation {
	if x != nil {
		return x.ApplicationRecommendations
	}
	return nil
}

//*
// Represents a request for listing recommendations of namespaces.
type ListNamespaceRecommendationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryCondition  *common.QueryCondition    `protobuf:"bytes,1,opt,name=query_condition,json=queryCondition,proto3" json:"query_condition,omitempty"`
	ObjectMeta      []*resources.ObjectMeta   `protobuf:"bytes,2,rep,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	Kind            resources.Kind            `protobuf:"varint,3,opt,name=kind,proto3,enum=prophetstor.api.datahub.resources.Kind" json:"kind,omitempty"`
	RecommendedType ControllerRecommendedType `protobuf:"varint,4,opt,name=recommended_type,json=recommendedType,proto3,enum=prophetstor.api.datahub.recommendations.ControllerRecommendedType" json:"recommended_type,omitempty"`
}

func (x *ListNamespaceRecommendationsRequest) Reset() {
	*x = ListNamespaceRecommendationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespaceRecommendationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceRecommendationsRequest) ProtoMessage() {}

func (x *ListNamespaceRecommendationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceRecommendationsRequest.ProtoReflect.Descriptor instead.
func (*ListNamespaceRecommendationsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{12}
}

func (x *ListNamespaceRecommendationsRequest) GetQueryCondition() *common.QueryCondition {
	if x != nil {
		return x.QueryCondition
	}
	return nil
}

func (x *ListNamespaceRecommendationsRequest) GetObjectMeta() []*resources.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *ListNamespaceRecommendationsRequest) GetKind() resources.Kind {
	if x != nil {
		return x.Kind
	}
	return resources.Kind_KIND_UNDEFINED
}

func (x *ListNamespaceRecommendationsRequest) GetRecommendedType() ControllerRecommendedType {
	if x != nil {
		return x.RecommendedType
	}
	return ControllerRecommendedType_CRT_UNDEFINED
}

//*
// Represents a response for listing namespaces recommendations request.
type ListNamespaceRecommendationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                   *status.Status             `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	NamespaceRecommendations []*NamespaceRecommendation `protobuf:"bytes,2,rep,name=namespace_recommendations,json=namespaceRecommendations,proto3" json:"namespace_recommendations,omitempty"`
}

func (x *ListNamespaceRecommendationsResponse) Reset() {
	*x = ListNamespaceRecommendationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespaceRecommendationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceRecommendationsResponse) ProtoMessage() {}

func (x *ListNamespaceRecommendationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceRecommendationsResponse.ProtoReflect.Descriptor instead.
func (*ListNamespaceRecommendationsResponse) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{13}
}

func (x *ListNamespaceRecommendationsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListNamespaceRecommendationsResponse) GetNamespaceRecommendations() []*NamespaceRecommendation {
	if x != nil {
		return x.NamespaceRecommendations
	}
	return nil
}

//*
// Represents a request for listing recommendations of nodes.
type ListNodeRecommendationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryCondition  *common.QueryCondition    `protobuf:"bytes,1,opt,name=query_condition,json=queryCondition,proto3" json:"query_condition,omitempty"`
	ObjectMeta      []*resources.ObjectMeta   `protobuf:"bytes,2,rep,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	Kind            resources.Kind            `protobuf:"varint,3,opt,name=kind,proto3,enum=prophetstor.api.datahub.resources.Kind" json:"kind,omitempty"`
	RecommendedType ControllerRecommendedType `protobuf:"varint,4,opt,name=recommended_type,json=recommendedType,proto3,enum=prophetstor.api.datahub.recommendations.ControllerRecommendedType" json:"recommended_type,omitempty"`
}

func (x *ListNodeRecommendationsRequest) Reset() {
	*x = ListNodeRecommendationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodeRecommendationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeRecommendationsRequest) ProtoMessage() {}

func (x *ListNodeRecommendationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeRecommendationsRequest.ProtoReflect.Descriptor instead.
func (*ListNodeRecommendationsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{14}
}

func (x *ListNodeRecommendationsRequest) GetQueryCondition() *common.QueryCondition {
	if x != nil {
		return x.QueryCondition
	}
	return nil
}

func (x *ListNodeRecommendationsRequest) GetObjectMeta() []*resources.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *ListNodeRecommendationsRequest) GetKind() resources.Kind {
	if x != nil {
		return x.Kind
	}
	return resources.Kind_KIND_UNDEFINED
}

func (x *ListNodeRecommendationsRequest) GetRecommendedType() ControllerRecommendedType {
	if x != nil {
		return x.RecommendedType
	}
	return ControllerRecommendedType_CRT_UNDEFINED
}

//*
// Represents a response for listing nodes recommendations request.
type ListNodeRecommendationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status              *status.Status        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	NodeRecommendations []*NodeRecommendation `protobuf:"bytes,2,rep,name=node_recommendations,json=nodeRecommendations,proto3" json:"node_recommendations,omitempty"`
}

func (x *ListNodeRecommendationsResponse) Reset() {
	*x = ListNodeRecommendationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodeRecommendationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeRecommendationsResponse) ProtoMessage() {}

func (x *ListNodeRecommendationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeRecommendationsResponse.ProtoReflect.Descriptor instead.
func (*ListNodeRecommendationsResponse) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{15}
}

func (x *ListNodeRecommendationsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListNodeRecommendationsResponse) GetNodeRecommendations() []*NodeRecommendation {
	if x != nil {
		return x.NodeRecommendations
	}
	return nil
}

//*
// Represents a request for listing recommendations of clusters.
type ListClusterRecommendationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryCondition  *common.QueryCondition    `protobuf:"bytes,1,opt,name=query_condition,json=queryCondition,proto3" json:"query_condition,omitempty"`
	ObjectMeta      []*resources.ObjectMeta   `protobuf:"bytes,2,rep,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	Kind            resources.Kind            `protobuf:"varint,3,opt,name=kind,proto3,enum=prophetstor.api.datahub.resources.Kind" json:"kind,omitempty"`
	RecommendedType ControllerRecommendedType `protobuf:"varint,4,opt,name=recommended_type,json=recommendedType,proto3,enum=prophetstor.api.datahub.recommendations.ControllerRecommendedType" json:"recommended_type,omitempty"`
}

func (x *ListClusterRecommendationsRequest) Reset() {
	*x = ListClusterRecommendationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClusterRecommendationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterRecommendationsRequest) ProtoMessage() {}

func (x *ListClusterRecommendationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterRecommendationsRequest.ProtoReflect.Descriptor instead.
func (*ListClusterRecommendationsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{16}
}

func (x *ListClusterRecommendationsRequest) GetQueryCondition() *common.QueryCondition {
	if x != nil {
		return x.QueryCondition
	}
	return nil
}

func (x *ListClusterRecommendationsRequest) GetObjectMeta() []*resources.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *ListClusterRecommendationsRequest) GetKind() resources.Kind {
	if x != nil {
		return x.Kind
	}
	return resources.Kind_KIND_UNDEFINED
}

func (x *ListClusterRecommendationsRequest) GetRecommendedType() ControllerRecommendedType {
	if x != nil {
		return x.RecommendedType
	}
	return ControllerRecommendedType_CRT_UNDEFINED
}

//*
// Represents a response for listing clusters recommendations request.
type ListClusterRecommendationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                 *status.Status           `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ClusterRecommendations []*ClusterRecommendation `protobuf:"bytes,2,rep,name=cluster_recommendations,json=clusterRecommendations,proto3" json:"cluster_recommendations,omitempty"`
}

func (x *ListClusterRecommendationsResponse) Reset() {
	*x = ListClusterRecommendationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClusterRecommendationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterRecommendationsResponse) ProtoMessage() {}

func (x *ListClusterRecommendationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterRecommendationsResponse.ProtoReflect.Descriptor instead.
func (*ListClusterRecommendationsResponse) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{17}
}

func (x *ListClusterRecommendationsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListClusterRecommendationsResponse) GetClusterRecommendations() []*ClusterRecommendation {
	if x != nil {
		return x.ClusterRecommendations
	}
	return nil
}

type CreateRecommendationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchemaMeta      *schemas.SchemaMeta    `protobuf:"bytes,1,opt,name=schema_meta,json=schemaMeta,proto3" json:"schema_meta,omitempty"`
	Recommendations []*WriteRecommendation `protobuf:"bytes,2,rep,name=recommendations,proto3" json:"recommendations,omitempty"`
}

func (x *CreateRecommendationsRequest) Reset() {
	*x = CreateRecommendationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRecommendationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecommendationsRequest) ProtoMessage() {}

func (x *CreateRecommendationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecommendationsRequest.ProtoReflect.Descriptor instead.
func (*CreateRecommendationsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{18}
}

func (x *CreateRecommendationsRequest) GetSchemaMeta() *schemas.SchemaMeta {
	if x != nil {
		return x.SchemaMeta
	}
	return nil
}

func (x *CreateRecommendationsRequest) GetRecommendations() []*WriteRecommendation {
	if x != nil {
		return x.Recommendations
	}
	return nil
}

type ListRecommendationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryCondition *common.QueryCondition `protobuf:"bytes,1,opt,name=query_condition,json=queryCondition,proto3" json:"query_condition,omitempty"`
	SchemaMeta     *schemas.SchemaMeta    `protobuf:"bytes,2,opt,name=schema_meta,json=schemaMeta,proto3" json:"schema_meta,omitempty"`
}

func (x *ListRecommendationsRequest) Reset() {
	*x = ListRecommendationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRecommendationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecommendationsRequest) ProtoMessage() {}

func (x *ListRecommendationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecommendationsRequest.ProtoReflect.Descriptor instead.
func (*ListRecommendationsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{19}
}

func (x *ListRecommendationsRequest) GetQueryCondition() *common.QueryCondition {
	if x != nil {
		return x.QueryCondition
	}
	return nil
}

func (x *ListRecommendationsRequest) GetSchemaMeta() *schemas.SchemaMeta {
	if x != nil {
		return x.SchemaMeta
	}
	return nil
}

type ListRecommendationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          *status.Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Recommendations *Recommendation `protobuf:"bytes,2,opt,name=recommendations,proto3" json:"recommendations,omitempty"`
}

func (x *ListRecommendationsResponse) Reset() {
	*x = ListRecommendationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRecommendationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecommendationsResponse) ProtoMessage() {}

func (x *ListRecommendationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecommendationsResponse.ProtoReflect.Descriptor instead.
func (*ListRecommendationsResponse) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP(), []int{20}
}

func (x *ListRecommendationsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListRecommendationsResponse) GetRecommendations() *Recommendation {
	if x != nil {
		return x.Recommendations
	}
	return nil
}

var File_prophetstor_api_datahub_recommendations_services_proto protoreflect.FileDescriptor

var file_prophetstor_api_datahub_recommendations_services_proto_rawDesc = []byte{
	0x0a, 0x36, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x27, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65,
	0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x3d, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33,
	0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74,
	0x6f, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x01, 0x0a, 0x1f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x6b, 0x0a, 0x13, 0x70, 0x6f, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x70, 0x6f, 0x64, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x22, 0xab,
	0x01, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x80, 0x01, 0x0a, 0x1a, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x19, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xaf, 0x01, 0x0a,
	0x27, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x83, 0x01, 0x0a, 0x1b, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x1a, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa6,
	0x01, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x7d, 0x0a, 0x19, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x18, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6e, 0x0a, 0x14,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x9e, 0x01, 0x0a,
	0x23, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x77, 0x0a, 0x17, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73,
	0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa7, 0x02,
	0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x57, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68,
	0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74,
	0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x72, 0x61, 0x6e,
	0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x22, 0xb9, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x6b, 0x0a, 0x13, 0x70, 0x6f, 0x64, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f,
	0x64, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x12, 0x70, 0x6f, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0xfb, 0x02, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x0f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73,
	0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x12, 0x6d, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xd6, 0x01, 0x0a, 0x25, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x80, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x19, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xfc, 0x02, 0x0a, 0x25, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a,
	0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x3b, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x6d, 0x0a, 0x10, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74,
	0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0xda, 0x01, 0x0a, 0x26, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x83, 0x01, 0x0a, 0x1b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74,
	0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1a, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xfa, 0x02, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57,
	0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65,
	0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73,
	0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x12, 0x6d, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x22, 0xd1, 0x01, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x7d, 0x0a, 0x19, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x18, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xf5, 0x02, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x0f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68,
	0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68,
	0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x12, 0x6d, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xbd, 0x01, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x6e, 0x0a, 0x14, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e,
	0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x6e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0xf8, 0x02, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e,
	0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x3b,
	0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x6d, 0x0a, 0x10, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73,
	0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x22, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x77, 0x0a,
	0x17, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xd4, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x66, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xc3, 0x01,
	0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x0f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73,
	0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4d,
	0x65, 0x74, 0x61, 0x22, 0xac, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x61, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68,
	0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68,
	0x75, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x42, 0x2d, 0x5a, 0x2b, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prophetstor_api_datahub_recommendations_services_proto_rawDescOnce sync.Once
	file_prophetstor_api_datahub_recommendations_services_proto_rawDescData = file_prophetstor_api_datahub_recommendations_services_proto_rawDesc
)

func file_prophetstor_api_datahub_recommendations_services_proto_rawDescGZIP() []byte {
	file_prophetstor_api_datahub_recommendations_services_proto_rawDescOnce.Do(func() {
		file_prophetstor_api_datahub_recommendations_services_proto_rawDescData = protoimpl.X.CompressGZIP(file_prophetstor_api_datahub_recommendations_services_proto_rawDescData)
	})
	return file_prophetstor_api_datahub_recommendations_services_proto_rawDescData
}

var file_prophetstor_api_datahub_recommendations_services_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_prophetstor_api_datahub_recommendations_services_proto_goTypes = []interface{}{
	(*CreatePodRecommendationsRequest)(nil),         // 0: prophetstor.api.datahub.recommendations.CreatePodRecommendationsRequest
	(*CreateControllerRecommendationsRequest)(nil),  // 1: prophetstor.api.datahub.recommendations.CreateControllerRecommendationsRequest
	(*CreateApplicationRecommendationsRequest)(nil), // 2: prophetstor.api.datahub.recommendations.CreateApplicationRecommendationsRequest
	(*CreateNamespaceRecommendationsRequest)(nil),   // 3: prophetstor.api.datahub.recommendations.CreateNamespaceRecommendationsRequest
	(*CreateNodeRecommendationsRequest)(nil),        // 4: prophetstor.api.datahub.recommendations.CreateNodeRecommendationsRequest
	(*CreateClusterRecommendationsRequest)(nil),     // 5: prophetstor.api.datahub.recommendations.CreateClusterRecommendationsRequest
	(*ListPodRecommendationsRequest)(nil),           // 6: prophetstor.api.datahub.recommendations.ListPodRecommendationsRequest
	(*ListPodRecommendationsResponse)(nil),          // 7: prophetstor.api.datahub.recommendations.ListPodRecommendationsResponse
	(*ListControllerRecommendationsRequest)(nil),    // 8: prophetstor.api.datahub.recommendations.ListControllerRecommendationsRequest
	(*ListControllerRecommendationsResponse)(nil),   // 9: prophetstor.api.datahub.recommendations.ListControllerRecommendationsResponse
	(*ListApplicationRecommendationsRequest)(nil),   // 10: prophetstor.api.datahub.recommendations.ListApplicationRecommendationsRequest
	(*ListApplicationRecommendationsResponse)(nil),  // 11: prophetstor.api.datahub.recommendations.ListApplicationRecommendationsResponse
	(*ListNamespaceRecommendationsRequest)(nil),     // 12: prophetstor.api.datahub.recommendations.ListNamespaceRecommendationsRequest
	(*ListNamespaceRecommendationsResponse)(nil),    // 13: prophetstor.api.datahub.recommendations.ListNamespaceRecommendationsResponse
	(*ListNodeRecommendationsRequest)(nil),          // 14: prophetstor.api.datahub.recommendations.ListNodeRecommendationsRequest
	(*ListNodeRecommendationsResponse)(nil),         // 15: prophetstor.api.datahub.recommendations.ListNodeRecommendationsResponse
	(*ListClusterRecommendationsRequest)(nil),       // 16: prophetstor.api.datahub.recommendations.ListClusterRecommendationsRequest
	(*ListClusterRecommendationsResponse)(nil),      // 17: prophetstor.api.datahub.recommendations.ListClusterRecommendationsResponse
	(*CreateRecommendationsRequest)(nil),            // 18: prophetstor.api.datahub.recommendations.CreateRecommendationsRequest
	(*ListRecommendationsRequest)(nil),              // 19: prophetstor.api.datahub.recommendations.ListRecommendationsRequest
	(*ListRecommendationsResponse)(nil),             // 20: prophetstor.api.datahub.recommendations.ListRecommendationsResponse
	(*PodRecommendation)(nil),                       // 21: prophetstor.api.datahub.recommendations.PodRecommendation
	(*ControllerRecommendation)(nil),                // 22: prophetstor.api.datahub.recommendations.ControllerRecommendation
	(*ApplicationRecommendation)(nil),               // 23: prophetstor.api.datahub.recommendations.ApplicationRecommendation
	(*NamespaceRecommendation)(nil),                 // 24: prophetstor.api.datahub.recommendations.NamespaceRecommendation
	(*NodeRecommendation)(nil),                      // 25: prophetstor.api.datahub.recommendations.NodeRecommendation
	(*ClusterRecommendation)(nil),                   // 26: prophetstor.api.datahub.recommendations.ClusterRecommendation
	(*common.QueryCondition)(nil),                   // 27: prophetstor.api.datahub.common.QueryCondition
	(*resources.ObjectMeta)(nil),                    // 28: prophetstor.api.datahub.resources.ObjectMeta
	(resources.Kind)(0),                             // 29: prophetstor.api.datahub.resources.Kind
	(*status.Status)(nil),                           // 30: google.rpc.Status
	(ControllerRecommendedType)(0),                  // 31: prophetstor.api.datahub.recommendations.ControllerRecommendedType
	(*schemas.SchemaMeta)(nil),                      // 32: prophetstor.api.datahub.schemas.SchemaMeta
	(*WriteRecommendation)(nil),                     // 33: prophetstor.api.datahub.recommendations.WriteRecommendation
	(*Recommendation)(nil),                          // 34: prophetstor.api.datahub.recommendations.Recommendation
}
var file_prophetstor_api_datahub_recommendations_services_proto_depIdxs = []int32{
	21, // 0: prophetstor.api.datahub.recommendations.CreatePodRecommendationsRequest.pod_recommendations:type_name -> prophetstor.api.datahub.recommendations.PodRecommendation
	22, // 1: prophetstor.api.datahub.recommendations.CreateControllerRecommendationsRequest.controller_recommendations:type_name -> prophetstor.api.datahub.recommendations.ControllerRecommendation
	23, // 2: prophetstor.api.datahub.recommendations.CreateApplicationRecommendationsRequest.application_recommendations:type_name -> prophetstor.api.datahub.recommendations.ApplicationRecommendation
	24, // 3: prophetstor.api.datahub.recommendations.CreateNamespaceRecommendationsRequest.namespace_recommendations:type_name -> prophetstor.api.datahub.recommendations.NamespaceRecommendation
	25, // 4: prophetstor.api.datahub.recommendations.CreateNodeRecommendationsRequest.node_recommendations:type_name -> prophetstor.api.datahub.recommendations.NodeRecommendation
	26, // 5: prophetstor.api.datahub.recommendations.CreateClusterRecommendationsRequest.cluster_recommendations:type_name -> prophetstor.api.datahub.recommendations.ClusterRecommendation
	27, // 6: prophetstor.api.datahub.recommendations.ListPodRecommendationsRequest.query_condition:type_name -> prophetstor.api.datahub.common.QueryCondition
	28, // 7: prophetstor.api.datahub.recommendations.ListPodRecommendationsRequest.object_meta:type_name -> prophetstor.api.datahub.resources.ObjectMeta
	29, // 8: prophetstor.api.datahub.recommendations.ListPodRecommendationsRequest.kind:type_name -> prophetstor.api.datahub.resources.Kind
	30, // 9: prophetstor.api.datahub.recommendations.ListPodRecommendationsResponse.status:type_name -> google.rpc.Status
	21, // 10: prophetstor.api.datahub.recommendations.ListPodRecommendationsResponse.pod_recommendations:type_name -> prophetstor.api.datahub.recommendations.PodRecommendation
	27, // 11: prophetstor.api.datahub.recommendations.ListControllerRecommendationsRequest.query_condition:type_name -> prophetstor.api.datahub.common.QueryCondition
	28, // 12: prophetstor.api.datahub.recommendations.ListControllerRecommendationsRequest.object_meta:type_name -> prophetstor.api.datahub.resources.ObjectMeta
	29, // 13: prophetstor.api.datahub.recommendations.ListControllerRecommendationsRequest.kind:type_name -> prophetstor.api.datahub.resources.Kind
	31, // 14: prophetstor.api.datahub.recommendations.ListControllerRecommendationsRequest.recommended_type:type_name -> prophetstor.api.datahub.recommendations.ControllerRecommendedType
	30, // 15: prophetstor.api.datahub.recommendations.ListControllerRecommendationsResponse.status:type_name -> google.rpc.Status
	22, // 16: prophetstor.api.datahub.recommendations.ListControllerRecommendationsResponse.controller_recommendations:type_name -> prophetstor.api.datahub.recommendations.ControllerRecommendation
	27, // 17: prophetstor.api.datahub.recommendations.ListApplicationRecommendationsRequest.query_condition:type_name -> prophetstor.api.datahub.common.QueryCondition
	28, // 18: prophetstor.api.datahub.recommendations.ListApplicationRecommendationsRequest.object_meta:type_name -> prophetstor.api.datahub.resources.ObjectMeta
	29, // 19: prophetstor.api.datahub.recommendations.ListApplicationRecommendationsRequest.kind:type_name -> prophetstor.api.datahub.resources.Kind
	31, // 20: prophetstor.api.datahub.recommendations.ListApplicationRecommendationsRequest.recommended_type:type_name -> prophetstor.api.datahub.recommendations.ControllerRecommendedType
	30, // 21: prophetstor.api.datahub.recommendations.ListApplicationRecommendationsResponse.status:type_name -> google.rpc.Status
	23, // 22: prophetstor.api.datahub.recommendations.ListApplicationRecommendationsResponse.application_recommendations:type_name -> prophetstor.api.datahub.recommendations.ApplicationRecommendation
	27, // 23: prophetstor.api.datahub.recommendations.ListNamespaceRecommendationsRequest.query_condition:type_name -> prophetstor.api.datahub.common.QueryCondition
	28, // 24: prophetstor.api.datahub.recommendations.ListNamespaceRecommendationsRequest.object_meta:type_name -> prophetstor.api.datahub.resources.ObjectMeta
	29, // 25: prophetstor.api.datahub.recommendations.ListNamespaceRecommendationsRequest.kind:type_name -> prophetstor.api.datahub.resources.Kind
	31, // 26: prophetstor.api.datahub.recommendations.ListNamespaceRecommendationsRequest.recommended_type:type_name -> prophetstor.api.datahub.recommendations.ControllerRecommendedType
	30, // 27: prophetstor.api.datahub.recommendations.ListNamespaceRecommendationsResponse.status:type_name -> google.rpc.Status
	24, // 28: prophetstor.api.datahub.recommendations.ListNamespaceRecommendationsResponse.namespace_recommendations:type_name -> prophetstor.api.datahub.recommendations.NamespaceRecommendation
	27, // 29: prophetstor.api.datahub.recommendations.ListNodeRecommendationsRequest.query_condition:type_name -> prophetstor.api.datahub.common.QueryCondition
	28, // 30: prophetstor.api.datahub.recommendations.ListNodeRecommendationsRequest.object_meta:type_name -> prophetstor.api.datahub.resources.ObjectMeta
	29, // 31: prophetstor.api.datahub.recommendations.ListNodeRecommendationsRequest.kind:type_name -> prophetstor.api.datahub.resources.Kind
	31, // 32: prophetstor.api.datahub.recommendations.ListNodeRecommendationsRequest.recommended_type:type_name -> prophetstor.api.datahub.recommendations.ControllerRecommendedType
	30, // 33: prophetstor.api.datahub.recommendations.ListNodeRecommendationsResponse.status:type_name -> google.rpc.Status
	25, // 34: prophetstor.api.datahub.recommendations.ListNodeRecommendationsResponse.node_recommendations:type_name -> prophetstor.api.datahub.recommendations.NodeRecommendation
	27, // 35: prophetstor.api.datahub.recommendations.ListClusterRecommendationsRequest.query_condition:type_name -> prophetstor.api.datahub.common.QueryCondition
	28, // 36: prophetstor.api.datahub.recommendations.ListClusterRecommendationsRequest.object_meta:type_name -> prophetstor.api.datahub.resources.ObjectMeta
	29, // 37: prophetstor.api.datahub.recommendations.ListClusterRecommendationsRequest.kind:type_name -> prophetstor.api.datahub.resources.Kind
	31, // 38: prophetstor.api.datahub.recommendations.ListClusterRecommendationsRequest.recommended_type:type_name -> prophetstor.api.datahub.recommendations.ControllerRecommendedType
	30, // 39: prophetstor.api.datahub.recommendations.ListClusterRecommendationsResponse.status:type_name -> google.rpc.Status
	26, // 40: prophetstor.api.datahub.recommendations.ListClusterRecommendationsResponse.cluster_recommendations:type_name -> prophetstor.api.datahub.recommendations.ClusterRecommendation
	32, // 41: prophetstor.api.datahub.recommendations.CreateRecommendationsRequest.schema_meta:type_name -> prophetstor.api.datahub.schemas.SchemaMeta
	33, // 42: prophetstor.api.datahub.recommendations.CreateRecommendationsRequest.recommendations:type_name -> prophetstor.api.datahub.recommendations.WriteRecommendation
	27, // 43: prophetstor.api.datahub.recommendations.ListRecommendationsRequest.query_condition:type_name -> prophetstor.api.datahub.common.QueryCondition
	32, // 44: prophetstor.api.datahub.recommendations.ListRecommendationsRequest.schema_meta:type_name -> prophetstor.api.datahub.schemas.SchemaMeta
	30, // 45: prophetstor.api.datahub.recommendations.ListRecommendationsResponse.status:type_name -> google.rpc.Status
	34, // 46: prophetstor.api.datahub.recommendations.ListRecommendationsResponse.recommendations:type_name -> prophetstor.api.datahub.recommendations.Recommendation
	47, // [47:47] is the sub-list for method output_type
	47, // [47:47] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_prophetstor_api_datahub_recommendations_services_proto_init() }
func file_prophetstor_api_datahub_recommendations_services_proto_init() {
	if File_prophetstor_api_datahub_recommendations_services_proto != nil {
		return
	}
	file_prophetstor_api_datahub_recommendations_recommendations_proto_init()
	file_prophetstor_api_datahub_recommendations_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePodRecommendationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateControllerRecommendationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApplicationRecommendationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNamespaceRecommendationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNodeRecommendationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClusterRecommendationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPodRecommendationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPodRecommendationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListControllerRecommendationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListControllerRecommendationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApplicationRecommendationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApplicationRecommendationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespaceRecommendationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespaceRecommendationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodeRecommendationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodeRecommendationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClusterRecommendationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClusterRecommendationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRecommendationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRecommendationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_recommendations_services_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRecommendationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prophetstor_api_datahub_recommendations_services_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_prophetstor_api_datahub_recommendations_services_proto_goTypes,
		DependencyIndexes: file_prophetstor_api_datahub_recommendations_services_proto_depIdxs,
		MessageInfos:      file_prophetstor_api_datahub_recommendations_services_proto_msgTypes,
	}.Build()
	File_prophetstor_api_datahub_recommendations_services_proto = out.File
	file_prophetstor_api_datahub_recommendations_services_proto_rawDesc = nil
	file_prophetstor_api_datahub_recommendations_services_proto_goTypes = nil
	file_prophetstor_api_datahub_recommendations_services_proto_depIdxs = nil
}
