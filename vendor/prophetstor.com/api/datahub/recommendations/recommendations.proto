// This file has messages related to recommendations of containers, pods, and nodes

syntax = "proto3";

package prophetstor.api.datahub.recommendations;

import "prophetstor/api/datahub/common/metrics.proto";
import "prophetstor/api/datahub/common/rawdata.proto";
import "prophetstor/api/datahub/common/types.proto";
import "prophetstor/api/datahub/resources/metadata.proto";
import "prophetstor/api/datahub/resources/policies.proto";
import "prophetstor/api/datahub/resources/resources.proto";
import "prophetstor/api/datahub/recommendations/types.proto";
import "google/protobuf/timestamp.proto";

option go_package = "prophetstor.com/api/datahub/recommendations";

/**
 * Represents a resource configuration recommendation made by the AI Engine.
 *
 * It includes recommended limits and requests for the initial stage (a container which is just started) and after the initial strage.
 *
 */
message ContainerRecommendation {
    string                     name                            = 1;
    repeated common.MetricData limit_recommendations           = 2;
    repeated common.MetricData request_recommendations         = 3;
    repeated common.MetricData initial_limit_recommendations   = 4;
    repeated common.MetricData initial_request_recommendations = 5;
}

/**
 * Represents a set of container resource configuration recommendations of a pod.
 */
message PodRecommendation {
    resources.ObjectMeta             object_meta               = 1;
    bool                             apply_recommendation_now  = 2;
    resources.AssignPodPolicy        assign_pod_policy         = 3;
    repeated ContainerRecommendation container_recommendations = 4;
    google.protobuf.Timestamp        start_time                = 5;
    google.protobuf.Timestamp        end_time                  = 6;
    resources.Controller             top_controller            = 7;
    string                           recommendation_id         = 8;
    double                           total_cost                = 9;
}

/**
 * Represents resource configuration recommendations of a controller.
 */
message ControllerRecommendation {
    resources.ObjectMeta         object_meta          = 1;
    resources.Kind               kind                 = 2;
    ControllerRecommendedType    recommended_type     = 3;
    ControllerRecommendedSpec    recommended_spec     = 4;
    ControllerRecommendedSpecK8s recommended_spec_k8s = 5;
}

/**
 * Represents resource configuration recommendations of a alameda scaler.
 */
message ApplicationRecommendation {
    resources.ObjectMeta         object_meta          = 1;
    resources.Kind               kind                 = 2;
    ControllerRecommendedType    recommended_type     = 3;
    ControllerRecommendedSpec    recommended_spec     = 4;
    ControllerRecommendedSpecK8s recommended_spec_k8s = 5;
}

/**
 * Represents resource configuration recommendations of a namespace.
 */
message NamespaceRecommendation {
    resources.ObjectMeta         object_meta          = 1;
    resources.Kind               kind                 = 2;
    ControllerRecommendedType    recommended_type     = 3;
    ControllerRecommendedSpec    recommended_spec     = 4;
    ControllerRecommendedSpecK8s recommended_spec_k8s = 5;
}

/**
 * Represents resource configuration recommendations of a node.
 */
message NodeRecommendation {
    resources.ObjectMeta         object_meta          = 1;
    resources.Kind               kind                 = 2;
    ControllerRecommendedType    recommended_type     = 3;
    ControllerRecommendedSpec    recommended_spec     = 4;
    ControllerRecommendedSpecK8s recommended_spec_k8s = 5;
}

/**
 * Represents resource configuration recommendations of a cluster.
 */
message ClusterRecommendation {
    resources.ObjectMeta         object_meta          = 1;
    resources.Kind               kind                 = 2;
    ControllerRecommendedType    recommended_type     = 3;
    ControllerRecommendedSpec    recommended_spec     = 4;
    ControllerRecommendedSpecK8s recommended_spec_k8s = 5;
}

message WriteRecommendation {
    common.MetricType    metric_type    = 1;
    common.ResourceQuota resource_quota = 2;
    common.WriteData     write_data     = 3;
}
