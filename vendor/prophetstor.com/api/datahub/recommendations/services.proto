// This file has messages related to recommendations of containers, pods, and nodes

syntax = "proto3";

package prophetstor.api.datahub.recommendations;

import "prophetstor/api/datahub/common/queries.proto";
import "prophetstor/api/datahub/recommendations/recommendations.proto";
import "prophetstor/api/datahub/recommendations/types.proto";
import "prophetstor/api/datahub/resources/metadata.proto";
import "prophetstor/api/datahub/schemas/types.proto";
import "google/rpc/status.proto";

option go_package = "prophetstor.com/api/datahub/recommendations";

/**
 * Represents a request for creating pods' recommendation.
 */
message CreatePodRecommendationsRequest {
    repeated PodRecommendation pod_recommendations = 1;
    int64                      granularity         = 2;
}

/**
 * Represents a request for creating controllers' recommendation.
 */
message CreateControllerRecommendationsRequest {
    repeated ControllerRecommendation controller_recommendations = 1;
}

/**
 * Represents a request for creating alameda scalers' recommendation.
 */
message CreateApplicationRecommendationsRequest {
    repeated ApplicationRecommendation application_recommendations = 1;
}

/**
 * Represents a request for creating namespaces' recommendation.
 */
message CreateNamespaceRecommendationsRequest {
    repeated NamespaceRecommendation namespace_recommendations = 1;
}

/**
 * Represents a request for creating nodes' recommendation.
 */
message CreateNodeRecommendationsRequest {
    repeated NodeRecommendation node_recommendations = 1;
}

/**
 * Represents a request for creating clusters' recommendation.
 */
message CreateClusterRecommendationsRequest {
    repeated ClusterRecommendation cluster_recommendations = 1;
}

/**
 * Represents a request for listing recommendations of pods.
 */
message ListPodRecommendationsRequest {
    common.QueryCondition         query_condition = 1;
    repeated resources.ObjectMeta object_meta     = 2;
    resources.Kind                kind            = 3;
    int64                         granularity     = 4;
}

/**
 * Represents a response for listing pods recommendations request.
 */
message ListPodRecommendationsResponse {
    google.rpc.Status          status              = 1;
    repeated PodRecommendation pod_recommendations = 2;
}

/**
 * Represents a request for listing recommendations of controllers.
 */
message ListControllerRecommendationsRequest {
    common.QueryCondition         query_condition  = 1;
    repeated resources.ObjectMeta object_meta      = 2;
    resources.Kind                kind             = 3;
    ControllerRecommendedType     recommended_type = 4;
}

/**
 * Represents a response for listing controllers recommendations request.
 */
message ListControllerRecommendationsResponse {
    google.rpc.Status                 status                     = 1;
    repeated ControllerRecommendation controller_recommendations = 2;
}

/**
 * Represents a request for listing recommendations of alameda scalers.
 */
message ListApplicationRecommendationsRequest {
    common.QueryCondition         query_condition  = 1;
    repeated resources.ObjectMeta object_meta      = 2;
    resources.Kind                kind             = 3;
    ControllerRecommendedType     recommended_type = 4;
}

/**
 * Represents a response for listing alameda scalers recommendations request.
 */
message ListApplicationRecommendationsResponse {
    google.rpc.Status                  status                      = 1;
    repeated ApplicationRecommendation application_recommendations = 2;
}

/**
 * Represents a request for listing recommendations of namespaces.
 */
message ListNamespaceRecommendationsRequest {
    common.QueryCondition         query_condition  = 1;
    repeated resources.ObjectMeta object_meta      = 2;
    resources.Kind                kind             = 3;
    ControllerRecommendedType     recommended_type = 4;
}

/**
 * Represents a response for listing namespaces recommendations request.
 */
message ListNamespaceRecommendationsResponse {
    google.rpc.Status                status                    = 1;
    repeated NamespaceRecommendation namespace_recommendations = 2;
}

/**
 * Represents a request for listing recommendations of nodes.
 */
message ListNodeRecommendationsRequest {
    common.QueryCondition         query_condition  = 1;
    repeated resources.ObjectMeta object_meta      = 2;
    resources.Kind                kind             = 3;
    ControllerRecommendedType     recommended_type = 4;
}

/**
 * Represents a response for listing nodes recommendations request.
 */
message ListNodeRecommendationsResponse {
    google.rpc.Status           status               = 1;
    repeated NodeRecommendation node_recommendations = 2;
}

/**
 * Represents a request for listing recommendations of clusters.
 */
message ListClusterRecommendationsRequest {
    common.QueryCondition         query_condition  = 1;
    repeated resources.ObjectMeta object_meta      = 2;
    resources.Kind                kind             = 3;
    ControllerRecommendedType     recommended_type = 4;
}

/**
 * Represents a response for listing clusters recommendations request.
 */
message ListClusterRecommendationsResponse {
    google.rpc.Status              status                  = 1;
    repeated ClusterRecommendation cluster_recommendations = 2;
}

message CreateRecommendationsRequest {
    schemas.SchemaMeta           schema_meta     = 1;
    repeated WriteRecommendation recommendations = 2;
}

message ListRecommendationsRequest {
    common.QueryCondition query_condition = 1;
    schemas.SchemaMeta    schema_meta     = 2;
}

message ListRecommendationsResponse {
    google.rpc.Status status          = 1;
    Recommendation    recommendations = 2;
}
