// source: prophetstor/api/datahub/events/services.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var prophetstor_api_datahub_common_queries_pb = require('../../../../prophetstor/api/datahub/common/queries_pb.js');
goog.object.extend(proto, prophetstor_api_datahub_common_queries_pb);
var prophetstor_api_datahub_events_events_pb = require('../../../../prophetstor/api/datahub/events/events_pb.js');
goog.object.extend(proto, prophetstor_api_datahub_events_events_pb);
var prophetstor_api_datahub_events_types_pb = require('../../../../prophetstor/api/datahub/events/types_pb.js');
goog.object.extend(proto, prophetstor_api_datahub_events_types_pb);
var google_rpc_status_pb = require('../../../../google/rpc/status_pb.js');
goog.object.extend(proto, google_rpc_status_pb);
goog.exportSymbol('proto.prophetstor.api.datahub.events.CreateEventsRequest', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.events.ListEventsRequest', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.events.ListEventsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.events.ListEventsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.events.ListEventsRequest.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.events.ListEventsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.events.ListEventsRequest.displayName = 'proto.prophetstor.api.datahub.events.ListEventsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.events.ListEventsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.events.ListEventsResponse.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.events.ListEventsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.events.ListEventsResponse.displayName = 'proto.prophetstor.api.datahub.events.ListEventsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.events.CreateEventsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.events.CreateEventsRequest.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.events.CreateEventsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.events.CreateEventsRequest.displayName = 'proto.prophetstor.api.datahub.events.CreateEventsRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.repeatedFields_ = [2,3,4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.events.ListEventsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.events.ListEventsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    queryCondition: (f = msg.getQueryCondition()) && prophetstor_api_datahub_common_queries_pb.QueryCondition.toObject(includeInstance, f),
    idList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    clusterIdList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    typeList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    versionList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    levelList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.events.ListEventsRequest}
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.events.ListEventsRequest;
  return proto.prophetstor.api.datahub.events.ListEventsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.events.ListEventsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.events.ListEventsRequest}
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new prophetstor_api_datahub_common_queries_pb.QueryCondition;
      reader.readMessage(value,prophetstor_api_datahub_common_queries_pb.QueryCondition.deserializeBinaryFromReader);
      msg.setQueryCondition(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addClusterId(value);
      break;
    case 4:
      var value = /** @type {!Array<!proto.prophetstor.api.datahub.events.EventType>} */ (reader.readPackedEnum());
      msg.setTypeList(value);
      break;
    case 5:
      var value = /** @type {!Array<!proto.prophetstor.api.datahub.events.EventVersion>} */ (reader.readPackedEnum());
      msg.setVersionList(value);
      break;
    case 6:
      var value = /** @type {!Array<!proto.prophetstor.api.datahub.events.EventLevel>} */ (reader.readPackedEnum());
      msg.setLevelList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.events.ListEventsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.events.ListEventsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueryCondition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      prophetstor_api_datahub_common_queries_pb.QueryCondition.serializeBinaryToWriter
    );
  }
  f = message.getIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getClusterIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getTypeList();
  if (f.length > 0) {
    writer.writePackedEnum(
      4,
      f
    );
  }
  f = message.getVersionList();
  if (f.length > 0) {
    writer.writePackedEnum(
      5,
      f
    );
  }
  f = message.getLevelList();
  if (f.length > 0) {
    writer.writePackedEnum(
      6,
      f
    );
  }
};


/**
 * optional prophetstor.api.datahub.common.QueryCondition query_condition = 1;
 * @return {?proto.prophetstor.api.datahub.common.QueryCondition}
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.getQueryCondition = function() {
  return /** @type{?proto.prophetstor.api.datahub.common.QueryCondition} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_common_queries_pb.QueryCondition, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.common.QueryCondition|undefined} value
 * @return {!proto.prophetstor.api.datahub.events.ListEventsRequest} returns this
*/
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.setQueryCondition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.events.ListEventsRequest} returns this
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.clearQueryCondition = function() {
  return this.setQueryCondition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.hasQueryCondition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string id = 2;
 * @return {!Array<string>}
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.getIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.prophetstor.api.datahub.events.ListEventsRequest} returns this
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.setIdList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.events.ListEventsRequest} returns this
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.addId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.events.ListEventsRequest} returns this
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.clearIdList = function() {
  return this.setIdList([]);
};


/**
 * repeated string cluster_id = 3;
 * @return {!Array<string>}
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.getClusterIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.prophetstor.api.datahub.events.ListEventsRequest} returns this
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.setClusterIdList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.events.ListEventsRequest} returns this
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.addClusterId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.events.ListEventsRequest} returns this
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.clearClusterIdList = function() {
  return this.setClusterIdList([]);
};


/**
 * repeated EventType type = 4;
 * @return {!Array<!proto.prophetstor.api.datahub.events.EventType>}
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.getTypeList = function() {
  return /** @type {!Array<!proto.prophetstor.api.datahub.events.EventType>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.events.EventType>} value
 * @return {!proto.prophetstor.api.datahub.events.ListEventsRequest} returns this
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.setTypeList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.prophetstor.api.datahub.events.EventType} value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.events.ListEventsRequest} returns this
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.addType = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.events.ListEventsRequest} returns this
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.clearTypeList = function() {
  return this.setTypeList([]);
};


/**
 * repeated EventVersion version = 5;
 * @return {!Array<!proto.prophetstor.api.datahub.events.EventVersion>}
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.getVersionList = function() {
  return /** @type {!Array<!proto.prophetstor.api.datahub.events.EventVersion>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.events.EventVersion>} value
 * @return {!proto.prophetstor.api.datahub.events.ListEventsRequest} returns this
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.setVersionList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!proto.prophetstor.api.datahub.events.EventVersion} value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.events.ListEventsRequest} returns this
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.addVersion = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.events.ListEventsRequest} returns this
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.clearVersionList = function() {
  return this.setVersionList([]);
};


/**
 * repeated EventLevel level = 6;
 * @return {!Array<!proto.prophetstor.api.datahub.events.EventLevel>}
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.getLevelList = function() {
  return /** @type {!Array<!proto.prophetstor.api.datahub.events.EventLevel>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.events.EventLevel>} value
 * @return {!proto.prophetstor.api.datahub.events.ListEventsRequest} returns this
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.setLevelList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!proto.prophetstor.api.datahub.events.EventLevel} value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.events.ListEventsRequest} returns this
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.addLevel = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.events.ListEventsRequest} returns this
 */
proto.prophetstor.api.datahub.events.ListEventsRequest.prototype.clearLevelList = function() {
  return this.setLevelList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.events.ListEventsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.events.ListEventsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.events.ListEventsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.events.ListEventsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.events.ListEventsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f),
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    prophetstor_api_datahub_events_events_pb.Event.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.events.ListEventsResponse}
 */
proto.prophetstor.api.datahub.events.ListEventsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.events.ListEventsResponse;
  return proto.prophetstor.api.datahub.events.ListEventsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.events.ListEventsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.events.ListEventsResponse}
 */
proto.prophetstor.api.datahub.events.ListEventsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new prophetstor_api_datahub_events_events_pb.Event;
      reader.readMessage(value,prophetstor_api_datahub_events_events_pb.Event.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.events.ListEventsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.events.ListEventsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.events.ListEventsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.events.ListEventsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      prophetstor_api_datahub_events_events_pb.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.prophetstor.api.datahub.events.ListEventsResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.prophetstor.api.datahub.events.ListEventsResponse} returns this
*/
proto.prophetstor.api.datahub.events.ListEventsResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.events.ListEventsResponse} returns this
 */
proto.prophetstor.api.datahub.events.ListEventsResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.events.ListEventsResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Event events = 2;
 * @return {!Array<!proto.prophetstor.api.datahub.events.Event>}
 */
proto.prophetstor.api.datahub.events.ListEventsResponse.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.events.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, prophetstor_api_datahub_events_events_pb.Event, 2));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.events.Event>} value
 * @return {!proto.prophetstor.api.datahub.events.ListEventsResponse} returns this
*/
proto.prophetstor.api.datahub.events.ListEventsResponse.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.events.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.events.Event}
 */
proto.prophetstor.api.datahub.events.ListEventsResponse.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.api.datahub.events.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.events.ListEventsResponse} returns this
 */
proto.prophetstor.api.datahub.events.ListEventsResponse.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.events.CreateEventsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.events.CreateEventsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.events.CreateEventsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.events.CreateEventsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.events.CreateEventsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    prophetstor_api_datahub_events_events_pb.Event.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.events.CreateEventsRequest}
 */
proto.prophetstor.api.datahub.events.CreateEventsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.events.CreateEventsRequest;
  return proto.prophetstor.api.datahub.events.CreateEventsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.events.CreateEventsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.events.CreateEventsRequest}
 */
proto.prophetstor.api.datahub.events.CreateEventsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new prophetstor_api_datahub_events_events_pb.Event;
      reader.readMessage(value,prophetstor_api_datahub_events_events_pb.Event.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.events.CreateEventsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.events.CreateEventsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.events.CreateEventsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.events.CreateEventsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      prophetstor_api_datahub_events_events_pb.Event.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Event events = 1;
 * @return {!Array<!proto.prophetstor.api.datahub.events.Event>}
 */
proto.prophetstor.api.datahub.events.CreateEventsRequest.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.events.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, prophetstor_api_datahub_events_events_pb.Event, 1));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.events.Event>} value
 * @return {!proto.prophetstor.api.datahub.events.CreateEventsRequest} returns this
*/
proto.prophetstor.api.datahub.events.CreateEventsRequest.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.events.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.events.Event}
 */
proto.prophetstor.api.datahub.events.CreateEventsRequest.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.prophetstor.api.datahub.events.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.events.CreateEventsRequest} returns this
 */
proto.prophetstor.api.datahub.events.CreateEventsRequest.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};


goog.object.extend(exports, proto.prophetstor.api.datahub.events);
