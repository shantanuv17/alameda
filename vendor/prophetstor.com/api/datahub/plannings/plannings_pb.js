// source: prophetstor/api/datahub/plannings/plannings.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var prophetstor_api_datahub_common_metrics_pb = require('../../../../prophetstor/api/datahub/common/metrics_pb.js');
goog.object.extend(proto, prophetstor_api_datahub_common_metrics_pb);
var prophetstor_api_datahub_common_rawdata_pb = require('../../../../prophetstor/api/datahub/common/rawdata_pb.js');
goog.object.extend(proto, prophetstor_api_datahub_common_rawdata_pb);
var prophetstor_api_datahub_common_types_pb = require('../../../../prophetstor/api/datahub/common/types_pb.js');
goog.object.extend(proto, prophetstor_api_datahub_common_types_pb);
var prophetstor_api_datahub_plannings_types_pb = require('../../../../prophetstor/api/datahub/plannings/types_pb.js');
goog.object.extend(proto, prophetstor_api_datahub_plannings_types_pb);
var prophetstor_api_datahub_resources_metadata_pb = require('../../../../prophetstor/api/datahub/resources/metadata_pb.js');
goog.object.extend(proto, prophetstor_api_datahub_resources_metadata_pb);
var prophetstor_api_datahub_resources_policies_pb = require('../../../../prophetstor/api/datahub/resources/policies_pb.js');
goog.object.extend(proto, prophetstor_api_datahub_resources_policies_pb);
var prophetstor_api_datahub_resources_resources_pb = require('../../../../prophetstor/api/datahub/resources/resources_pb.js');
goog.object.extend(proto, prophetstor_api_datahub_resources_resources_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.prophetstor.api.datahub.plannings.ApplicationPlanning', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.plannings.ClusterPlanning', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.plannings.ContainerPlanning', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.plannings.ControllerPlanning', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.plannings.NamespacePlanning', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.plannings.NodePlanning', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.plannings.Planning', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.plannings.PodPlanning', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.plannings.WritePlanning', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.plannings.Planning = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.plannings.Planning.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.plannings.Planning, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.plannings.Planning.displayName = 'proto.prophetstor.api.datahub.plannings.Planning';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.plannings.ContainerPlanning.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.plannings.ContainerPlanning, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.plannings.ContainerPlanning.displayName = 'proto.prophetstor.api.datahub.plannings.ContainerPlanning';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.plannings.PodPlanning = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.plannings.PodPlanning.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.plannings.PodPlanning, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.plannings.PodPlanning.displayName = 'proto.prophetstor.api.datahub.plannings.PodPlanning';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.plannings.ControllerPlanning.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.plannings.ControllerPlanning, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.plannings.ControllerPlanning.displayName = 'proto.prophetstor.api.datahub.plannings.ControllerPlanning';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.plannings.ApplicationPlanning.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.plannings.ApplicationPlanning, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.plannings.ApplicationPlanning.displayName = 'proto.prophetstor.api.datahub.plannings.ApplicationPlanning';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.plannings.NamespacePlanning.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.plannings.NamespacePlanning, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.plannings.NamespacePlanning.displayName = 'proto.prophetstor.api.datahub.plannings.NamespacePlanning';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.plannings.NodePlanning = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.plannings.NodePlanning.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.plannings.NodePlanning, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.plannings.NodePlanning.displayName = 'proto.prophetstor.api.datahub.plannings.NodePlanning';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.plannings.ClusterPlanning.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.plannings.ClusterPlanning, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.plannings.ClusterPlanning.displayName = 'proto.prophetstor.api.datahub.plannings.ClusterPlanning';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.plannings.WritePlanning = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.plannings.WritePlanning, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.plannings.WritePlanning.displayName = 'proto.prophetstor.api.datahub.plannings.WritePlanning';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.plannings.Planning.repeatedFields_ = [1,2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.plannings.Planning.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.plannings.Planning.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.plannings.Planning} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.plannings.Planning.toObject = function(includeInstance, msg) {
  var f, obj = {
    limitPlanningsList: jspb.Message.toObjectList(msg.getLimitPlanningsList(),
    prophetstor_api_datahub_common_metrics_pb.MetricData.toObject, includeInstance),
    requestPlanningsList: jspb.Message.toObjectList(msg.getRequestPlanningsList(),
    prophetstor_api_datahub_common_metrics_pb.MetricData.toObject, includeInstance),
    initialLimitPlanningsList: jspb.Message.toObjectList(msg.getInitialLimitPlanningsList(),
    prophetstor_api_datahub_common_metrics_pb.MetricData.toObject, includeInstance),
    initialRequestPlanningsList: jspb.Message.toObjectList(msg.getInitialRequestPlanningsList(),
    prophetstor_api_datahub_common_metrics_pb.MetricData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.plannings.Planning}
 */
proto.prophetstor.api.datahub.plannings.Planning.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.plannings.Planning;
  return proto.prophetstor.api.datahub.plannings.Planning.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.plannings.Planning} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.plannings.Planning}
 */
proto.prophetstor.api.datahub.plannings.Planning.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new prophetstor_api_datahub_common_metrics_pb.MetricData;
      reader.readMessage(value,prophetstor_api_datahub_common_metrics_pb.MetricData.deserializeBinaryFromReader);
      msg.addLimitPlannings(value);
      break;
    case 2:
      var value = new prophetstor_api_datahub_common_metrics_pb.MetricData;
      reader.readMessage(value,prophetstor_api_datahub_common_metrics_pb.MetricData.deserializeBinaryFromReader);
      msg.addRequestPlannings(value);
      break;
    case 3:
      var value = new prophetstor_api_datahub_common_metrics_pb.MetricData;
      reader.readMessage(value,prophetstor_api_datahub_common_metrics_pb.MetricData.deserializeBinaryFromReader);
      msg.addInitialLimitPlannings(value);
      break;
    case 4:
      var value = new prophetstor_api_datahub_common_metrics_pb.MetricData;
      reader.readMessage(value,prophetstor_api_datahub_common_metrics_pb.MetricData.deserializeBinaryFromReader);
      msg.addInitialRequestPlannings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.plannings.Planning.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.plannings.Planning.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.plannings.Planning} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.plannings.Planning.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimitPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      prophetstor_api_datahub_common_metrics_pb.MetricData.serializeBinaryToWriter
    );
  }
  f = message.getRequestPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      prophetstor_api_datahub_common_metrics_pb.MetricData.serializeBinaryToWriter
    );
  }
  f = message.getInitialLimitPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      prophetstor_api_datahub_common_metrics_pb.MetricData.serializeBinaryToWriter
    );
  }
  f = message.getInitialRequestPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      prophetstor_api_datahub_common_metrics_pb.MetricData.serializeBinaryToWriter
    );
  }
};


/**
 * repeated prophetstor.api.datahub.common.MetricData limit_plannings = 1;
 * @return {!Array<!proto.prophetstor.api.datahub.common.MetricData>}
 */
proto.prophetstor.api.datahub.plannings.Planning.prototype.getLimitPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.common.MetricData>} */ (
    jspb.Message.getRepeatedWrapperField(this, prophetstor_api_datahub_common_metrics_pb.MetricData, 1));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.common.MetricData>} value
 * @return {!proto.prophetstor.api.datahub.plannings.Planning} returns this
*/
proto.prophetstor.api.datahub.plannings.Planning.prototype.setLimitPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.common.MetricData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.common.MetricData}
 */
proto.prophetstor.api.datahub.plannings.Planning.prototype.addLimitPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.prophetstor.api.datahub.common.MetricData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.plannings.Planning} returns this
 */
proto.prophetstor.api.datahub.plannings.Planning.prototype.clearLimitPlanningsList = function() {
  return this.setLimitPlanningsList([]);
};


/**
 * repeated prophetstor.api.datahub.common.MetricData request_plannings = 2;
 * @return {!Array<!proto.prophetstor.api.datahub.common.MetricData>}
 */
proto.prophetstor.api.datahub.plannings.Planning.prototype.getRequestPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.common.MetricData>} */ (
    jspb.Message.getRepeatedWrapperField(this, prophetstor_api_datahub_common_metrics_pb.MetricData, 2));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.common.MetricData>} value
 * @return {!proto.prophetstor.api.datahub.plannings.Planning} returns this
*/
proto.prophetstor.api.datahub.plannings.Planning.prototype.setRequestPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.common.MetricData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.common.MetricData}
 */
proto.prophetstor.api.datahub.plannings.Planning.prototype.addRequestPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.api.datahub.common.MetricData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.plannings.Planning} returns this
 */
proto.prophetstor.api.datahub.plannings.Planning.prototype.clearRequestPlanningsList = function() {
  return this.setRequestPlanningsList([]);
};


/**
 * repeated prophetstor.api.datahub.common.MetricData initial_limit_plannings = 3;
 * @return {!Array<!proto.prophetstor.api.datahub.common.MetricData>}
 */
proto.prophetstor.api.datahub.plannings.Planning.prototype.getInitialLimitPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.common.MetricData>} */ (
    jspb.Message.getRepeatedWrapperField(this, prophetstor_api_datahub_common_metrics_pb.MetricData, 3));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.common.MetricData>} value
 * @return {!proto.prophetstor.api.datahub.plannings.Planning} returns this
*/
proto.prophetstor.api.datahub.plannings.Planning.prototype.setInitialLimitPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.common.MetricData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.common.MetricData}
 */
proto.prophetstor.api.datahub.plannings.Planning.prototype.addInitialLimitPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.prophetstor.api.datahub.common.MetricData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.plannings.Planning} returns this
 */
proto.prophetstor.api.datahub.plannings.Planning.prototype.clearInitialLimitPlanningsList = function() {
  return this.setInitialLimitPlanningsList([]);
};


/**
 * repeated prophetstor.api.datahub.common.MetricData initial_request_plannings = 4;
 * @return {!Array<!proto.prophetstor.api.datahub.common.MetricData>}
 */
proto.prophetstor.api.datahub.plannings.Planning.prototype.getInitialRequestPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.common.MetricData>} */ (
    jspb.Message.getRepeatedWrapperField(this, prophetstor_api_datahub_common_metrics_pb.MetricData, 4));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.common.MetricData>} value
 * @return {!proto.prophetstor.api.datahub.plannings.Planning} returns this
*/
proto.prophetstor.api.datahub.plannings.Planning.prototype.setInitialRequestPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.common.MetricData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.common.MetricData}
 */
proto.prophetstor.api.datahub.plannings.Planning.prototype.addInitialRequestPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.prophetstor.api.datahub.common.MetricData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.plannings.Planning} returns this
 */
proto.prophetstor.api.datahub.plannings.Planning.prototype.clearInitialRequestPlanningsList = function() {
  return this.setInitialRequestPlanningsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.repeatedFields_ = [2,3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.plannings.ContainerPlanning.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.plannings.ContainerPlanning} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    limitPlanningsList: jspb.Message.toObjectList(msg.getLimitPlanningsList(),
    prophetstor_api_datahub_common_metrics_pb.MetricData.toObject, includeInstance),
    requestPlanningsList: jspb.Message.toObjectList(msg.getRequestPlanningsList(),
    prophetstor_api_datahub_common_metrics_pb.MetricData.toObject, includeInstance),
    initialLimitPlanningsList: jspb.Message.toObjectList(msg.getInitialLimitPlanningsList(),
    prophetstor_api_datahub_common_metrics_pb.MetricData.toObject, includeInstance),
    initialRequestPlanningsList: jspb.Message.toObjectList(msg.getInitialRequestPlanningsList(),
    prophetstor_api_datahub_common_metrics_pb.MetricData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.plannings.ContainerPlanning}
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.plannings.ContainerPlanning;
  return proto.prophetstor.api.datahub.plannings.ContainerPlanning.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.plannings.ContainerPlanning} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.plannings.ContainerPlanning}
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new prophetstor_api_datahub_common_metrics_pb.MetricData;
      reader.readMessage(value,prophetstor_api_datahub_common_metrics_pb.MetricData.deserializeBinaryFromReader);
      msg.addLimitPlannings(value);
      break;
    case 3:
      var value = new prophetstor_api_datahub_common_metrics_pb.MetricData;
      reader.readMessage(value,prophetstor_api_datahub_common_metrics_pb.MetricData.deserializeBinaryFromReader);
      msg.addRequestPlannings(value);
      break;
    case 4:
      var value = new prophetstor_api_datahub_common_metrics_pb.MetricData;
      reader.readMessage(value,prophetstor_api_datahub_common_metrics_pb.MetricData.deserializeBinaryFromReader);
      msg.addInitialLimitPlannings(value);
      break;
    case 5:
      var value = new prophetstor_api_datahub_common_metrics_pb.MetricData;
      reader.readMessage(value,prophetstor_api_datahub_common_metrics_pb.MetricData.deserializeBinaryFromReader);
      msg.addInitialRequestPlannings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.plannings.ContainerPlanning.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.plannings.ContainerPlanning} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLimitPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      prophetstor_api_datahub_common_metrics_pb.MetricData.serializeBinaryToWriter
    );
  }
  f = message.getRequestPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      prophetstor_api_datahub_common_metrics_pb.MetricData.serializeBinaryToWriter
    );
  }
  f = message.getInitialLimitPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      prophetstor_api_datahub_common_metrics_pb.MetricData.serializeBinaryToWriter
    );
  }
  f = message.getInitialRequestPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      prophetstor_api_datahub_common_metrics_pb.MetricData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.plannings.ContainerPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated prophetstor.api.datahub.common.MetricData limit_plannings = 2;
 * @return {!Array<!proto.prophetstor.api.datahub.common.MetricData>}
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.prototype.getLimitPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.common.MetricData>} */ (
    jspb.Message.getRepeatedWrapperField(this, prophetstor_api_datahub_common_metrics_pb.MetricData, 2));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.common.MetricData>} value
 * @return {!proto.prophetstor.api.datahub.plannings.ContainerPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.ContainerPlanning.prototype.setLimitPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.common.MetricData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.common.MetricData}
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.prototype.addLimitPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.api.datahub.common.MetricData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.plannings.ContainerPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.prototype.clearLimitPlanningsList = function() {
  return this.setLimitPlanningsList([]);
};


/**
 * repeated prophetstor.api.datahub.common.MetricData request_plannings = 3;
 * @return {!Array<!proto.prophetstor.api.datahub.common.MetricData>}
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.prototype.getRequestPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.common.MetricData>} */ (
    jspb.Message.getRepeatedWrapperField(this, prophetstor_api_datahub_common_metrics_pb.MetricData, 3));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.common.MetricData>} value
 * @return {!proto.prophetstor.api.datahub.plannings.ContainerPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.ContainerPlanning.prototype.setRequestPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.common.MetricData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.common.MetricData}
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.prototype.addRequestPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.prophetstor.api.datahub.common.MetricData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.plannings.ContainerPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.prototype.clearRequestPlanningsList = function() {
  return this.setRequestPlanningsList([]);
};


/**
 * repeated prophetstor.api.datahub.common.MetricData initial_limit_plannings = 4;
 * @return {!Array<!proto.prophetstor.api.datahub.common.MetricData>}
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.prototype.getInitialLimitPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.common.MetricData>} */ (
    jspb.Message.getRepeatedWrapperField(this, prophetstor_api_datahub_common_metrics_pb.MetricData, 4));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.common.MetricData>} value
 * @return {!proto.prophetstor.api.datahub.plannings.ContainerPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.ContainerPlanning.prototype.setInitialLimitPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.common.MetricData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.common.MetricData}
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.prototype.addInitialLimitPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.prophetstor.api.datahub.common.MetricData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.plannings.ContainerPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.prototype.clearInitialLimitPlanningsList = function() {
  return this.setInitialLimitPlanningsList([]);
};


/**
 * repeated prophetstor.api.datahub.common.MetricData initial_request_plannings = 5;
 * @return {!Array<!proto.prophetstor.api.datahub.common.MetricData>}
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.prototype.getInitialRequestPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.common.MetricData>} */ (
    jspb.Message.getRepeatedWrapperField(this, prophetstor_api_datahub_common_metrics_pb.MetricData, 5));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.common.MetricData>} value
 * @return {!proto.prophetstor.api.datahub.plannings.ContainerPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.ContainerPlanning.prototype.setInitialRequestPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.common.MetricData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.common.MetricData}
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.prototype.addInitialRequestPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.prophetstor.api.datahub.common.MetricData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.plannings.ContainerPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ContainerPlanning.prototype.clearInitialRequestPlanningsList = function() {
  return this.setInitialRequestPlanningsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.plannings.PodPlanning.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.plannings.PodPlanning} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectMeta: (f = msg.getObjectMeta()) && prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.toObject(includeInstance, f),
    planningType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    planningId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    predictionId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    totalCost: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    applyPlanningNow: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    assignPodPolicy: (f = msg.getAssignPodPolicy()) && prophetstor_api_datahub_resources_policies_pb.AssignPodPolicy.toObject(includeInstance, f),
    topController: (f = msg.getTopController()) && prophetstor_api_datahub_resources_resources_pb.Controller.toObject(includeInstance, f),
    containerPlanningsList: jspb.Message.toObjectList(msg.getContainerPlanningsList(),
    proto.prophetstor.api.datahub.plannings.ContainerPlanning.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.plannings.PodPlanning}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.plannings.PodPlanning;
  return proto.prophetstor.api.datahub.plannings.PodPlanning.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.plannings.PodPlanning} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.plannings.PodPlanning}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new prophetstor_api_datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setObjectMeta(value);
      break;
    case 2:
      var value = /** @type {!proto.prophetstor.api.datahub.plannings.PlanningType} */ (reader.readEnum());
      msg.setPlanningType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlanningId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPredictionId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalCost(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApplyPlanningNow(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 9:
      var value = new prophetstor_api_datahub_resources_policies_pb.AssignPodPolicy;
      reader.readMessage(value,prophetstor_api_datahub_resources_policies_pb.AssignPodPolicy.deserializeBinaryFromReader);
      msg.setAssignPodPolicy(value);
      break;
    case 10:
      var value = new prophetstor_api_datahub_resources_resources_pb.Controller;
      reader.readMessage(value,prophetstor_api_datahub_resources_resources_pb.Controller.deserializeBinaryFromReader);
      msg.setTopController(value);
      break;
    case 11:
      var value = new proto.prophetstor.api.datahub.plannings.ContainerPlanning;
      reader.readMessage(value,proto.prophetstor.api.datahub.plannings.ContainerPlanning.deserializeBinaryFromReader);
      msg.addContainerPlannings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.plannings.PodPlanning.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.plannings.PodPlanning} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getPlanningType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPlanningId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPredictionId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTotalCost();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getApplyPlanningNow();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAssignPodPolicy();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      prophetstor_api_datahub_resources_policies_pb.AssignPodPolicy.serializeBinaryToWriter
    );
  }
  f = message.getTopController();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      prophetstor_api_datahub_resources_resources_pb.Controller.serializeBinaryToWriter
    );
  }
  f = message.getContainerPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.prophetstor.api.datahub.plannings.ContainerPlanning.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.api.datahub.resources.ObjectMeta object_meta = 1;
 * @return {?proto.prophetstor.api.datahub.resources.ObjectMeta}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.getObjectMeta = function() {
  return /** @type{?proto.prophetstor.api.datahub.resources.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_resources_metadata_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.resources.ObjectMeta|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.PodPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.setObjectMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.PodPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.clearObjectMeta = function() {
  return this.setObjectMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.hasObjectMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PlanningType planning_type = 2;
 * @return {!proto.prophetstor.api.datahub.plannings.PlanningType}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.getPlanningType = function() {
  return /** @type {!proto.prophetstor.api.datahub.plannings.PlanningType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.plannings.PlanningType} value
 * @return {!proto.prophetstor.api.datahub.plannings.PodPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.setPlanningType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string planning_id = 3;
 * @return {string}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.getPlanningId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.plannings.PodPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.setPlanningId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string prediction_id = 4;
 * @return {string}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.getPredictionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.plannings.PodPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.setPredictionId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double total_cost = 5;
 * @return {number}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.getTotalCost = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.api.datahub.plannings.PodPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.setTotalCost = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional bool apply_planning_now = 6;
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.getApplyPlanningNow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.prophetstor.api.datahub.plannings.PodPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.setApplyPlanningNow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp start_time = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.PodPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.PodPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.PodPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.PodPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional prophetstor.api.datahub.resources.AssignPodPolicy assign_pod_policy = 9;
 * @return {?proto.prophetstor.api.datahub.resources.AssignPodPolicy}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.getAssignPodPolicy = function() {
  return /** @type{?proto.prophetstor.api.datahub.resources.AssignPodPolicy} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_resources_policies_pb.AssignPodPolicy, 9));
};


/**
 * @param {?proto.prophetstor.api.datahub.resources.AssignPodPolicy|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.PodPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.setAssignPodPolicy = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.PodPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.clearAssignPodPolicy = function() {
  return this.setAssignPodPolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.hasAssignPodPolicy = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional prophetstor.api.datahub.resources.Controller top_controller = 10;
 * @return {?proto.prophetstor.api.datahub.resources.Controller}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.getTopController = function() {
  return /** @type{?proto.prophetstor.api.datahub.resources.Controller} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_resources_resources_pb.Controller, 10));
};


/**
 * @param {?proto.prophetstor.api.datahub.resources.Controller|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.PodPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.setTopController = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.PodPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.clearTopController = function() {
  return this.setTopController(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.hasTopController = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated ContainerPlanning container_plannings = 11;
 * @return {!Array<!proto.prophetstor.api.datahub.plannings.ContainerPlanning>}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.getContainerPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.plannings.ContainerPlanning>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.prophetstor.api.datahub.plannings.ContainerPlanning, 11));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.plannings.ContainerPlanning>} value
 * @return {!proto.prophetstor.api.datahub.plannings.PodPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.setContainerPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.plannings.ContainerPlanning=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.plannings.ContainerPlanning}
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.addContainerPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.prophetstor.api.datahub.plannings.ContainerPlanning, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.plannings.PodPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.PodPlanning.prototype.clearContainerPlanningsList = function() {
  return this.setContainerPlanningsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.plannings.ControllerPlanning.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.plannings.ControllerPlanning} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectMeta: (f = msg.getObjectMeta()) && prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.toObject(includeInstance, f),
    kind: jspb.Message.getFieldWithDefault(msg, 2, 0),
    planningType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    planningId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    predictionId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    totalCost: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    applyPlanningNow: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    planningsList: jspb.Message.toObjectList(msg.getPlanningsList(),
    proto.prophetstor.api.datahub.plannings.Planning.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.plannings.ControllerPlanning}
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.plannings.ControllerPlanning;
  return proto.prophetstor.api.datahub.plannings.ControllerPlanning.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.plannings.ControllerPlanning} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.plannings.ControllerPlanning}
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new prophetstor_api_datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setObjectMeta(value);
      break;
    case 2:
      var value = /** @type {!proto.prophetstor.api.datahub.resources.Kind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 3:
      var value = /** @type {!proto.prophetstor.api.datahub.plannings.PlanningType} */ (reader.readEnum());
      msg.setPlanningType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlanningId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPredictionId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalCost(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApplyPlanningNow(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 10:
      var value = new proto.prophetstor.api.datahub.plannings.Planning;
      reader.readMessage(value,proto.prophetstor.api.datahub.plannings.Planning.deserializeBinaryFromReader);
      msg.addPlannings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.plannings.ControllerPlanning.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.plannings.ControllerPlanning} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPlanningType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getPlanningId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPredictionId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTotalCost();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getApplyPlanningNow();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.prophetstor.api.datahub.plannings.Planning.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.api.datahub.resources.ObjectMeta object_meta = 1;
 * @return {?proto.prophetstor.api.datahub.resources.ObjectMeta}
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.getObjectMeta = function() {
  return /** @type{?proto.prophetstor.api.datahub.resources.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_resources_metadata_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.resources.ObjectMeta|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.ControllerPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.setObjectMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.ControllerPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.clearObjectMeta = function() {
  return this.setObjectMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.hasObjectMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional prophetstor.api.datahub.resources.Kind kind = 2;
 * @return {!proto.prophetstor.api.datahub.resources.Kind}
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.getKind = function() {
  return /** @type {!proto.prophetstor.api.datahub.resources.Kind} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.resources.Kind} value
 * @return {!proto.prophetstor.api.datahub.plannings.ControllerPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.setKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional PlanningType planning_type = 3;
 * @return {!proto.prophetstor.api.datahub.plannings.PlanningType}
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.getPlanningType = function() {
  return /** @type {!proto.prophetstor.api.datahub.plannings.PlanningType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.plannings.PlanningType} value
 * @return {!proto.prophetstor.api.datahub.plannings.ControllerPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.setPlanningType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string planning_id = 4;
 * @return {string}
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.getPlanningId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.plannings.ControllerPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.setPlanningId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string prediction_id = 5;
 * @return {string}
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.getPredictionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.plannings.ControllerPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.setPredictionId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional double total_cost = 6;
 * @return {number}
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.getTotalCost = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.api.datahub.plannings.ControllerPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.setTotalCost = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional bool apply_planning_now = 7;
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.getApplyPlanningNow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.prophetstor.api.datahub.plannings.ControllerPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.setApplyPlanningNow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional google.protobuf.Timestamp start_time = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.ControllerPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.ControllerPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.ControllerPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.ControllerPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated Planning plannings = 10;
 * @return {!Array<!proto.prophetstor.api.datahub.plannings.Planning>}
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.getPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.plannings.Planning>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.prophetstor.api.datahub.plannings.Planning, 10));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.plannings.Planning>} value
 * @return {!proto.prophetstor.api.datahub.plannings.ControllerPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.setPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.plannings.Planning=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.plannings.Planning}
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.addPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.prophetstor.api.datahub.plannings.Planning, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.plannings.ControllerPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ControllerPlanning.prototype.clearPlanningsList = function() {
  return this.setPlanningsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.plannings.ApplicationPlanning.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.plannings.ApplicationPlanning} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectMeta: (f = msg.getObjectMeta()) && prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.toObject(includeInstance, f),
    planningType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    planningId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    predictionId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    totalCost: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    applyPlanningNow: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    planningsList: jspb.Message.toObjectList(msg.getPlanningsList(),
    proto.prophetstor.api.datahub.plannings.Planning.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.plannings.ApplicationPlanning}
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.plannings.ApplicationPlanning;
  return proto.prophetstor.api.datahub.plannings.ApplicationPlanning.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.plannings.ApplicationPlanning} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.plannings.ApplicationPlanning}
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new prophetstor_api_datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setObjectMeta(value);
      break;
    case 2:
      var value = /** @type {!proto.prophetstor.api.datahub.plannings.PlanningType} */ (reader.readEnum());
      msg.setPlanningType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlanningId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPredictionId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalCost(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApplyPlanningNow(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 9:
      var value = new proto.prophetstor.api.datahub.plannings.Planning;
      reader.readMessage(value,proto.prophetstor.api.datahub.plannings.Planning.deserializeBinaryFromReader);
      msg.addPlannings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.plannings.ApplicationPlanning.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.plannings.ApplicationPlanning} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getPlanningType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPlanningId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPredictionId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTotalCost();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getApplyPlanningNow();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.prophetstor.api.datahub.plannings.Planning.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.api.datahub.resources.ObjectMeta object_meta = 1;
 * @return {?proto.prophetstor.api.datahub.resources.ObjectMeta}
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.getObjectMeta = function() {
  return /** @type{?proto.prophetstor.api.datahub.resources.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_resources_metadata_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.resources.ObjectMeta|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.ApplicationPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.setObjectMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.ApplicationPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.clearObjectMeta = function() {
  return this.setObjectMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.hasObjectMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PlanningType planning_type = 2;
 * @return {!proto.prophetstor.api.datahub.plannings.PlanningType}
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.getPlanningType = function() {
  return /** @type {!proto.prophetstor.api.datahub.plannings.PlanningType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.plannings.PlanningType} value
 * @return {!proto.prophetstor.api.datahub.plannings.ApplicationPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.setPlanningType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string planning_id = 3;
 * @return {string}
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.getPlanningId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.plannings.ApplicationPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.setPlanningId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string prediction_id = 4;
 * @return {string}
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.getPredictionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.plannings.ApplicationPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.setPredictionId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double total_cost = 5;
 * @return {number}
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.getTotalCost = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.api.datahub.plannings.ApplicationPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.setTotalCost = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional bool apply_planning_now = 6;
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.getApplyPlanningNow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.prophetstor.api.datahub.plannings.ApplicationPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.setApplyPlanningNow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp start_time = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.ApplicationPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.ApplicationPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.ApplicationPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.ApplicationPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated Planning plannings = 9;
 * @return {!Array<!proto.prophetstor.api.datahub.plannings.Planning>}
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.getPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.plannings.Planning>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.prophetstor.api.datahub.plannings.Planning, 9));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.plannings.Planning>} value
 * @return {!proto.prophetstor.api.datahub.plannings.ApplicationPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.setPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.plannings.Planning=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.plannings.Planning}
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.addPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.prophetstor.api.datahub.plannings.Planning, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.plannings.ApplicationPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ApplicationPlanning.prototype.clearPlanningsList = function() {
  return this.setPlanningsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.plannings.NamespacePlanning.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.plannings.NamespacePlanning} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectMeta: (f = msg.getObjectMeta()) && prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.toObject(includeInstance, f),
    planningType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    planningId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    predictionId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    totalCost: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    applyPlanningNow: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    planningsList: jspb.Message.toObjectList(msg.getPlanningsList(),
    proto.prophetstor.api.datahub.plannings.Planning.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.plannings.NamespacePlanning}
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.plannings.NamespacePlanning;
  return proto.prophetstor.api.datahub.plannings.NamespacePlanning.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.plannings.NamespacePlanning} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.plannings.NamespacePlanning}
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new prophetstor_api_datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setObjectMeta(value);
      break;
    case 2:
      var value = /** @type {!proto.prophetstor.api.datahub.plannings.PlanningType} */ (reader.readEnum());
      msg.setPlanningType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlanningId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPredictionId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalCost(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApplyPlanningNow(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 9:
      var value = new proto.prophetstor.api.datahub.plannings.Planning;
      reader.readMessage(value,proto.prophetstor.api.datahub.plannings.Planning.deserializeBinaryFromReader);
      msg.addPlannings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.plannings.NamespacePlanning.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.plannings.NamespacePlanning} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getPlanningType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPlanningId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPredictionId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTotalCost();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getApplyPlanningNow();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.prophetstor.api.datahub.plannings.Planning.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.api.datahub.resources.ObjectMeta object_meta = 1;
 * @return {?proto.prophetstor.api.datahub.resources.ObjectMeta}
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.getObjectMeta = function() {
  return /** @type{?proto.prophetstor.api.datahub.resources.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_resources_metadata_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.resources.ObjectMeta|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.NamespacePlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.setObjectMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.NamespacePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.clearObjectMeta = function() {
  return this.setObjectMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.hasObjectMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PlanningType planning_type = 2;
 * @return {!proto.prophetstor.api.datahub.plannings.PlanningType}
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.getPlanningType = function() {
  return /** @type {!proto.prophetstor.api.datahub.plannings.PlanningType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.plannings.PlanningType} value
 * @return {!proto.prophetstor.api.datahub.plannings.NamespacePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.setPlanningType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string planning_id = 3;
 * @return {string}
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.getPlanningId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.plannings.NamespacePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.setPlanningId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string prediction_id = 4;
 * @return {string}
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.getPredictionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.plannings.NamespacePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.setPredictionId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double total_cost = 5;
 * @return {number}
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.getTotalCost = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.api.datahub.plannings.NamespacePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.setTotalCost = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional bool apply_planning_now = 6;
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.getApplyPlanningNow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.prophetstor.api.datahub.plannings.NamespacePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.setApplyPlanningNow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp start_time = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.NamespacePlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.NamespacePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.NamespacePlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.NamespacePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated Planning plannings = 9;
 * @return {!Array<!proto.prophetstor.api.datahub.plannings.Planning>}
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.getPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.plannings.Planning>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.prophetstor.api.datahub.plannings.Planning, 9));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.plannings.Planning>} value
 * @return {!proto.prophetstor.api.datahub.plannings.NamespacePlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.setPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.plannings.Planning=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.plannings.Planning}
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.addPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.prophetstor.api.datahub.plannings.Planning, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.plannings.NamespacePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.NamespacePlanning.prototype.clearPlanningsList = function() {
  return this.setPlanningsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.plannings.NodePlanning.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.plannings.NodePlanning} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectMeta: (f = msg.getObjectMeta()) && prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.toObject(includeInstance, f),
    planningType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    planningId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    predictionId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    totalCost: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    applyPlanningNow: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    planningsList: jspb.Message.toObjectList(msg.getPlanningsList(),
    proto.prophetstor.api.datahub.plannings.Planning.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.plannings.NodePlanning}
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.plannings.NodePlanning;
  return proto.prophetstor.api.datahub.plannings.NodePlanning.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.plannings.NodePlanning} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.plannings.NodePlanning}
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new prophetstor_api_datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setObjectMeta(value);
      break;
    case 2:
      var value = /** @type {!proto.prophetstor.api.datahub.plannings.PlanningType} */ (reader.readEnum());
      msg.setPlanningType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlanningId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPredictionId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalCost(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApplyPlanningNow(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 9:
      var value = new proto.prophetstor.api.datahub.plannings.Planning;
      reader.readMessage(value,proto.prophetstor.api.datahub.plannings.Planning.deserializeBinaryFromReader);
      msg.addPlannings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.plannings.NodePlanning.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.plannings.NodePlanning} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getPlanningType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPlanningId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPredictionId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTotalCost();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getApplyPlanningNow();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.prophetstor.api.datahub.plannings.Planning.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.api.datahub.resources.ObjectMeta object_meta = 1;
 * @return {?proto.prophetstor.api.datahub.resources.ObjectMeta}
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.getObjectMeta = function() {
  return /** @type{?proto.prophetstor.api.datahub.resources.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_resources_metadata_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.resources.ObjectMeta|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.NodePlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.setObjectMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.NodePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.clearObjectMeta = function() {
  return this.setObjectMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.hasObjectMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PlanningType planning_type = 2;
 * @return {!proto.prophetstor.api.datahub.plannings.PlanningType}
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.getPlanningType = function() {
  return /** @type {!proto.prophetstor.api.datahub.plannings.PlanningType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.plannings.PlanningType} value
 * @return {!proto.prophetstor.api.datahub.plannings.NodePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.setPlanningType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string planning_id = 3;
 * @return {string}
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.getPlanningId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.plannings.NodePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.setPlanningId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string prediction_id = 4;
 * @return {string}
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.getPredictionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.plannings.NodePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.setPredictionId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double total_cost = 5;
 * @return {number}
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.getTotalCost = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.api.datahub.plannings.NodePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.setTotalCost = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional bool apply_planning_now = 6;
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.getApplyPlanningNow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.prophetstor.api.datahub.plannings.NodePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.setApplyPlanningNow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp start_time = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.NodePlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.NodePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.NodePlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.NodePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated Planning plannings = 9;
 * @return {!Array<!proto.prophetstor.api.datahub.plannings.Planning>}
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.getPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.plannings.Planning>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.prophetstor.api.datahub.plannings.Planning, 9));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.plannings.Planning>} value
 * @return {!proto.prophetstor.api.datahub.plannings.NodePlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.setPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.plannings.Planning=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.plannings.Planning}
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.addPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.prophetstor.api.datahub.plannings.Planning, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.plannings.NodePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.NodePlanning.prototype.clearPlanningsList = function() {
  return this.setPlanningsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.plannings.ClusterPlanning.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.plannings.ClusterPlanning} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectMeta: (f = msg.getObjectMeta()) && prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.toObject(includeInstance, f),
    planningType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    planningId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    predictionId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    totalCost: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    applyPlanningNow: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    planningsList: jspb.Message.toObjectList(msg.getPlanningsList(),
    proto.prophetstor.api.datahub.plannings.Planning.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.plannings.ClusterPlanning}
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.plannings.ClusterPlanning;
  return proto.prophetstor.api.datahub.plannings.ClusterPlanning.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.plannings.ClusterPlanning} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.plannings.ClusterPlanning}
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new prophetstor_api_datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setObjectMeta(value);
      break;
    case 2:
      var value = /** @type {!proto.prophetstor.api.datahub.plannings.PlanningType} */ (reader.readEnum());
      msg.setPlanningType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlanningId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPredictionId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalCost(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApplyPlanningNow(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 9:
      var value = new proto.prophetstor.api.datahub.plannings.Planning;
      reader.readMessage(value,proto.prophetstor.api.datahub.plannings.Planning.deserializeBinaryFromReader);
      msg.addPlannings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.plannings.ClusterPlanning.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.plannings.ClusterPlanning} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getPlanningType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPlanningId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPredictionId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTotalCost();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getApplyPlanningNow();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.prophetstor.api.datahub.plannings.Planning.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.api.datahub.resources.ObjectMeta object_meta = 1;
 * @return {?proto.prophetstor.api.datahub.resources.ObjectMeta}
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.getObjectMeta = function() {
  return /** @type{?proto.prophetstor.api.datahub.resources.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_resources_metadata_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.resources.ObjectMeta|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.ClusterPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.setObjectMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.ClusterPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.clearObjectMeta = function() {
  return this.setObjectMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.hasObjectMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PlanningType planning_type = 2;
 * @return {!proto.prophetstor.api.datahub.plannings.PlanningType}
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.getPlanningType = function() {
  return /** @type {!proto.prophetstor.api.datahub.plannings.PlanningType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.plannings.PlanningType} value
 * @return {!proto.prophetstor.api.datahub.plannings.ClusterPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.setPlanningType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string planning_id = 3;
 * @return {string}
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.getPlanningId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.plannings.ClusterPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.setPlanningId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string prediction_id = 4;
 * @return {string}
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.getPredictionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.plannings.ClusterPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.setPredictionId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double total_cost = 5;
 * @return {number}
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.getTotalCost = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.api.datahub.plannings.ClusterPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.setTotalCost = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional bool apply_planning_now = 6;
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.getApplyPlanningNow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.prophetstor.api.datahub.plannings.ClusterPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.setApplyPlanningNow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp start_time = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.ClusterPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.ClusterPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.ClusterPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.ClusterPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated Planning plannings = 9;
 * @return {!Array<!proto.prophetstor.api.datahub.plannings.Planning>}
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.getPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.plannings.Planning>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.prophetstor.api.datahub.plannings.Planning, 9));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.plannings.Planning>} value
 * @return {!proto.prophetstor.api.datahub.plannings.ClusterPlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.setPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.plannings.Planning=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.plannings.Planning}
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.addPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.prophetstor.api.datahub.plannings.Planning, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.plannings.ClusterPlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.ClusterPlanning.prototype.clearPlanningsList = function() {
  return this.setPlanningsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.plannings.WritePlanning.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.plannings.WritePlanning.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.plannings.WritePlanning} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.plannings.WritePlanning.toObject = function(includeInstance, msg) {
  var f, obj = {
    metricType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    resourceQuota: jspb.Message.getFieldWithDefault(msg, 2, 0),
    writeData: (f = msg.getWriteData()) && prophetstor_api_datahub_common_rawdata_pb.WriteData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.plannings.WritePlanning}
 */
proto.prophetstor.api.datahub.plannings.WritePlanning.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.plannings.WritePlanning;
  return proto.prophetstor.api.datahub.plannings.WritePlanning.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.plannings.WritePlanning} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.plannings.WritePlanning}
 */
proto.prophetstor.api.datahub.plannings.WritePlanning.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.prophetstor.api.datahub.common.MetricType} */ (reader.readEnum());
      msg.setMetricType(value);
      break;
    case 2:
      var value = /** @type {!proto.prophetstor.api.datahub.common.ResourceQuota} */ (reader.readEnum());
      msg.setResourceQuota(value);
      break;
    case 3:
      var value = new prophetstor_api_datahub_common_rawdata_pb.WriteData;
      reader.readMessage(value,prophetstor_api_datahub_common_rawdata_pb.WriteData.deserializeBinaryFromReader);
      msg.setWriteData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.plannings.WritePlanning.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.plannings.WritePlanning.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.plannings.WritePlanning} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.plannings.WritePlanning.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetricType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getResourceQuota();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getWriteData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      prophetstor_api_datahub_common_rawdata_pb.WriteData.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.api.datahub.common.MetricType metric_type = 1;
 * @return {!proto.prophetstor.api.datahub.common.MetricType}
 */
proto.prophetstor.api.datahub.plannings.WritePlanning.prototype.getMetricType = function() {
  return /** @type {!proto.prophetstor.api.datahub.common.MetricType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.common.MetricType} value
 * @return {!proto.prophetstor.api.datahub.plannings.WritePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.WritePlanning.prototype.setMetricType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional prophetstor.api.datahub.common.ResourceQuota resource_quota = 2;
 * @return {!proto.prophetstor.api.datahub.common.ResourceQuota}
 */
proto.prophetstor.api.datahub.plannings.WritePlanning.prototype.getResourceQuota = function() {
  return /** @type {!proto.prophetstor.api.datahub.common.ResourceQuota} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.common.ResourceQuota} value
 * @return {!proto.prophetstor.api.datahub.plannings.WritePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.WritePlanning.prototype.setResourceQuota = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional prophetstor.api.datahub.common.WriteData write_data = 3;
 * @return {?proto.prophetstor.api.datahub.common.WriteData}
 */
proto.prophetstor.api.datahub.plannings.WritePlanning.prototype.getWriteData = function() {
  return /** @type{?proto.prophetstor.api.datahub.common.WriteData} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_common_rawdata_pb.WriteData, 3));
};


/**
 * @param {?proto.prophetstor.api.datahub.common.WriteData|undefined} value
 * @return {!proto.prophetstor.api.datahub.plannings.WritePlanning} returns this
*/
proto.prophetstor.api.datahub.plannings.WritePlanning.prototype.setWriteData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.plannings.WritePlanning} returns this
 */
proto.prophetstor.api.datahub.plannings.WritePlanning.prototype.clearWriteData = function() {
  return this.setWriteData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.plannings.WritePlanning.prototype.hasWriteData = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.prophetstor.api.datahub.plannings);
