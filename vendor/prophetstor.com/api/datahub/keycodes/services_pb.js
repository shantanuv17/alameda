// source: prophetstor/api/datahub/keycodes/services.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var prophetstor_api_datahub_keycodes_keycodes_pb = require('../../../../prophetstor/api/datahub/keycodes/keycodes_pb.js');
goog.object.extend(proto, prophetstor_api_datahub_keycodes_keycodes_pb);
var google_rpc_status_pb = require('../../../../prophetstor/api/google/rpc/status_pb.js');
goog.object.extend(proto, google_rpc_status_pb);
goog.exportSymbol('proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest.displayName = 'proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse.displayName = 'proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest.displayName = 'proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.displayName = 'proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest.displayName = 'proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse.displayName = 'proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest.displayName = 'proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    keycode: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest}
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest;
  return proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest}
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string keycode = 1;
 * @return {string}
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest.prototype.getKeycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest} returns this
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeRequest.prototype.setKeycode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f),
    keycode: (f = msg.getKeycode()) && prophetstor_api_datahub_keycodes_keycodes_pb.Keycode.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse}
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse;
  return proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse}
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new prophetstor_api_datahub_keycodes_keycodes_pb.Keycode;
      reader.readMessage(value,prophetstor_api_datahub_keycodes_keycodes_pb.Keycode.deserializeBinaryFromReader);
      msg.setKeycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getKeycode();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      prophetstor_api_datahub_keycodes_keycodes_pb.Keycode.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse} returns this
*/
proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse} returns this
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Keycode keycode = 2;
 * @return {?proto.prophetstor.api.datahub.keycodes.Keycode}
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse.prototype.getKeycode = function() {
  return /** @type{?proto.prophetstor.api.datahub.keycodes.Keycode} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_keycodes_keycodes_pb.Keycode, 2));
};


/**
 * @param {?proto.prophetstor.api.datahub.keycodes.Keycode|undefined} value
 * @return {!proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse} returns this
*/
proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse.prototype.setKeycode = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse} returns this
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse.prototype.clearKeycode = function() {
  return this.setKeycode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.keycodes.AddKeycodeResponse.prototype.hasKeycode = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    keycodesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest}
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest;
  return proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest}
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addKeycodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeycodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string keycodes = 1;
 * @return {!Array<string>}
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest.prototype.getKeycodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest} returns this
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest.prototype.setKeycodesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest} returns this
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest.prototype.addKeycodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest} returns this
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesRequest.prototype.clearKeycodesList = function() {
  return this.setKeycodesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f),
    keycodesList: jspb.Message.toObjectList(msg.getKeycodesList(),
    prophetstor_api_datahub_keycodes_keycodes_pb.Keycode.toObject, includeInstance),
    summary: (f = msg.getSummary()) && prophetstor_api_datahub_keycodes_keycodes_pb.Keycode.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse}
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse;
  return proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse}
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new prophetstor_api_datahub_keycodes_keycodes_pb.Keycode;
      reader.readMessage(value,prophetstor_api_datahub_keycodes_keycodes_pb.Keycode.deserializeBinaryFromReader);
      msg.addKeycodes(value);
      break;
    case 3:
      var value = new prophetstor_api_datahub_keycodes_keycodes_pb.Keycode;
      reader.readMessage(value,prophetstor_api_datahub_keycodes_keycodes_pb.Keycode.deserializeBinaryFromReader);
      msg.setSummary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getKeycodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      prophetstor_api_datahub_keycodes_keycodes_pb.Keycode.serializeBinaryToWriter
    );
  }
  f = message.getSummary();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      prophetstor_api_datahub_keycodes_keycodes_pb.Keycode.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse} returns this
*/
proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse} returns this
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Keycode keycodes = 2;
 * @return {!Array<!proto.prophetstor.api.datahub.keycodes.Keycode>}
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.prototype.getKeycodesList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.keycodes.Keycode>} */ (
    jspb.Message.getRepeatedWrapperField(this, prophetstor_api_datahub_keycodes_keycodes_pb.Keycode, 2));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.keycodes.Keycode>} value
 * @return {!proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse} returns this
*/
proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.prototype.setKeycodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.keycodes.Keycode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.keycodes.Keycode}
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.prototype.addKeycodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.api.datahub.keycodes.Keycode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse} returns this
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.prototype.clearKeycodesList = function() {
  return this.setKeycodesList([]);
};


/**
 * optional Keycode summary = 3;
 * @return {?proto.prophetstor.api.datahub.keycodes.Keycode}
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.prototype.getSummary = function() {
  return /** @type{?proto.prophetstor.api.datahub.keycodes.Keycode} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_keycodes_keycodes_pb.Keycode, 3));
};


/**
 * @param {?proto.prophetstor.api.datahub.keycodes.Keycode|undefined} value
 * @return {!proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse} returns this
*/
proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.prototype.setSummary = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse} returns this
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.prototype.clearSummary = function() {
  return this.setSummary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.keycodes.ListKeycodesResponse.prototype.hasSummary = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    keycode: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest}
 */
proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest;
  return proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest}
 */
proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string keycode = 1;
 * @return {string}
 */
proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest.prototype.getKeycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest} returns this
 */
proto.prophetstor.api.datahub.keycodes.DeleteKeycodeRequest.prototype.setKeycode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f),
    data: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse}
 */
proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse;
  return proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse}
 */
proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse} returns this
*/
proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse} returns this
 */
proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string data = 2;
 * @return {string}
 */
proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse} returns this
 */
proto.prophetstor.api.datahub.keycodes.GenerateRegistrationDataResponse.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest}
 */
proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest;
  return proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest}
 */
proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string data = 1;
 * @return {string}
 */
proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest} returns this
 */
proto.prophetstor.api.datahub.keycodes.ActivateRegistrationDataRequest.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.prophetstor.api.datahub.keycodes);
