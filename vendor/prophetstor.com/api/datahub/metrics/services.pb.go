// This file has messages related to metric data of containers, pods, and nodes

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: prophetstor/api/datahub/metrics/services.proto

package metrics

import (
	proto "github.com/golang/protobuf/proto"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "prophetstor.com/api/datahub/common"
	resources "prophetstor.com/api/datahub/resources"
	schemas "prophetstor.com/api/datahub/schemas"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//*
// Represents a request for creating metrics data of pods.
type CreatePodMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodMetrics []*PodMetric `protobuf:"bytes,1,rep,name=pod_metrics,json=podMetrics,proto3" json:"pod_metrics,omitempty"`
	RateRange  uint64       `protobuf:"varint,2,opt,name=rate_range,json=rateRange,proto3" json:"rate_range,omitempty"`
}

func (x *CreatePodMetricsRequest) Reset() {
	*x = CreatePodMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePodMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePodMetricsRequest) ProtoMessage() {}

func (x *CreatePodMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePodMetricsRequest.ProtoReflect.Descriptor instead.
func (*CreatePodMetricsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePodMetricsRequest) GetPodMetrics() []*PodMetric {
	if x != nil {
		return x.PodMetrics
	}
	return nil
}

func (x *CreatePodMetricsRequest) GetRateRange() uint64 {
	if x != nil {
		return x.RateRange
	}
	return 0
}

//*
// Represents a request for creating metrics data of controllers.
type CreateControllerMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControllerMetrics []*ControllerMetric `protobuf:"bytes,1,rep,name=controller_metrics,json=controllerMetrics,proto3" json:"controller_metrics,omitempty"`
}

func (x *CreateControllerMetricsRequest) Reset() {
	*x = CreateControllerMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateControllerMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateControllerMetricsRequest) ProtoMessage() {}

func (x *CreateControllerMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateControllerMetricsRequest.ProtoReflect.Descriptor instead.
func (*CreateControllerMetricsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{1}
}

func (x *CreateControllerMetricsRequest) GetControllerMetrics() []*ControllerMetric {
	if x != nil {
		return x.ControllerMetrics
	}
	return nil
}

//*
// Represents a request for creating metrics data of alameda scalers.
type CreateApplicationMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationMetrics []*ApplicationMetric `protobuf:"bytes,1,rep,name=application_metrics,json=applicationMetrics,proto3" json:"application_metrics,omitempty"`
}

func (x *CreateApplicationMetricsRequest) Reset() {
	*x = CreateApplicationMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApplicationMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApplicationMetricsRequest) ProtoMessage() {}

func (x *CreateApplicationMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApplicationMetricsRequest.ProtoReflect.Descriptor instead.
func (*CreateApplicationMetricsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{2}
}

func (x *CreateApplicationMetricsRequest) GetApplicationMetrics() []*ApplicationMetric {
	if x != nil {
		return x.ApplicationMetrics
	}
	return nil
}

//*
// Represents a request for creating metrics data of namespaces.
type CreateNamespaceMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceMetrics []*NamespaceMetric `protobuf:"bytes,1,rep,name=namespace_metrics,json=namespaceMetrics,proto3" json:"namespace_metrics,omitempty"`
}

func (x *CreateNamespaceMetricsRequest) Reset() {
	*x = CreateNamespaceMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNamespaceMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespaceMetricsRequest) ProtoMessage() {}

func (x *CreateNamespaceMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespaceMetricsRequest.ProtoReflect.Descriptor instead.
func (*CreateNamespaceMetricsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{3}
}

func (x *CreateNamespaceMetricsRequest) GetNamespaceMetrics() []*NamespaceMetric {
	if x != nil {
		return x.NamespaceMetrics
	}
	return nil
}

//*
// Represents a request for creating metrics data of nodes.
type CreateNodeMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeMetrics []*NodeMetric `protobuf:"bytes,1,rep,name=node_metrics,json=nodeMetrics,proto3" json:"node_metrics,omitempty"`
}

func (x *CreateNodeMetricsRequest) Reset() {
	*x = CreateNodeMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNodeMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodeMetricsRequest) ProtoMessage() {}

func (x *CreateNodeMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodeMetricsRequest.ProtoReflect.Descriptor instead.
func (*CreateNodeMetricsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{4}
}

func (x *CreateNodeMetricsRequest) GetNodeMetrics() []*NodeMetric {
	if x != nil {
		return x.NodeMetrics
	}
	return nil
}

//*
// Represents a request for creating metrics data of clusters.
type CreateClusterMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterMetrics []*ClusterMetric `protobuf:"bytes,1,rep,name=cluster_metrics,json=clusterMetrics,proto3" json:"cluster_metrics,omitempty"`
}

func (x *CreateClusterMetricsRequest) Reset() {
	*x = CreateClusterMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClusterMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClusterMetricsRequest) ProtoMessage() {}

func (x *CreateClusterMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClusterMetricsRequest.ProtoReflect.Descriptor instead.
func (*CreateClusterMetricsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{5}
}

func (x *CreateClusterMetricsRequest) GetClusterMetrics() []*ClusterMetric {
	if x != nil {
		return x.ClusterMetrics
	}
	return nil
}

//*
// Represents a request for listing metric data of pods.
type ListPodMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryCondition *common.QueryCondition  `protobuf:"bytes,1,opt,name=query_condition,json=queryCondition,proto3" json:"query_condition,omitempty"`
	ObjectMeta     []*resources.ObjectMeta `protobuf:"bytes,2,rep,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	MetricTypes    []common.MetricType     `protobuf:"varint,3,rep,packed,name=metric_types,json=metricTypes,proto3,enum=prophetstor.api.datahub.common.MetricType" json:"metric_types,omitempty"`
	RateRange      uint64                  `protobuf:"varint,4,opt,name=rate_range,json=rateRange,proto3" json:"rate_range,omitempty"`
}

func (x *ListPodMetricsRequest) Reset() {
	*x = ListPodMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPodMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPodMetricsRequest) ProtoMessage() {}

func (x *ListPodMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPodMetricsRequest.ProtoReflect.Descriptor instead.
func (*ListPodMetricsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{6}
}

func (x *ListPodMetricsRequest) GetQueryCondition() *common.QueryCondition {
	if x != nil {
		return x.QueryCondition
	}
	return nil
}

func (x *ListPodMetricsRequest) GetObjectMeta() []*resources.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *ListPodMetricsRequest) GetMetricTypes() []common.MetricType {
	if x != nil {
		return x.MetricTypes
	}
	return nil
}

func (x *ListPodMetricsRequest) GetRateRange() uint64 {
	if x != nil {
		return x.RateRange
	}
	return 0
}

//*
// Represents a response for a listing pods metric data request.
type ListPodMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     *status.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	PodMetrics []*PodMetric   `protobuf:"bytes,2,rep,name=pod_metrics,json=podMetrics,proto3" json:"pod_metrics,omitempty"`
}

func (x *ListPodMetricsResponse) Reset() {
	*x = ListPodMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPodMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPodMetricsResponse) ProtoMessage() {}

func (x *ListPodMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPodMetricsResponse.ProtoReflect.Descriptor instead.
func (*ListPodMetricsResponse) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{7}
}

func (x *ListPodMetricsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListPodMetricsResponse) GetPodMetrics() []*PodMetric {
	if x != nil {
		return x.PodMetrics
	}
	return nil
}

//*
// Represents a request for listing metric data of controllers.
type ListControllerMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryCondition *common.QueryCondition  `protobuf:"bytes,1,opt,name=query_condition,json=queryCondition,proto3" json:"query_condition,omitempty"`
	ObjectMeta     []*resources.ObjectMeta `protobuf:"bytes,2,rep,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	MetricTypes    []common.MetricType     `protobuf:"varint,3,rep,packed,name=metric_types,json=metricTypes,proto3,enum=prophetstor.api.datahub.common.MetricType" json:"metric_types,omitempty"`
	Kind           resources.Kind          `protobuf:"varint,4,opt,name=kind,proto3,enum=prophetstor.api.datahub.resources.Kind" json:"kind,omitempty"`
}

func (x *ListControllerMetricsRequest) Reset() {
	*x = ListControllerMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListControllerMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListControllerMetricsRequest) ProtoMessage() {}

func (x *ListControllerMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListControllerMetricsRequest.ProtoReflect.Descriptor instead.
func (*ListControllerMetricsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{8}
}

func (x *ListControllerMetricsRequest) GetQueryCondition() *common.QueryCondition {
	if x != nil {
		return x.QueryCondition
	}
	return nil
}

func (x *ListControllerMetricsRequest) GetObjectMeta() []*resources.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *ListControllerMetricsRequest) GetMetricTypes() []common.MetricType {
	if x != nil {
		return x.MetricTypes
	}
	return nil
}

func (x *ListControllerMetricsRequest) GetKind() resources.Kind {
	if x != nil {
		return x.Kind
	}
	return resources.Kind_KIND_UNDEFINED
}

//*
// Represents a response for a listing controllers metric data request.
type ListControllerMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status            *status.Status      `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ControllerMetrics []*ControllerMetric `protobuf:"bytes,2,rep,name=controller_metrics,json=controllerMetrics,proto3" json:"controller_metrics,omitempty"`
}

func (x *ListControllerMetricsResponse) Reset() {
	*x = ListControllerMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListControllerMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListControllerMetricsResponse) ProtoMessage() {}

func (x *ListControllerMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListControllerMetricsResponse.ProtoReflect.Descriptor instead.
func (*ListControllerMetricsResponse) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{9}
}

func (x *ListControllerMetricsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListControllerMetricsResponse) GetControllerMetrics() []*ControllerMetric {
	if x != nil {
		return x.ControllerMetrics
	}
	return nil
}

//*
// Represents a request for listing metric data of alameda scalers.
type ListApplicationMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryCondition *common.QueryCondition  `protobuf:"bytes,1,opt,name=query_condition,json=queryCondition,proto3" json:"query_condition,omitempty"`
	ObjectMeta     []*resources.ObjectMeta `protobuf:"bytes,2,rep,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	MetricTypes    []common.MetricType     `protobuf:"varint,3,rep,packed,name=metric_types,json=metricTypes,proto3,enum=prophetstor.api.datahub.common.MetricType" json:"metric_types,omitempty"`
}

func (x *ListApplicationMetricsRequest) Reset() {
	*x = ListApplicationMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApplicationMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationMetricsRequest) ProtoMessage() {}

func (x *ListApplicationMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApplicationMetricsRequest.ProtoReflect.Descriptor instead.
func (*ListApplicationMetricsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{10}
}

func (x *ListApplicationMetricsRequest) GetQueryCondition() *common.QueryCondition {
	if x != nil {
		return x.QueryCondition
	}
	return nil
}

func (x *ListApplicationMetricsRequest) GetObjectMeta() []*resources.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *ListApplicationMetricsRequest) GetMetricTypes() []common.MetricType {
	if x != nil {
		return x.MetricTypes
	}
	return nil
}

//*
// Represents a response for a listing alameda scalers metric data request.
type ListApplicationMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status             *status.Status       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ApplicationMetrics []*ApplicationMetric `protobuf:"bytes,2,rep,name=application_metrics,json=applicationMetrics,proto3" json:"application_metrics,omitempty"`
}

func (x *ListApplicationMetricsResponse) Reset() {
	*x = ListApplicationMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApplicationMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationMetricsResponse) ProtoMessage() {}

func (x *ListApplicationMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApplicationMetricsResponse.ProtoReflect.Descriptor instead.
func (*ListApplicationMetricsResponse) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{11}
}

func (x *ListApplicationMetricsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListApplicationMetricsResponse) GetApplicationMetrics() []*ApplicationMetric {
	if x != nil {
		return x.ApplicationMetrics
	}
	return nil
}

//*
// Represents a request for listing metric data of namespaces.
type ListNamespaceMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryCondition *common.QueryCondition  `protobuf:"bytes,1,opt,name=query_condition,json=queryCondition,proto3" json:"query_condition,omitempty"`
	ObjectMeta     []*resources.ObjectMeta `protobuf:"bytes,2,rep,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	MetricTypes    []common.MetricType     `protobuf:"varint,3,rep,packed,name=metric_types,json=metricTypes,proto3,enum=prophetstor.api.datahub.common.MetricType" json:"metric_types,omitempty"`
}

func (x *ListNamespaceMetricsRequest) Reset() {
	*x = ListNamespaceMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespaceMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceMetricsRequest) ProtoMessage() {}

func (x *ListNamespaceMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceMetricsRequest.ProtoReflect.Descriptor instead.
func (*ListNamespaceMetricsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{12}
}

func (x *ListNamespaceMetricsRequest) GetQueryCondition() *common.QueryCondition {
	if x != nil {
		return x.QueryCondition
	}
	return nil
}

func (x *ListNamespaceMetricsRequest) GetObjectMeta() []*resources.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *ListNamespaceMetricsRequest) GetMetricTypes() []common.MetricType {
	if x != nil {
		return x.MetricTypes
	}
	return nil
}

//*
// Represents a response for a listing namespaces metric data request.
type ListNamespaceMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           *status.Status     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	NamespaceMetrics []*NamespaceMetric `protobuf:"bytes,2,rep,name=namespace_metrics,json=namespaceMetrics,proto3" json:"namespace_metrics,omitempty"`
}

func (x *ListNamespaceMetricsResponse) Reset() {
	*x = ListNamespaceMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespaceMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceMetricsResponse) ProtoMessage() {}

func (x *ListNamespaceMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceMetricsResponse.ProtoReflect.Descriptor instead.
func (*ListNamespaceMetricsResponse) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{13}
}

func (x *ListNamespaceMetricsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListNamespaceMetricsResponse) GetNamespaceMetrics() []*NamespaceMetric {
	if x != nil {
		return x.NamespaceMetrics
	}
	return nil
}

//*
// Represents a request for listing metric data of nodes.
type ListNodeMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryCondition *common.QueryCondition  `protobuf:"bytes,1,opt,name=query_condition,json=queryCondition,proto3" json:"query_condition,omitempty"`
	ObjectMeta     []*resources.ObjectMeta `protobuf:"bytes,2,rep,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	MetricTypes    []common.MetricType     `protobuf:"varint,3,rep,packed,name=metric_types,json=metricTypes,proto3,enum=prophetstor.api.datahub.common.MetricType" json:"metric_types,omitempty"`
}

func (x *ListNodeMetricsRequest) Reset() {
	*x = ListNodeMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodeMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeMetricsRequest) ProtoMessage() {}

func (x *ListNodeMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeMetricsRequest.ProtoReflect.Descriptor instead.
func (*ListNodeMetricsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{14}
}

func (x *ListNodeMetricsRequest) GetQueryCondition() *common.QueryCondition {
	if x != nil {
		return x.QueryCondition
	}
	return nil
}

func (x *ListNodeMetricsRequest) GetObjectMeta() []*resources.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *ListNodeMetricsRequest) GetMetricTypes() []common.MetricType {
	if x != nil {
		return x.MetricTypes
	}
	return nil
}

//*
// Represents a response for a listing nodes metrics request.
type ListNodeMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      *status.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	NodeMetrics []*NodeMetric  `protobuf:"bytes,2,rep,name=node_metrics,json=nodeMetrics,proto3" json:"node_metrics,omitempty"`
}

func (x *ListNodeMetricsResponse) Reset() {
	*x = ListNodeMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodeMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeMetricsResponse) ProtoMessage() {}

func (x *ListNodeMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeMetricsResponse.ProtoReflect.Descriptor instead.
func (*ListNodeMetricsResponse) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{15}
}

func (x *ListNodeMetricsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListNodeMetricsResponse) GetNodeMetrics() []*NodeMetric {
	if x != nil {
		return x.NodeMetrics
	}
	return nil
}

//*
// Represents a request for listing metric data of clusters.
type ListClusterMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryCondition *common.QueryCondition  `protobuf:"bytes,1,opt,name=query_condition,json=queryCondition,proto3" json:"query_condition,omitempty"`
	ObjectMeta     []*resources.ObjectMeta `protobuf:"bytes,2,rep,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	MetricTypes    []common.MetricType     `protobuf:"varint,3,rep,packed,name=metric_types,json=metricTypes,proto3,enum=prophetstor.api.datahub.common.MetricType" json:"metric_types,omitempty"`
}

func (x *ListClusterMetricsRequest) Reset() {
	*x = ListClusterMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClusterMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterMetricsRequest) ProtoMessage() {}

func (x *ListClusterMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterMetricsRequest.ProtoReflect.Descriptor instead.
func (*ListClusterMetricsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{16}
}

func (x *ListClusterMetricsRequest) GetQueryCondition() *common.QueryCondition {
	if x != nil {
		return x.QueryCondition
	}
	return nil
}

func (x *ListClusterMetricsRequest) GetObjectMeta() []*resources.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *ListClusterMetricsRequest) GetMetricTypes() []common.MetricType {
	if x != nil {
		return x.MetricTypes
	}
	return nil
}

//*
// Represents a response for a listing clusters metrics request.
type ListClusterMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status         *status.Status   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ClusterMetrics []*ClusterMetric `protobuf:"bytes,2,rep,name=cluster_metrics,json=clusterMetrics,proto3" json:"cluster_metrics,omitempty"`
}

func (x *ListClusterMetricsResponse) Reset() {
	*x = ListClusterMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClusterMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterMetricsResponse) ProtoMessage() {}

func (x *ListClusterMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterMetricsResponse.ProtoReflect.Descriptor instead.
func (*ListClusterMetricsResponse) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{17}
}

func (x *ListClusterMetricsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListClusterMetricsResponse) GetClusterMetrics() []*ClusterMetric {
	if x != nil {
		return x.ClusterMetrics
	}
	return nil
}

type CreateMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchemaMeta *schemas.SchemaMeta `protobuf:"bytes,1,opt,name=schema_meta,json=schemaMeta,proto3" json:"schema_meta,omitempty"`
	Metrics    []*WriteMetric      `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *CreateMetricsRequest) Reset() {
	*x = CreateMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMetricsRequest) ProtoMessage() {}

func (x *CreateMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMetricsRequest.ProtoReflect.Descriptor instead.
func (*CreateMetricsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{18}
}

func (x *CreateMetricsRequest) GetSchemaMeta() *schemas.SchemaMeta {
	if x != nil {
		return x.SchemaMeta
	}
	return nil
}

func (x *CreateMetricsRequest) GetMetrics() []*WriteMetric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type ListMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryCondition *common.QueryCondition `protobuf:"bytes,1,opt,name=query_condition,json=queryCondition,proto3" json:"query_condition,omitempty"`
	SchemaMeta     *schemas.SchemaMeta    `protobuf:"bytes,2,opt,name=schema_meta,json=schemaMeta,proto3" json:"schema_meta,omitempty"`
	MetricTypes    []common.MetricType    `protobuf:"varint,3,rep,packed,name=metric_types,json=metricTypes,proto3,enum=prophetstor.api.datahub.common.MetricType" json:"metric_types,omitempty"`
}

func (x *ListMetricsRequest) Reset() {
	*x = ListMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricsRequest) ProtoMessage() {}

func (x *ListMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricsRequest.ProtoReflect.Descriptor instead.
func (*ListMetricsRequest) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{19}
}

func (x *ListMetricsRequest) GetQueryCondition() *common.QueryCondition {
	if x != nil {
		return x.QueryCondition
	}
	return nil
}

func (x *ListMetricsRequest) GetSchemaMeta() *schemas.SchemaMeta {
	if x != nil {
		return x.SchemaMeta
	}
	return nil
}

func (x *ListMetricsRequest) GetMetricTypes() []common.MetricType {
	if x != nil {
		return x.MetricTypes
	}
	return nil
}

type ListMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  *status.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Metrics *Metric        `protobuf:"bytes,2,opt,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *ListMetricsResponse) Reset() {
	*x = ListMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricsResponse) ProtoMessage() {}

func (x *ListMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_metrics_services_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricsResponse.ProtoReflect.Descriptor instead.
func (*ListMetricsResponse) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP(), []int{20}
}

func (x *ListMetricsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListMetricsResponse) GetMetrics() *Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

var File_prophetstor_api_datahub_metrics_services_proto protoreflect.FileDescriptor

var file_prophetstor_api_datahub_metrics_services_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1f, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2c, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x70,
	0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x70, 0x72,
	0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x70, 0x72, 0x6f, 0x70, 0x68,
	0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x68,
	0x75, 0x62, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x70, 0x72, 0x6f,
	0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x68, 0x75, 0x62, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x85, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x64, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a,
	0x0b, 0x70, 0x6f, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2e, 0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x0a,
	0x70, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61,
	0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x72, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x1e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x12,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68,
	0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68,
	0x75, 0x62, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x11, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x86,
	0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x63, 0x0a, 0x13, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x52, 0x12, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x7e, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x11, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x10, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x6a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x70,
	0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x68, 0x75, 0x62, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x22, 0x76, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x57, 0x0a, 0x0f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x0e, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0xae, 0x02, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e,
	0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x4d,
	0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74,
	0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x72, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x91, 0x01, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x4b, 0x0a, 0x0b, 0x70, 0x6f, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68,
	0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68,
	0x75, 0x62, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x50, 0x6f, 0x64, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x52, 0x0a, 0x70, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x22, 0xd3, 0x02, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x57, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0b, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x0c, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65,
	0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4b, 0x69, 0x6e, 0x64,
	0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0xad, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x60, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x97, 0x02, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x4e, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74,
	0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x12, 0x4d, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65,
	0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x22, 0xb1, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x63, 0x0a, 0x13, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x52, 0x12, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x22, 0x95, 0x02, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a,
	0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x4d, 0x0a,
	0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0xa9, 0x01, 0x0a,
	0x1c, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5d, 0x0a, 0x11, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74,
	0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x10, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x90, 0x02, 0x0a, 0x16, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0b,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x0c,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x17,
	0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x4e, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x70,
	0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x68, 0x75, 0x62, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x22, 0x93, 0x02, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x57, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0b, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x0c, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0xa1, 0x01, 0x0a, 0x1a, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x57, 0x0a, 0x0f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x0e, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0xac, 0x01,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x46, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73,
	0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x8a, 0x02, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0b,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x0c, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a,
	0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x42, 0x25, 0x5a, 0x23, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prophetstor_api_datahub_metrics_services_proto_rawDescOnce sync.Once
	file_prophetstor_api_datahub_metrics_services_proto_rawDescData = file_prophetstor_api_datahub_metrics_services_proto_rawDesc
)

func file_prophetstor_api_datahub_metrics_services_proto_rawDescGZIP() []byte {
	file_prophetstor_api_datahub_metrics_services_proto_rawDescOnce.Do(func() {
		file_prophetstor_api_datahub_metrics_services_proto_rawDescData = protoimpl.X.CompressGZIP(file_prophetstor_api_datahub_metrics_services_proto_rawDescData)
	})
	return file_prophetstor_api_datahub_metrics_services_proto_rawDescData
}

var file_prophetstor_api_datahub_metrics_services_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_prophetstor_api_datahub_metrics_services_proto_goTypes = []interface{}{
	(*CreatePodMetricsRequest)(nil),         // 0: prophetstor.api.datahub.metrics.CreatePodMetricsRequest
	(*CreateControllerMetricsRequest)(nil),  // 1: prophetstor.api.datahub.metrics.CreateControllerMetricsRequest
	(*CreateApplicationMetricsRequest)(nil), // 2: prophetstor.api.datahub.metrics.CreateApplicationMetricsRequest
	(*CreateNamespaceMetricsRequest)(nil),   // 3: prophetstor.api.datahub.metrics.CreateNamespaceMetricsRequest
	(*CreateNodeMetricsRequest)(nil),        // 4: prophetstor.api.datahub.metrics.CreateNodeMetricsRequest
	(*CreateClusterMetricsRequest)(nil),     // 5: prophetstor.api.datahub.metrics.CreateClusterMetricsRequest
	(*ListPodMetricsRequest)(nil),           // 6: prophetstor.api.datahub.metrics.ListPodMetricsRequest
	(*ListPodMetricsResponse)(nil),          // 7: prophetstor.api.datahub.metrics.ListPodMetricsResponse
	(*ListControllerMetricsRequest)(nil),    // 8: prophetstor.api.datahub.metrics.ListControllerMetricsRequest
	(*ListControllerMetricsResponse)(nil),   // 9: prophetstor.api.datahub.metrics.ListControllerMetricsResponse
	(*ListApplicationMetricsRequest)(nil),   // 10: prophetstor.api.datahub.metrics.ListApplicationMetricsRequest
	(*ListApplicationMetricsResponse)(nil),  // 11: prophetstor.api.datahub.metrics.ListApplicationMetricsResponse
	(*ListNamespaceMetricsRequest)(nil),     // 12: prophetstor.api.datahub.metrics.ListNamespaceMetricsRequest
	(*ListNamespaceMetricsResponse)(nil),    // 13: prophetstor.api.datahub.metrics.ListNamespaceMetricsResponse
	(*ListNodeMetricsRequest)(nil),          // 14: prophetstor.api.datahub.metrics.ListNodeMetricsRequest
	(*ListNodeMetricsResponse)(nil),         // 15: prophetstor.api.datahub.metrics.ListNodeMetricsResponse
	(*ListClusterMetricsRequest)(nil),       // 16: prophetstor.api.datahub.metrics.ListClusterMetricsRequest
	(*ListClusterMetricsResponse)(nil),      // 17: prophetstor.api.datahub.metrics.ListClusterMetricsResponse
	(*CreateMetricsRequest)(nil),            // 18: prophetstor.api.datahub.metrics.CreateMetricsRequest
	(*ListMetricsRequest)(nil),              // 19: prophetstor.api.datahub.metrics.ListMetricsRequest
	(*ListMetricsResponse)(nil),             // 20: prophetstor.api.datahub.metrics.ListMetricsResponse
	(*PodMetric)(nil),                       // 21: prophetstor.api.datahub.metrics.PodMetric
	(*ControllerMetric)(nil),                // 22: prophetstor.api.datahub.metrics.ControllerMetric
	(*ApplicationMetric)(nil),               // 23: prophetstor.api.datahub.metrics.ApplicationMetric
	(*NamespaceMetric)(nil),                 // 24: prophetstor.api.datahub.metrics.NamespaceMetric
	(*NodeMetric)(nil),                      // 25: prophetstor.api.datahub.metrics.NodeMetric
	(*ClusterMetric)(nil),                   // 26: prophetstor.api.datahub.metrics.ClusterMetric
	(*common.QueryCondition)(nil),           // 27: prophetstor.api.datahub.common.QueryCondition
	(*resources.ObjectMeta)(nil),            // 28: prophetstor.api.datahub.resources.ObjectMeta
	(common.MetricType)(0),                  // 29: prophetstor.api.datahub.common.MetricType
	(*status.Status)(nil),                   // 30: google.rpc.Status
	(resources.Kind)(0),                     // 31: prophetstor.api.datahub.resources.Kind
	(*schemas.SchemaMeta)(nil),              // 32: prophetstor.api.datahub.schemas.SchemaMeta
	(*WriteMetric)(nil),                     // 33: prophetstor.api.datahub.metrics.WriteMetric
	(*Metric)(nil),                          // 34: prophetstor.api.datahub.metrics.Metric
}
var file_prophetstor_api_datahub_metrics_services_proto_depIdxs = []int32{
	21, // 0: prophetstor.api.datahub.metrics.CreatePodMetricsRequest.pod_metrics:type_name -> prophetstor.api.datahub.metrics.PodMetric
	22, // 1: prophetstor.api.datahub.metrics.CreateControllerMetricsRequest.controller_metrics:type_name -> prophetstor.api.datahub.metrics.ControllerMetric
	23, // 2: prophetstor.api.datahub.metrics.CreateApplicationMetricsRequest.application_metrics:type_name -> prophetstor.api.datahub.metrics.ApplicationMetric
	24, // 3: prophetstor.api.datahub.metrics.CreateNamespaceMetricsRequest.namespace_metrics:type_name -> prophetstor.api.datahub.metrics.NamespaceMetric
	25, // 4: prophetstor.api.datahub.metrics.CreateNodeMetricsRequest.node_metrics:type_name -> prophetstor.api.datahub.metrics.NodeMetric
	26, // 5: prophetstor.api.datahub.metrics.CreateClusterMetricsRequest.cluster_metrics:type_name -> prophetstor.api.datahub.metrics.ClusterMetric
	27, // 6: prophetstor.api.datahub.metrics.ListPodMetricsRequest.query_condition:type_name -> prophetstor.api.datahub.common.QueryCondition
	28, // 7: prophetstor.api.datahub.metrics.ListPodMetricsRequest.object_meta:type_name -> prophetstor.api.datahub.resources.ObjectMeta
	29, // 8: prophetstor.api.datahub.metrics.ListPodMetricsRequest.metric_types:type_name -> prophetstor.api.datahub.common.MetricType
	30, // 9: prophetstor.api.datahub.metrics.ListPodMetricsResponse.status:type_name -> google.rpc.Status
	21, // 10: prophetstor.api.datahub.metrics.ListPodMetricsResponse.pod_metrics:type_name -> prophetstor.api.datahub.metrics.PodMetric
	27, // 11: prophetstor.api.datahub.metrics.ListControllerMetricsRequest.query_condition:type_name -> prophetstor.api.datahub.common.QueryCondition
	28, // 12: prophetstor.api.datahub.metrics.ListControllerMetricsRequest.object_meta:type_name -> prophetstor.api.datahub.resources.ObjectMeta
	29, // 13: prophetstor.api.datahub.metrics.ListControllerMetricsRequest.metric_types:type_name -> prophetstor.api.datahub.common.MetricType
	31, // 14: prophetstor.api.datahub.metrics.ListControllerMetricsRequest.kind:type_name -> prophetstor.api.datahub.resources.Kind
	30, // 15: prophetstor.api.datahub.metrics.ListControllerMetricsResponse.status:type_name -> google.rpc.Status
	22, // 16: prophetstor.api.datahub.metrics.ListControllerMetricsResponse.controller_metrics:type_name -> prophetstor.api.datahub.metrics.ControllerMetric
	27, // 17: prophetstor.api.datahub.metrics.ListApplicationMetricsRequest.query_condition:type_name -> prophetstor.api.datahub.common.QueryCondition
	28, // 18: prophetstor.api.datahub.metrics.ListApplicationMetricsRequest.object_meta:type_name -> prophetstor.api.datahub.resources.ObjectMeta
	29, // 19: prophetstor.api.datahub.metrics.ListApplicationMetricsRequest.metric_types:type_name -> prophetstor.api.datahub.common.MetricType
	30, // 20: prophetstor.api.datahub.metrics.ListApplicationMetricsResponse.status:type_name -> google.rpc.Status
	23, // 21: prophetstor.api.datahub.metrics.ListApplicationMetricsResponse.application_metrics:type_name -> prophetstor.api.datahub.metrics.ApplicationMetric
	27, // 22: prophetstor.api.datahub.metrics.ListNamespaceMetricsRequest.query_condition:type_name -> prophetstor.api.datahub.common.QueryCondition
	28, // 23: prophetstor.api.datahub.metrics.ListNamespaceMetricsRequest.object_meta:type_name -> prophetstor.api.datahub.resources.ObjectMeta
	29, // 24: prophetstor.api.datahub.metrics.ListNamespaceMetricsRequest.metric_types:type_name -> prophetstor.api.datahub.common.MetricType
	30, // 25: prophetstor.api.datahub.metrics.ListNamespaceMetricsResponse.status:type_name -> google.rpc.Status
	24, // 26: prophetstor.api.datahub.metrics.ListNamespaceMetricsResponse.namespace_metrics:type_name -> prophetstor.api.datahub.metrics.NamespaceMetric
	27, // 27: prophetstor.api.datahub.metrics.ListNodeMetricsRequest.query_condition:type_name -> prophetstor.api.datahub.common.QueryCondition
	28, // 28: prophetstor.api.datahub.metrics.ListNodeMetricsRequest.object_meta:type_name -> prophetstor.api.datahub.resources.ObjectMeta
	29, // 29: prophetstor.api.datahub.metrics.ListNodeMetricsRequest.metric_types:type_name -> prophetstor.api.datahub.common.MetricType
	30, // 30: prophetstor.api.datahub.metrics.ListNodeMetricsResponse.status:type_name -> google.rpc.Status
	25, // 31: prophetstor.api.datahub.metrics.ListNodeMetricsResponse.node_metrics:type_name -> prophetstor.api.datahub.metrics.NodeMetric
	27, // 32: prophetstor.api.datahub.metrics.ListClusterMetricsRequest.query_condition:type_name -> prophetstor.api.datahub.common.QueryCondition
	28, // 33: prophetstor.api.datahub.metrics.ListClusterMetricsRequest.object_meta:type_name -> prophetstor.api.datahub.resources.ObjectMeta
	29, // 34: prophetstor.api.datahub.metrics.ListClusterMetricsRequest.metric_types:type_name -> prophetstor.api.datahub.common.MetricType
	30, // 35: prophetstor.api.datahub.metrics.ListClusterMetricsResponse.status:type_name -> google.rpc.Status
	26, // 36: prophetstor.api.datahub.metrics.ListClusterMetricsResponse.cluster_metrics:type_name -> prophetstor.api.datahub.metrics.ClusterMetric
	32, // 37: prophetstor.api.datahub.metrics.CreateMetricsRequest.schema_meta:type_name -> prophetstor.api.datahub.schemas.SchemaMeta
	33, // 38: prophetstor.api.datahub.metrics.CreateMetricsRequest.metrics:type_name -> prophetstor.api.datahub.metrics.WriteMetric
	27, // 39: prophetstor.api.datahub.metrics.ListMetricsRequest.query_condition:type_name -> prophetstor.api.datahub.common.QueryCondition
	32, // 40: prophetstor.api.datahub.metrics.ListMetricsRequest.schema_meta:type_name -> prophetstor.api.datahub.schemas.SchemaMeta
	29, // 41: prophetstor.api.datahub.metrics.ListMetricsRequest.metric_types:type_name -> prophetstor.api.datahub.common.MetricType
	30, // 42: prophetstor.api.datahub.metrics.ListMetricsResponse.status:type_name -> google.rpc.Status
	34, // 43: prophetstor.api.datahub.metrics.ListMetricsResponse.metrics:type_name -> prophetstor.api.datahub.metrics.Metric
	44, // [44:44] is the sub-list for method output_type
	44, // [44:44] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_prophetstor_api_datahub_metrics_services_proto_init() }
func file_prophetstor_api_datahub_metrics_services_proto_init() {
	if File_prophetstor_api_datahub_metrics_services_proto != nil {
		return
	}
	file_prophetstor_api_datahub_metrics_metrics_proto_init()
	file_prophetstor_api_datahub_metrics_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePodMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateControllerMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApplicationMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNamespaceMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNodeMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClusterMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPodMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPodMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListControllerMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListControllerMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApplicationMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApplicationMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespaceMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespaceMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodeMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodeMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClusterMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClusterMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_metrics_services_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prophetstor_api_datahub_metrics_services_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_prophetstor_api_datahub_metrics_services_proto_goTypes,
		DependencyIndexes: file_prophetstor_api_datahub_metrics_services_proto_depIdxs,
		MessageInfos:      file_prophetstor_api_datahub_metrics_services_proto_msgTypes,
	}.Build()
	File_prophetstor_api_datahub_metrics_services_proto = out.File
	file_prophetstor_api_datahub_metrics_services_proto_rawDesc = nil
	file_prophetstor_api_datahub_metrics_services_proto_goTypes = nil
	file_prophetstor_api_datahub_metrics_services_proto_depIdxs = nil
}
