// This file has messages related general definitions

syntax = "proto3";

package prophetstor.api.datahub.common;

import "prophetstor/api/datahub/common/types.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "prophetstor.com/api/datahub/common";

/**
 * Represents a time range definition.
 */
message TimeRange {
    google.protobuf.Timestamp start_time = 1;
    google.protobuf.Timestamp end_time   = 2;
    google.protobuf.Timestamp timeout    = 3;
    google.protobuf.Duration  step       = 4;
    enum AggregateFunction {
        NONE = 0;
        MAX  = 1;
        AVG  = 2;
    }
    AggregateFunction         aggregateFunction = 5;
    google.protobuf.Timestamp apply_time        = 6;
}

/**
 * Represents a query condition.
 */
message Condition {
    repeated string          keys      = 1;
    repeated string          values    = 2;
    repeated string          operators = 3;
    repeated common.DataType types     = 4;
}

/**
 * Represents a datahub functional query, includes aggregation, selector and transformation.
 */
message Function {
    FunctionType    type               = 1;
    repeated string fields             = 2;
    repeated string tags               = 3;
    string          target             = 4;
    string          regular_expression = 5;
    string          unit               = 6;
    int64           number             = 7;
}

/**
 * Represents a query to a user-specified measurement.
 */
message Into {
    string database                    = 1;
    string retention_policy            = 2;
    string measurement                 = 3;
    bool   is_default_retention_policy = 4;
    bool   is_all_measurements         = 5;
}

/**
 * Represents a datahub query request.
 */
message QueryCondition {
    TimeRange time_range = 1;
    enum Order {
        NONE = 0;
        ASC  = 1;
        DESC = 2;
    }
    Order              order           = 2;
    Function           function        = 3;
    Into               into            = 4;
    string             where_clause    = 5;
    repeated Condition where_condition = 6;
    repeated string    selects         = 7;
    repeated string    groups          = 8;
    uint64             limit           = 9;
    QueryCondition     sub_query       = 10;
}
