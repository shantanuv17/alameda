// source: prophetstor/api/datahub/resources/status.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.prophetstor.api.datahub.resources.ContainerState', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.resources.ContainerStateRunning', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.resources.ContainerStateTerminated', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.resources.ContainerStateWaiting', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.resources.ContainerStatus', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.resources.PodPhase', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.resources.PodStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.resources.ContainerStateWaiting = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.resources.ContainerStateWaiting, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.resources.ContainerStateWaiting.displayName = 'proto.prophetstor.api.datahub.resources.ContainerStateWaiting';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.resources.ContainerStateRunning = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.resources.ContainerStateRunning, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.resources.ContainerStateRunning.displayName = 'proto.prophetstor.api.datahub.resources.ContainerStateRunning';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.resources.ContainerStateTerminated = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.resources.ContainerStateTerminated, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.resources.ContainerStateTerminated.displayName = 'proto.prophetstor.api.datahub.resources.ContainerStateTerminated';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.resources.ContainerState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.resources.ContainerState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.resources.ContainerState.displayName = 'proto.prophetstor.api.datahub.resources.ContainerState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.resources.ContainerStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.resources.ContainerStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.resources.ContainerStatus.displayName = 'proto.prophetstor.api.datahub.resources.ContainerStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.resources.PodStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.resources.PodStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.resources.PodStatus.displayName = 'proto.prophetstor.api.datahub.resources.PodStatus';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.resources.ContainerStateWaiting.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.resources.ContainerStateWaiting.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.resources.ContainerStateWaiting} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.ContainerStateWaiting.toObject = function(includeInstance, msg) {
  var f, obj = {
    reason: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStateWaiting}
 */
proto.prophetstor.api.datahub.resources.ContainerStateWaiting.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.resources.ContainerStateWaiting;
  return proto.prophetstor.api.datahub.resources.ContainerStateWaiting.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.resources.ContainerStateWaiting} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStateWaiting}
 */
proto.prophetstor.api.datahub.resources.ContainerStateWaiting.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.resources.ContainerStateWaiting.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.resources.ContainerStateWaiting.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.resources.ContainerStateWaiting} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.ContainerStateWaiting.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string reason = 1;
 * @return {string}
 */
proto.prophetstor.api.datahub.resources.ContainerStateWaiting.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStateWaiting} returns this
 */
proto.prophetstor.api.datahub.resources.ContainerStateWaiting.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.prophetstor.api.datahub.resources.ContainerStateWaiting.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStateWaiting} returns this
 */
proto.prophetstor.api.datahub.resources.ContainerStateWaiting.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.resources.ContainerStateRunning.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.resources.ContainerStateRunning.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.resources.ContainerStateRunning} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.ContainerStateRunning.toObject = function(includeInstance, msg) {
  var f, obj = {
    startedAt: (f = msg.getStartedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStateRunning}
 */
proto.prophetstor.api.datahub.resources.ContainerStateRunning.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.resources.ContainerStateRunning;
  return proto.prophetstor.api.datahub.resources.ContainerStateRunning.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.resources.ContainerStateRunning} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStateRunning}
 */
proto.prophetstor.api.datahub.resources.ContainerStateRunning.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.resources.ContainerStateRunning.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.resources.ContainerStateRunning.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.resources.ContainerStateRunning} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.ContainerStateRunning.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartedAt();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp started_at = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.prophetstor.api.datahub.resources.ContainerStateRunning.prototype.getStartedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStateRunning} returns this
*/
proto.prophetstor.api.datahub.resources.ContainerStateRunning.prototype.setStartedAt = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStateRunning} returns this
 */
proto.prophetstor.api.datahub.resources.ContainerStateRunning.prototype.clearStartedAt = function() {
  return this.setStartedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.resources.ContainerStateRunning.prototype.hasStartedAt = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.resources.ContainerStateTerminated.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.resources.ContainerStateTerminated.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.resources.ContainerStateTerminated} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.ContainerStateTerminated.toObject = function(includeInstance, msg) {
  var f, obj = {
    exitCode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    reason: jspb.Message.getFieldWithDefault(msg, 2, ""),
    message: jspb.Message.getFieldWithDefault(msg, 3, ""),
    startedAt: (f = msg.getStartedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    finishedAt: (f = msg.getFinishedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStateTerminated}
 */
proto.prophetstor.api.datahub.resources.ContainerStateTerminated.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.resources.ContainerStateTerminated;
  return proto.prophetstor.api.datahub.resources.ContainerStateTerminated.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.resources.ContainerStateTerminated} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStateTerminated}
 */
proto.prophetstor.api.datahub.resources.ContainerStateTerminated.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExitCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartedAt(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFinishedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.resources.ContainerStateTerminated.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.resources.ContainerStateTerminated.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.resources.ContainerStateTerminated} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.ContainerStateTerminated.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExitCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStartedAt();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFinishedAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 exit_code = 1;
 * @return {number}
 */
proto.prophetstor.api.datahub.resources.ContainerStateTerminated.prototype.getExitCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStateTerminated} returns this
 */
proto.prophetstor.api.datahub.resources.ContainerStateTerminated.prototype.setExitCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.prophetstor.api.datahub.resources.ContainerStateTerminated.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStateTerminated} returns this
 */
proto.prophetstor.api.datahub.resources.ContainerStateTerminated.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.prophetstor.api.datahub.resources.ContainerStateTerminated.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStateTerminated} returns this
 */
proto.prophetstor.api.datahub.resources.ContainerStateTerminated.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp started_at = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.prophetstor.api.datahub.resources.ContainerStateTerminated.prototype.getStartedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStateTerminated} returns this
*/
proto.prophetstor.api.datahub.resources.ContainerStateTerminated.prototype.setStartedAt = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStateTerminated} returns this
 */
proto.prophetstor.api.datahub.resources.ContainerStateTerminated.prototype.clearStartedAt = function() {
  return this.setStartedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.resources.ContainerStateTerminated.prototype.hasStartedAt = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp finished_at = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.prophetstor.api.datahub.resources.ContainerStateTerminated.prototype.getFinishedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStateTerminated} returns this
*/
proto.prophetstor.api.datahub.resources.ContainerStateTerminated.prototype.setFinishedAt = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStateTerminated} returns this
 */
proto.prophetstor.api.datahub.resources.ContainerStateTerminated.prototype.clearFinishedAt = function() {
  return this.setFinishedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.resources.ContainerStateTerminated.prototype.hasFinishedAt = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.resources.ContainerState.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.resources.ContainerState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.resources.ContainerState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.ContainerState.toObject = function(includeInstance, msg) {
  var f, obj = {
    waiting: (f = msg.getWaiting()) && proto.prophetstor.api.datahub.resources.ContainerStateWaiting.toObject(includeInstance, f),
    running: (f = msg.getRunning()) && proto.prophetstor.api.datahub.resources.ContainerStateRunning.toObject(includeInstance, f),
    terminated: (f = msg.getTerminated()) && proto.prophetstor.api.datahub.resources.ContainerStateTerminated.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.resources.ContainerState}
 */
proto.prophetstor.api.datahub.resources.ContainerState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.resources.ContainerState;
  return proto.prophetstor.api.datahub.resources.ContainerState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.resources.ContainerState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.resources.ContainerState}
 */
proto.prophetstor.api.datahub.resources.ContainerState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.prophetstor.api.datahub.resources.ContainerStateWaiting;
      reader.readMessage(value,proto.prophetstor.api.datahub.resources.ContainerStateWaiting.deserializeBinaryFromReader);
      msg.setWaiting(value);
      break;
    case 2:
      var value = new proto.prophetstor.api.datahub.resources.ContainerStateRunning;
      reader.readMessage(value,proto.prophetstor.api.datahub.resources.ContainerStateRunning.deserializeBinaryFromReader);
      msg.setRunning(value);
      break;
    case 3:
      var value = new proto.prophetstor.api.datahub.resources.ContainerStateTerminated;
      reader.readMessage(value,proto.prophetstor.api.datahub.resources.ContainerStateTerminated.deserializeBinaryFromReader);
      msg.setTerminated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.resources.ContainerState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.resources.ContainerState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.resources.ContainerState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.ContainerState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWaiting();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.prophetstor.api.datahub.resources.ContainerStateWaiting.serializeBinaryToWriter
    );
  }
  f = message.getRunning();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.prophetstor.api.datahub.resources.ContainerStateRunning.serializeBinaryToWriter
    );
  }
  f = message.getTerminated();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.prophetstor.api.datahub.resources.ContainerStateTerminated.serializeBinaryToWriter
    );
  }
};


/**
 * optional ContainerStateWaiting waiting = 1;
 * @return {?proto.prophetstor.api.datahub.resources.ContainerStateWaiting}
 */
proto.prophetstor.api.datahub.resources.ContainerState.prototype.getWaiting = function() {
  return /** @type{?proto.prophetstor.api.datahub.resources.ContainerStateWaiting} */ (
    jspb.Message.getWrapperField(this, proto.prophetstor.api.datahub.resources.ContainerStateWaiting, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.resources.ContainerStateWaiting|undefined} value
 * @return {!proto.prophetstor.api.datahub.resources.ContainerState} returns this
*/
proto.prophetstor.api.datahub.resources.ContainerState.prototype.setWaiting = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.resources.ContainerState} returns this
 */
proto.prophetstor.api.datahub.resources.ContainerState.prototype.clearWaiting = function() {
  return this.setWaiting(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.resources.ContainerState.prototype.hasWaiting = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ContainerStateRunning running = 2;
 * @return {?proto.prophetstor.api.datahub.resources.ContainerStateRunning}
 */
proto.prophetstor.api.datahub.resources.ContainerState.prototype.getRunning = function() {
  return /** @type{?proto.prophetstor.api.datahub.resources.ContainerStateRunning} */ (
    jspb.Message.getWrapperField(this, proto.prophetstor.api.datahub.resources.ContainerStateRunning, 2));
};


/**
 * @param {?proto.prophetstor.api.datahub.resources.ContainerStateRunning|undefined} value
 * @return {!proto.prophetstor.api.datahub.resources.ContainerState} returns this
*/
proto.prophetstor.api.datahub.resources.ContainerState.prototype.setRunning = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.resources.ContainerState} returns this
 */
proto.prophetstor.api.datahub.resources.ContainerState.prototype.clearRunning = function() {
  return this.setRunning(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.resources.ContainerState.prototype.hasRunning = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ContainerStateTerminated terminated = 3;
 * @return {?proto.prophetstor.api.datahub.resources.ContainerStateTerminated}
 */
proto.prophetstor.api.datahub.resources.ContainerState.prototype.getTerminated = function() {
  return /** @type{?proto.prophetstor.api.datahub.resources.ContainerStateTerminated} */ (
    jspb.Message.getWrapperField(this, proto.prophetstor.api.datahub.resources.ContainerStateTerminated, 3));
};


/**
 * @param {?proto.prophetstor.api.datahub.resources.ContainerStateTerminated|undefined} value
 * @return {!proto.prophetstor.api.datahub.resources.ContainerState} returns this
*/
proto.prophetstor.api.datahub.resources.ContainerState.prototype.setTerminated = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.resources.ContainerState} returns this
 */
proto.prophetstor.api.datahub.resources.ContainerState.prototype.clearTerminated = function() {
  return this.setTerminated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.resources.ContainerState.prototype.hasTerminated = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.resources.ContainerStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.resources.ContainerStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.resources.ContainerStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.ContainerStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: (f = msg.getState()) && proto.prophetstor.api.datahub.resources.ContainerState.toObject(includeInstance, f),
    lastTerminationState: (f = msg.getLastTerminationState()) && proto.prophetstor.api.datahub.resources.ContainerState.toObject(includeInstance, f),
    restartCount: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStatus}
 */
proto.prophetstor.api.datahub.resources.ContainerStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.resources.ContainerStatus;
  return proto.prophetstor.api.datahub.resources.ContainerStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.resources.ContainerStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStatus}
 */
proto.prophetstor.api.datahub.resources.ContainerStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.prophetstor.api.datahub.resources.ContainerState;
      reader.readMessage(value,proto.prophetstor.api.datahub.resources.ContainerState.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    case 2:
      var value = new proto.prophetstor.api.datahub.resources.ContainerState;
      reader.readMessage(value,proto.prophetstor.api.datahub.resources.ContainerState.deserializeBinaryFromReader);
      msg.setLastTerminationState(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRestartCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.resources.ContainerStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.resources.ContainerStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.resources.ContainerStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.ContainerStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.prophetstor.api.datahub.resources.ContainerState.serializeBinaryToWriter
    );
  }
  f = message.getLastTerminationState();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.prophetstor.api.datahub.resources.ContainerState.serializeBinaryToWriter
    );
  }
  f = message.getRestartCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional ContainerState state = 1;
 * @return {?proto.prophetstor.api.datahub.resources.ContainerState}
 */
proto.prophetstor.api.datahub.resources.ContainerStatus.prototype.getState = function() {
  return /** @type{?proto.prophetstor.api.datahub.resources.ContainerState} */ (
    jspb.Message.getWrapperField(this, proto.prophetstor.api.datahub.resources.ContainerState, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.resources.ContainerState|undefined} value
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStatus} returns this
*/
proto.prophetstor.api.datahub.resources.ContainerStatus.prototype.setState = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStatus} returns this
 */
proto.prophetstor.api.datahub.resources.ContainerStatus.prototype.clearState = function() {
  return this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.resources.ContainerStatus.prototype.hasState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ContainerState last_termination_state = 2;
 * @return {?proto.prophetstor.api.datahub.resources.ContainerState}
 */
proto.prophetstor.api.datahub.resources.ContainerStatus.prototype.getLastTerminationState = function() {
  return /** @type{?proto.prophetstor.api.datahub.resources.ContainerState} */ (
    jspb.Message.getWrapperField(this, proto.prophetstor.api.datahub.resources.ContainerState, 2));
};


/**
 * @param {?proto.prophetstor.api.datahub.resources.ContainerState|undefined} value
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStatus} returns this
*/
proto.prophetstor.api.datahub.resources.ContainerStatus.prototype.setLastTerminationState = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStatus} returns this
 */
proto.prophetstor.api.datahub.resources.ContainerStatus.prototype.clearLastTerminationState = function() {
  return this.setLastTerminationState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.resources.ContainerStatus.prototype.hasLastTerminationState = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 restart_count = 3;
 * @return {number}
 */
proto.prophetstor.api.datahub.resources.ContainerStatus.prototype.getRestartCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.api.datahub.resources.ContainerStatus} returns this
 */
proto.prophetstor.api.datahub.resources.ContainerStatus.prototype.setRestartCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.resources.PodStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.resources.PodStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.resources.PodStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.PodStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    phase: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    reason: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.resources.PodStatus}
 */
proto.prophetstor.api.datahub.resources.PodStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.resources.PodStatus;
  return proto.prophetstor.api.datahub.resources.PodStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.resources.PodStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.resources.PodStatus}
 */
proto.prophetstor.api.datahub.resources.PodStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.prophetstor.api.datahub.resources.PodPhase} */ (reader.readEnum());
      msg.setPhase(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.resources.PodStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.resources.PodStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.resources.PodStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.PodStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhase();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional PodPhase phase = 1;
 * @return {!proto.prophetstor.api.datahub.resources.PodPhase}
 */
proto.prophetstor.api.datahub.resources.PodStatus.prototype.getPhase = function() {
  return /** @type {!proto.prophetstor.api.datahub.resources.PodPhase} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.resources.PodPhase} value
 * @return {!proto.prophetstor.api.datahub.resources.PodStatus} returns this
 */
proto.prophetstor.api.datahub.resources.PodStatus.prototype.setPhase = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.prophetstor.api.datahub.resources.PodStatus.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.resources.PodStatus} returns this
 */
proto.prophetstor.api.datahub.resources.PodStatus.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string reason = 3;
 * @return {string}
 */
proto.prophetstor.api.datahub.resources.PodStatus.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.resources.PodStatus} returns this
 */
proto.prophetstor.api.datahub.resources.PodStatus.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.prophetstor.api.datahub.resources.PodPhase = {
  POD_PHASE_UNDEFINED: 0,
  PENDING: 1,
  RUNNING: 2,
  SUCCEEDED: 3,
  FAILED: 4,
  UNKNOWN: 5,
  COMPLETED: 6,
  CRASHLOOPBACKOFF: 7
};

goog.object.extend(exports, proto.prophetstor.api.datahub.resources);
