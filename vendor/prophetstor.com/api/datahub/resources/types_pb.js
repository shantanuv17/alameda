// source: prophetstor/api/datahub/resources/types.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var prophetstor_api_datahub_resources_metadata_pb = require('../../../../prophetstor/api/datahub/resources/metadata_pb.js');
goog.object.extend(proto, prophetstor_api_datahub_resources_metadata_pb);
var prophetstor_api_datahub_resources_policies_pb = require('../../../../prophetstor/api/datahub/resources/policies_pb.js');
goog.object.extend(proto, prophetstor_api_datahub_resources_policies_pb);
goog.exportSymbol('proto.prophetstor.api.datahub.resources.AlamedaApplicationSpec', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.resources.AlamedaControllerSpec', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.resources.AlamedaNodeSpec', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.resources.AlamedaPodSpec', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.resources.Capacity', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.resources.Provider', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.resources.ResourceRequirements', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.resources.AlamedaPodSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.resources.AlamedaPodSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.resources.AlamedaPodSpec.displayName = 'proto.prophetstor.api.datahub.resources.AlamedaPodSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.resources.AlamedaControllerSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.displayName = 'proto.prophetstor.api.datahub.resources.AlamedaControllerSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.resources.AlamedaApplicationSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.resources.AlamedaApplicationSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.resources.AlamedaApplicationSpec.displayName = 'proto.prophetstor.api.datahub.resources.AlamedaApplicationSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.resources.AlamedaNodeSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.resources.AlamedaNodeSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.resources.AlamedaNodeSpec.displayName = 'proto.prophetstor.api.datahub.resources.AlamedaNodeSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.resources.Capacity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.resources.Capacity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.resources.Capacity.displayName = 'proto.prophetstor.api.datahub.resources.Capacity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.resources.Provider = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.resources.Provider, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.resources.Provider.displayName = 'proto.prophetstor.api.datahub.resources.Provider';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.resources.ResourceRequirements = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.resources.ResourceRequirements, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.resources.ResourceRequirements.displayName = 'proto.prophetstor.api.datahub.resources.ResourceRequirements';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.resources.AlamedaPodSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.resources.AlamedaPodSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.resources.AlamedaPodSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.AlamedaPodSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    alamedaScaler: (f = msg.getAlamedaScaler()) && prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.toObject(includeInstance, f),
    scalingTool: jspb.Message.getFieldWithDefault(msg, 2, 0),
    usedRecommendationId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    policy: jspb.Message.getFieldWithDefault(msg, 4, 0),
    alamedaScalerResources: (f = msg.getAlamedaScalerResources()) && proto.prophetstor.api.datahub.resources.ResourceRequirements.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaPodSpec}
 */
proto.prophetstor.api.datahub.resources.AlamedaPodSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.resources.AlamedaPodSpec;
  return proto.prophetstor.api.datahub.resources.AlamedaPodSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.resources.AlamedaPodSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaPodSpec}
 */
proto.prophetstor.api.datahub.resources.AlamedaPodSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new prophetstor_api_datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setAlamedaScaler(value);
      break;
    case 2:
      var value = /** @type {!proto.prophetstor.api.datahub.resources.ScalingTool} */ (reader.readEnum());
      msg.setScalingTool(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsedRecommendationId(value);
      break;
    case 4:
      var value = /** @type {!proto.prophetstor.api.datahub.resources.RecommendationPolicy} */ (reader.readEnum());
      msg.setPolicy(value);
      break;
    case 5:
      var value = new proto.prophetstor.api.datahub.resources.ResourceRequirements;
      reader.readMessage(value,proto.prophetstor.api.datahub.resources.ResourceRequirements.deserializeBinaryFromReader);
      msg.setAlamedaScalerResources(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.resources.AlamedaPodSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.resources.AlamedaPodSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.resources.AlamedaPodSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.AlamedaPodSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAlamedaScaler();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getScalingTool();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getUsedRecommendationId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPolicy();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAlamedaScalerResources();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.prophetstor.api.datahub.resources.ResourceRequirements.serializeBinaryToWriter
    );
  }
};


/**
 * optional ObjectMeta alameda_scaler = 1;
 * @return {?proto.prophetstor.api.datahub.resources.ObjectMeta}
 */
proto.prophetstor.api.datahub.resources.AlamedaPodSpec.prototype.getAlamedaScaler = function() {
  return /** @type{?proto.prophetstor.api.datahub.resources.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_resources_metadata_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.resources.ObjectMeta|undefined} value
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaPodSpec} returns this
*/
proto.prophetstor.api.datahub.resources.AlamedaPodSpec.prototype.setAlamedaScaler = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaPodSpec} returns this
 */
proto.prophetstor.api.datahub.resources.AlamedaPodSpec.prototype.clearAlamedaScaler = function() {
  return this.setAlamedaScaler(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.resources.AlamedaPodSpec.prototype.hasAlamedaScaler = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ScalingTool scaling_tool = 2;
 * @return {!proto.prophetstor.api.datahub.resources.ScalingTool}
 */
proto.prophetstor.api.datahub.resources.AlamedaPodSpec.prototype.getScalingTool = function() {
  return /** @type {!proto.prophetstor.api.datahub.resources.ScalingTool} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.resources.ScalingTool} value
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaPodSpec} returns this
 */
proto.prophetstor.api.datahub.resources.AlamedaPodSpec.prototype.setScalingTool = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string used_recommendation_id = 3;
 * @return {string}
 */
proto.prophetstor.api.datahub.resources.AlamedaPodSpec.prototype.getUsedRecommendationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaPodSpec} returns this
 */
proto.prophetstor.api.datahub.resources.AlamedaPodSpec.prototype.setUsedRecommendationId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional RecommendationPolicy policy = 4;
 * @return {!proto.prophetstor.api.datahub.resources.RecommendationPolicy}
 */
proto.prophetstor.api.datahub.resources.AlamedaPodSpec.prototype.getPolicy = function() {
  return /** @type {!proto.prophetstor.api.datahub.resources.RecommendationPolicy} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.resources.RecommendationPolicy} value
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaPodSpec} returns this
 */
proto.prophetstor.api.datahub.resources.AlamedaPodSpec.prototype.setPolicy = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional ResourceRequirements alameda_scaler_resources = 5;
 * @return {?proto.prophetstor.api.datahub.resources.ResourceRequirements}
 */
proto.prophetstor.api.datahub.resources.AlamedaPodSpec.prototype.getAlamedaScalerResources = function() {
  return /** @type{?proto.prophetstor.api.datahub.resources.ResourceRequirements} */ (
    jspb.Message.getWrapperField(this, proto.prophetstor.api.datahub.resources.ResourceRequirements, 5));
};


/**
 * @param {?proto.prophetstor.api.datahub.resources.ResourceRequirements|undefined} value
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaPodSpec} returns this
*/
proto.prophetstor.api.datahub.resources.AlamedaPodSpec.prototype.setAlamedaScalerResources = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaPodSpec} returns this
 */
proto.prophetstor.api.datahub.resources.AlamedaPodSpec.prototype.clearAlamedaScalerResources = function() {
  return this.setAlamedaScalerResources(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.resources.AlamedaPodSpec.prototype.hasAlamedaScalerResources = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.resources.AlamedaControllerSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    alamedaScaler: (f = msg.getAlamedaScaler()) && prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.toObject(includeInstance, f),
    scalingTool: jspb.Message.getFieldWithDefault(msg, 2, 0),
    policy: jspb.Message.getFieldWithDefault(msg, 3, 0),
    minReplicas: jspb.Message.getFieldWithDefault(msg, 4, 0),
    maxReplicas: jspb.Message.getFieldWithDefault(msg, 5, 0),
    enableRecommendationExecution: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaControllerSpec}
 */
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.resources.AlamedaControllerSpec;
  return proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.resources.AlamedaControllerSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaControllerSpec}
 */
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new prophetstor_api_datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setAlamedaScaler(value);
      break;
    case 2:
      var value = /** @type {!proto.prophetstor.api.datahub.resources.ScalingTool} */ (reader.readEnum());
      msg.setScalingTool(value);
      break;
    case 3:
      var value = /** @type {!proto.prophetstor.api.datahub.resources.RecommendationPolicy} */ (reader.readEnum());
      msg.setPolicy(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinReplicas(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxReplicas(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableRecommendationExecution(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.resources.AlamedaControllerSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAlamedaScaler();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      prophetstor_api_datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getScalingTool();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPolicy();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getMinReplicas();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getMaxReplicas();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getEnableRecommendationExecution();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional ObjectMeta alameda_scaler = 1;
 * @return {?proto.prophetstor.api.datahub.resources.ObjectMeta}
 */
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.prototype.getAlamedaScaler = function() {
  return /** @type{?proto.prophetstor.api.datahub.resources.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_resources_metadata_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.resources.ObjectMeta|undefined} value
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaControllerSpec} returns this
*/
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.prototype.setAlamedaScaler = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaControllerSpec} returns this
 */
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.prototype.clearAlamedaScaler = function() {
  return this.setAlamedaScaler(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.prototype.hasAlamedaScaler = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ScalingTool scaling_tool = 2;
 * @return {!proto.prophetstor.api.datahub.resources.ScalingTool}
 */
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.prototype.getScalingTool = function() {
  return /** @type {!proto.prophetstor.api.datahub.resources.ScalingTool} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.resources.ScalingTool} value
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaControllerSpec} returns this
 */
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.prototype.setScalingTool = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional RecommendationPolicy policy = 3;
 * @return {!proto.prophetstor.api.datahub.resources.RecommendationPolicy}
 */
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.prototype.getPolicy = function() {
  return /** @type {!proto.prophetstor.api.datahub.resources.RecommendationPolicy} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.prophetstor.api.datahub.resources.RecommendationPolicy} value
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaControllerSpec} returns this
 */
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.prototype.setPolicy = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int32 min_replicas = 4;
 * @return {number}
 */
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.prototype.getMinReplicas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaControllerSpec} returns this
 */
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.prototype.setMinReplicas = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 max_replicas = 5;
 * @return {number}
 */
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.prototype.getMaxReplicas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaControllerSpec} returns this
 */
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.prototype.setMaxReplicas = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool enable_recommendation_execution = 6;
 * @return {boolean}
 */
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.prototype.getEnableRecommendationExecution = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaControllerSpec} returns this
 */
proto.prophetstor.api.datahub.resources.AlamedaControllerSpec.prototype.setEnableRecommendationExecution = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.resources.AlamedaApplicationSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.resources.AlamedaApplicationSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.resources.AlamedaApplicationSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.AlamedaApplicationSpec.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaApplicationSpec}
 */
proto.prophetstor.api.datahub.resources.AlamedaApplicationSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.resources.AlamedaApplicationSpec;
  return proto.prophetstor.api.datahub.resources.AlamedaApplicationSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.resources.AlamedaApplicationSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaApplicationSpec}
 */
proto.prophetstor.api.datahub.resources.AlamedaApplicationSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.resources.AlamedaApplicationSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.resources.AlamedaApplicationSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.resources.AlamedaApplicationSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.AlamedaApplicationSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.resources.AlamedaNodeSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.resources.AlamedaNodeSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.resources.AlamedaNodeSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.AlamedaNodeSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: (f = msg.getProvider()) && proto.prophetstor.api.datahub.resources.Provider.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaNodeSpec}
 */
proto.prophetstor.api.datahub.resources.AlamedaNodeSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.resources.AlamedaNodeSpec;
  return proto.prophetstor.api.datahub.resources.AlamedaNodeSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.resources.AlamedaNodeSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaNodeSpec}
 */
proto.prophetstor.api.datahub.resources.AlamedaNodeSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.prophetstor.api.datahub.resources.Provider;
      reader.readMessage(value,proto.prophetstor.api.datahub.resources.Provider.deserializeBinaryFromReader);
      msg.setProvider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.resources.AlamedaNodeSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.resources.AlamedaNodeSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.resources.AlamedaNodeSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.AlamedaNodeSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.prophetstor.api.datahub.resources.Provider.serializeBinaryToWriter
    );
  }
};


/**
 * optional Provider provider = 1;
 * @return {?proto.prophetstor.api.datahub.resources.Provider}
 */
proto.prophetstor.api.datahub.resources.AlamedaNodeSpec.prototype.getProvider = function() {
  return /** @type{?proto.prophetstor.api.datahub.resources.Provider} */ (
    jspb.Message.getWrapperField(this, proto.prophetstor.api.datahub.resources.Provider, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.resources.Provider|undefined} value
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaNodeSpec} returns this
*/
proto.prophetstor.api.datahub.resources.AlamedaNodeSpec.prototype.setProvider = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.resources.AlamedaNodeSpec} returns this
 */
proto.prophetstor.api.datahub.resources.AlamedaNodeSpec.prototype.clearProvider = function() {
  return this.setProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.resources.AlamedaNodeSpec.prototype.hasProvider = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.resources.Capacity.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.resources.Capacity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.resources.Capacity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.Capacity.toObject = function(includeInstance, msg) {
  var f, obj = {
    cpuCores: jspb.Message.getFieldWithDefault(msg, 1, 0),
    memoryBytes: jspb.Message.getFieldWithDefault(msg, 2, 0),
    networkMegabitsPerSecond: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.resources.Capacity}
 */
proto.prophetstor.api.datahub.resources.Capacity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.resources.Capacity;
  return proto.prophetstor.api.datahub.resources.Capacity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.resources.Capacity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.resources.Capacity}
 */
proto.prophetstor.api.datahub.resources.Capacity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCpuCores(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMemoryBytes(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNetworkMegabitsPerSecond(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.resources.Capacity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.resources.Capacity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.resources.Capacity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.Capacity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCpuCores();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMemoryBytes();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getNetworkMegabitsPerSecond();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 cpu_cores = 1;
 * @return {number}
 */
proto.prophetstor.api.datahub.resources.Capacity.prototype.getCpuCores = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.api.datahub.resources.Capacity} returns this
 */
proto.prophetstor.api.datahub.resources.Capacity.prototype.setCpuCores = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 memory_bytes = 2;
 * @return {number}
 */
proto.prophetstor.api.datahub.resources.Capacity.prototype.getMemoryBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.api.datahub.resources.Capacity} returns this
 */
proto.prophetstor.api.datahub.resources.Capacity.prototype.setMemoryBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 network_megabits_per_second = 3;
 * @return {number}
 */
proto.prophetstor.api.datahub.resources.Capacity.prototype.getNetworkMegabitsPerSecond = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.api.datahub.resources.Capacity} returns this
 */
proto.prophetstor.api.datahub.resources.Capacity.prototype.setNetworkMegabitsPerSecond = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.resources.Provider.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.resources.Provider.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.resources.Provider} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.Provider.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: jspb.Message.getFieldWithDefault(msg, 1, ""),
    instanceType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    region: jspb.Message.getFieldWithDefault(msg, 3, ""),
    zone: jspb.Message.getFieldWithDefault(msg, 4, ""),
    os: jspb.Message.getFieldWithDefault(msg, 5, ""),
    role: jspb.Message.getFieldWithDefault(msg, 6, ""),
    instanceId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    storageSize: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.resources.Provider}
 */
proto.prophetstor.api.datahub.resources.Provider.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.resources.Provider;
  return proto.prophetstor.api.datahub.resources.Provider.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.resources.Provider} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.resources.Provider}
 */
proto.prophetstor.api.datahub.resources.Provider.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstanceType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setZone(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOs(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstanceId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStorageSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.resources.Provider.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.resources.Provider.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.resources.Provider} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.Provider.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInstanceType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getZone();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOs();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getInstanceId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getStorageSize();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
};


/**
 * optional string provider = 1;
 * @return {string}
 */
proto.prophetstor.api.datahub.resources.Provider.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.resources.Provider} returns this
 */
proto.prophetstor.api.datahub.resources.Provider.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string instance_type = 2;
 * @return {string}
 */
proto.prophetstor.api.datahub.resources.Provider.prototype.getInstanceType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.resources.Provider} returns this
 */
proto.prophetstor.api.datahub.resources.Provider.prototype.setInstanceType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string region = 3;
 * @return {string}
 */
proto.prophetstor.api.datahub.resources.Provider.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.resources.Provider} returns this
 */
proto.prophetstor.api.datahub.resources.Provider.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string zone = 4;
 * @return {string}
 */
proto.prophetstor.api.datahub.resources.Provider.prototype.getZone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.resources.Provider} returns this
 */
proto.prophetstor.api.datahub.resources.Provider.prototype.setZone = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string os = 5;
 * @return {string}
 */
proto.prophetstor.api.datahub.resources.Provider.prototype.getOs = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.resources.Provider} returns this
 */
proto.prophetstor.api.datahub.resources.Provider.prototype.setOs = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string role = 6;
 * @return {string}
 */
proto.prophetstor.api.datahub.resources.Provider.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.resources.Provider} returns this
 */
proto.prophetstor.api.datahub.resources.Provider.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string instance_id = 7;
 * @return {string}
 */
proto.prophetstor.api.datahub.resources.Provider.prototype.getInstanceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.api.datahub.resources.Provider} returns this
 */
proto.prophetstor.api.datahub.resources.Provider.prototype.setInstanceId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int64 storage_size = 8;
 * @return {number}
 */
proto.prophetstor.api.datahub.resources.Provider.prototype.getStorageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.api.datahub.resources.Provider} returns this
 */
proto.prophetstor.api.datahub.resources.Provider.prototype.setStorageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.resources.ResourceRequirements.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.resources.ResourceRequirements.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.resources.ResourceRequirements} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.ResourceRequirements.toObject = function(includeInstance, msg) {
  var f, obj = {
    limitsMap: (f = msg.getLimitsMap()) ? f.toObject(includeInstance, undefined) : [],
    requestsMap: (f = msg.getRequestsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.resources.ResourceRequirements}
 */
proto.prophetstor.api.datahub.resources.ResourceRequirements.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.resources.ResourceRequirements;
  return proto.prophetstor.api.datahub.resources.ResourceRequirements.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.resources.ResourceRequirements} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.resources.ResourceRequirements}
 */
proto.prophetstor.api.datahub.resources.ResourceRequirements.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getLimitsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readString, null, 0, "");
         });
      break;
    case 2:
      var value = msg.getRequestsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readString, null, 0, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.resources.ResourceRequirements.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.resources.ResourceRequirements.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.resources.ResourceRequirements} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.resources.ResourceRequirements.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimitsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getRequestsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<int32, string> limits = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,string>}
 */
proto.prophetstor.api.datahub.resources.ResourceRequirements.prototype.getLimitsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.prophetstor.api.datahub.resources.ResourceRequirements} returns this
 */
proto.prophetstor.api.datahub.resources.ResourceRequirements.prototype.clearLimitsMap = function() {
  this.getLimitsMap().clear();
  return this;};


/**
 * map<int32, string> requests = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,string>}
 */
proto.prophetstor.api.datahub.resources.ResourceRequirements.prototype.getRequestsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.prophetstor.api.datahub.resources.ResourceRequirements} returns this
 */
proto.prophetstor.api.datahub.resources.ResourceRequirements.prototype.clearRequestsMap = function() {
  this.getRequestsMap().clear();
  return this;};


goog.object.extend(exports, proto.prophetstor.api.datahub.resources);
