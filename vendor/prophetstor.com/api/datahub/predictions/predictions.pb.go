// This file has messages related to predictions of containers, pods, and nodes

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: prophetstor/api/datahub/predictions/predictions.proto

package predictions

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "prophetstor.com/api/datahub/common"
	resources "prophetstor.com/api/datahub/resources"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//*
// Represents a list of predicted metric data of a container.
type ContainerPrediction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                    string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PredictedRawData        []*MetricData `protobuf:"bytes,2,rep,name=predicted_raw_data,json=predictedRawData,proto3" json:"predicted_raw_data,omitempty"`
	PredictedUpperboundData []*MetricData `protobuf:"bytes,3,rep,name=predicted_upperbound_data,json=predictedUpperboundData,proto3" json:"predicted_upperbound_data,omitempty"`
	PredictedLowerboundData []*MetricData `protobuf:"bytes,4,rep,name=predicted_lowerbound_data,json=predictedLowerboundData,proto3" json:"predicted_lowerbound_data,omitempty"`
}

func (x *ContainerPrediction) Reset() {
	*x = ContainerPrediction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerPrediction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerPrediction) ProtoMessage() {}

func (x *ContainerPrediction) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerPrediction.ProtoReflect.Descriptor instead.
func (*ContainerPrediction) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_predictions_predictions_proto_rawDescGZIP(), []int{0}
}

func (x *ContainerPrediction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerPrediction) GetPredictedRawData() []*MetricData {
	if x != nil {
		return x.PredictedRawData
	}
	return nil
}

func (x *ContainerPrediction) GetPredictedUpperboundData() []*MetricData {
	if x != nil {
		return x.PredictedUpperboundData
	}
	return nil
}

func (x *ContainerPrediction) GetPredictedLowerboundData() []*MetricData {
	if x != nil {
		return x.PredictedLowerboundData
	}
	return nil
}

//*
// Represents a list of predicted metrics data of a pod.
type PodPrediction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectMeta           *resources.ObjectMeta  `protobuf:"bytes,1,opt,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	ContainerPredictions []*ContainerPrediction `protobuf:"bytes,2,rep,name=container_predictions,json=containerPredictions,proto3" json:"container_predictions,omitempty"`
}

func (x *PodPrediction) Reset() {
	*x = PodPrediction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodPrediction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodPrediction) ProtoMessage() {}

func (x *PodPrediction) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodPrediction.ProtoReflect.Descriptor instead.
func (*PodPrediction) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_predictions_predictions_proto_rawDescGZIP(), []int{1}
}

func (x *PodPrediction) GetObjectMeta() *resources.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *PodPrediction) GetContainerPredictions() []*ContainerPrediction {
	if x != nil {
		return x.ContainerPredictions
	}
	return nil
}

//*
// Represents a list of predicted metrics data of a controller.
type ControllerPrediction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectMeta              *resources.ObjectMeta `protobuf:"bytes,1,opt,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	Kind                    resources.Kind        `protobuf:"varint,2,opt,name=kind,proto3,enum=prophetstor.api.datahub.resources.Kind" json:"kind,omitempty"`
	PredictedRawData        []*MetricData         `protobuf:"bytes,3,rep,name=predicted_raw_data,json=predictedRawData,proto3" json:"predicted_raw_data,omitempty"`
	PredictedUpperboundData []*MetricData         `protobuf:"bytes,4,rep,name=predicted_upperbound_data,json=predictedUpperboundData,proto3" json:"predicted_upperbound_data,omitempty"`
	PredictedLowerboundData []*MetricData         `protobuf:"bytes,5,rep,name=predicted_lowerbound_data,json=predictedLowerboundData,proto3" json:"predicted_lowerbound_data,omitempty"`
}

func (x *ControllerPrediction) Reset() {
	*x = ControllerPrediction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControllerPrediction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControllerPrediction) ProtoMessage() {}

func (x *ControllerPrediction) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControllerPrediction.ProtoReflect.Descriptor instead.
func (*ControllerPrediction) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_predictions_predictions_proto_rawDescGZIP(), []int{2}
}

func (x *ControllerPrediction) GetObjectMeta() *resources.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *ControllerPrediction) GetKind() resources.Kind {
	if x != nil {
		return x.Kind
	}
	return resources.Kind_KIND_UNDEFINED
}

func (x *ControllerPrediction) GetPredictedRawData() []*MetricData {
	if x != nil {
		return x.PredictedRawData
	}
	return nil
}

func (x *ControllerPrediction) GetPredictedUpperboundData() []*MetricData {
	if x != nil {
		return x.PredictedUpperboundData
	}
	return nil
}

func (x *ControllerPrediction) GetPredictedLowerboundData() []*MetricData {
	if x != nil {
		return x.PredictedLowerboundData
	}
	return nil
}

//*
// Represents a list of predicted metrics data of a alameda scaler.
type ApplicationPrediction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectMeta              *resources.ObjectMeta `protobuf:"bytes,1,opt,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	PredictedRawData        []*MetricData         `protobuf:"bytes,2,rep,name=predicted_raw_data,json=predictedRawData,proto3" json:"predicted_raw_data,omitempty"`
	PredictedUpperboundData []*MetricData         `protobuf:"bytes,3,rep,name=predicted_upperbound_data,json=predictedUpperboundData,proto3" json:"predicted_upperbound_data,omitempty"`
	PredictedLowerboundData []*MetricData         `protobuf:"bytes,4,rep,name=predicted_lowerbound_data,json=predictedLowerboundData,proto3" json:"predicted_lowerbound_data,omitempty"`
}

func (x *ApplicationPrediction) Reset() {
	*x = ApplicationPrediction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationPrediction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationPrediction) ProtoMessage() {}

func (x *ApplicationPrediction) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationPrediction.ProtoReflect.Descriptor instead.
func (*ApplicationPrediction) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_predictions_predictions_proto_rawDescGZIP(), []int{3}
}

func (x *ApplicationPrediction) GetObjectMeta() *resources.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *ApplicationPrediction) GetPredictedRawData() []*MetricData {
	if x != nil {
		return x.PredictedRawData
	}
	return nil
}

func (x *ApplicationPrediction) GetPredictedUpperboundData() []*MetricData {
	if x != nil {
		return x.PredictedUpperboundData
	}
	return nil
}

func (x *ApplicationPrediction) GetPredictedLowerboundData() []*MetricData {
	if x != nil {
		return x.PredictedLowerboundData
	}
	return nil
}

//*
// Represents a list of predicted metrics data of a namespace.
type NamespacePrediction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectMeta              *resources.ObjectMeta `protobuf:"bytes,1,opt,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	PredictedRawData        []*MetricData         `protobuf:"bytes,2,rep,name=predicted_raw_data,json=predictedRawData,proto3" json:"predicted_raw_data,omitempty"`
	PredictedUpperboundData []*MetricData         `protobuf:"bytes,3,rep,name=predicted_upperbound_data,json=predictedUpperboundData,proto3" json:"predicted_upperbound_data,omitempty"`
	PredictedLowerboundData []*MetricData         `protobuf:"bytes,4,rep,name=predicted_lowerbound_data,json=predictedLowerboundData,proto3" json:"predicted_lowerbound_data,omitempty"`
}

func (x *NamespacePrediction) Reset() {
	*x = NamespacePrediction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespacePrediction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespacePrediction) ProtoMessage() {}

func (x *NamespacePrediction) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespacePrediction.ProtoReflect.Descriptor instead.
func (*NamespacePrediction) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_predictions_predictions_proto_rawDescGZIP(), []int{4}
}

func (x *NamespacePrediction) GetObjectMeta() *resources.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *NamespacePrediction) GetPredictedRawData() []*MetricData {
	if x != nil {
		return x.PredictedRawData
	}
	return nil
}

func (x *NamespacePrediction) GetPredictedUpperboundData() []*MetricData {
	if x != nil {
		return x.PredictedUpperboundData
	}
	return nil
}

func (x *NamespacePrediction) GetPredictedLowerboundData() []*MetricData {
	if x != nil {
		return x.PredictedLowerboundData
	}
	return nil
}

//*
// Represents a list of predicted metric data of a node.
type NodePrediction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectMeta              *resources.ObjectMeta `protobuf:"bytes,1,opt,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	IsScheduled             bool                  `protobuf:"varint,2,opt,name=is_scheduled,json=isScheduled,proto3" json:"is_scheduled,omitempty"`
	PredictedRawData        []*MetricData         `protobuf:"bytes,3,rep,name=predicted_raw_data,json=predictedRawData,proto3" json:"predicted_raw_data,omitempty"`
	PredictedUpperboundData []*MetricData         `protobuf:"bytes,4,rep,name=predicted_upperbound_data,json=predictedUpperboundData,proto3" json:"predicted_upperbound_data,omitempty"`
	PredictedLowerboundData []*MetricData         `protobuf:"bytes,5,rep,name=predicted_lowerbound_data,json=predictedLowerboundData,proto3" json:"predicted_lowerbound_data,omitempty"`
}

func (x *NodePrediction) Reset() {
	*x = NodePrediction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodePrediction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodePrediction) ProtoMessage() {}

func (x *NodePrediction) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodePrediction.ProtoReflect.Descriptor instead.
func (*NodePrediction) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_predictions_predictions_proto_rawDescGZIP(), []int{5}
}

func (x *NodePrediction) GetObjectMeta() *resources.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *NodePrediction) GetIsScheduled() bool {
	if x != nil {
		return x.IsScheduled
	}
	return false
}

func (x *NodePrediction) GetPredictedRawData() []*MetricData {
	if x != nil {
		return x.PredictedRawData
	}
	return nil
}

func (x *NodePrediction) GetPredictedUpperboundData() []*MetricData {
	if x != nil {
		return x.PredictedUpperboundData
	}
	return nil
}

func (x *NodePrediction) GetPredictedLowerboundData() []*MetricData {
	if x != nil {
		return x.PredictedLowerboundData
	}
	return nil
}

//*
// Represents a list of predicted metric data of a cluster.
type ClusterPrediction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectMeta              *resources.ObjectMeta `protobuf:"bytes,1,opt,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	PredictedRawData        []*MetricData         `protobuf:"bytes,2,rep,name=predicted_raw_data,json=predictedRawData,proto3" json:"predicted_raw_data,omitempty"`
	PredictedUpperboundData []*MetricData         `protobuf:"bytes,3,rep,name=predicted_upperbound_data,json=predictedUpperboundData,proto3" json:"predicted_upperbound_data,omitempty"`
	PredictedLowerboundData []*MetricData         `protobuf:"bytes,4,rep,name=predicted_lowerbound_data,json=predictedLowerboundData,proto3" json:"predicted_lowerbound_data,omitempty"`
}

func (x *ClusterPrediction) Reset() {
	*x = ClusterPrediction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterPrediction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterPrediction) ProtoMessage() {}

func (x *ClusterPrediction) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterPrediction.ProtoReflect.Descriptor instead.
func (*ClusterPrediction) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_predictions_predictions_proto_rawDescGZIP(), []int{6}
}

func (x *ClusterPrediction) GetObjectMeta() *resources.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *ClusterPrediction) GetPredictedRawData() []*MetricData {
	if x != nil {
		return x.PredictedRawData
	}
	return nil
}

func (x *ClusterPrediction) GetPredictedUpperboundData() []*MetricData {
	if x != nil {
		return x.PredictedUpperboundData
	}
	return nil
}

func (x *ClusterPrediction) GetPredictedLowerboundData() []*MetricData {
	if x != nil {
		return x.PredictedLowerboundData
	}
	return nil
}

type WritePrediction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricType       common.MetricType       `protobuf:"varint,1,opt,name=metric_type,json=metricType,proto3,enum=prophetstor.api.datahub.common.MetricType" json:"metric_type,omitempty"`
	ResourceBoundary common.ResourceBoundary `protobuf:"varint,2,opt,name=resource_boundary,json=resourceBoundary,proto3,enum=prophetstor.api.datahub.common.ResourceBoundary" json:"resource_boundary,omitempty"`
	WriteData        *common.WriteData       `protobuf:"bytes,3,opt,name=write_data,json=writeData,proto3" json:"write_data,omitempty"`
}

func (x *WritePrediction) Reset() {
	*x = WritePrediction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WritePrediction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WritePrediction) ProtoMessage() {}

func (x *WritePrediction) ProtoReflect() protoreflect.Message {
	mi := &file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WritePrediction.ProtoReflect.Descriptor instead.
func (*WritePrediction) Descriptor() ([]byte, []int) {
	return file_prophetstor_api_datahub_predictions_predictions_proto_rawDescGZIP(), []int{7}
}

func (x *WritePrediction) GetMetricType() common.MetricType {
	if x != nil {
		return x.MetricType
	}
	return common.MetricType_METRICS_TYPE_UNDEFINED
}

func (x *WritePrediction) GetResourceBoundary() common.ResourceBoundary {
	if x != nil {
		return x.ResourceBoundary
	}
	return common.ResourceBoundary_RESOURCE_BOUNDARY_UNDEFINED
}

func (x *WritePrediction) GetWriteData() *common.WriteData {
	if x != nil {
		return x.WriteData
	}
	return nil
}

var File_prophetstor_api_datahub_predictions_predictions_proto protoreflect.FileDescriptor

var file_prophetstor_api_datahub_predictions_predictions_proto_rawDesc = []byte{
	0x0a, 0x35, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74,
	0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62,
	0x2e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x2c, 0x70, 0x72,
	0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x70,
	0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x68, 0x75, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x72, 0x61, 0x77, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65,
	0x74, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x70, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74,
	0x6f, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x02, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x5d, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64,
	0x5f, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x10, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x52, 0x61, 0x77, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x6b, 0x0a, 0x19, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x5f,
	0x75, 0x70, 0x70, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73,
	0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e,
	0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x17, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65,
	0x64, 0x55, 0x70, 0x70, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x6b, 0x0a, 0x19, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x17, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x6f,
	0x77, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0xce, 0x01, 0x0a,
	0x0d, 0x50, 0x6f, 0x64, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e,
	0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x6d,
	0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xdc, 0x03,
	0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74,
	0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x12, 0x5d, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64,
	0x5f, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x10, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x52, 0x61, 0x77, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x6b, 0x0a, 0x19, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x5f,
	0x75, 0x70, 0x70, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73,
	0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e,
	0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x17, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65,
	0x64, 0x55, 0x70, 0x70, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x6b, 0x0a, 0x19, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x17, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x6f,
	0x77, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0xa0, 0x03, 0x0a,
	0x15, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x5d, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x65, 0x64, 0x5f, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x52, 0x61,
	0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x6b, 0x0a, 0x19, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x65, 0x64, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68,
	0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68,
	0x75, 0x62, 0x2e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x17, 0x70, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x74, 0x65, 0x64, 0x55, 0x70, 0x70, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x6b, 0x0a, 0x19, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x5f,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73,
	0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e,
	0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x17, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65,
	0x64, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x9e, 0x03, 0x0a, 0x13, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x5d, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x70, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x52,
	0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x6b, 0x0a, 0x19, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x65, 0x64, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70,
	0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x68, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x17, 0x70, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x74, 0x65, 0x64, 0x55, 0x70, 0x70, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x6b, 0x0a, 0x19, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64,
	0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74,
	0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62,
	0x2e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x17, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x65, 0x64, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x22, 0xbc, 0x03, 0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68,
	0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68,
	0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x12, 0x5d, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x65, 0x64, 0x5f, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x52, 0x61,
	0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x6b, 0x0a, 0x19, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x65, 0x64, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68,
	0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68,
	0x75, 0x62, 0x2e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x17, 0x70, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x74, 0x65, 0x64, 0x55, 0x70, 0x70, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x6b, 0x0a, 0x19, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x5f,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73,
	0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e,
	0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x17, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65,
	0x64, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x9c, 0x03, 0x0a, 0x11, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x5d, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x65, 0x64, 0x5f, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x10, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x52, 0x61, 0x77,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x6b, 0x0a, 0x19, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65,
	0x64, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65,
	0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x17, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x65, 0x64, 0x55, 0x70, 0x70, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x6b, 0x0a, 0x19, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74,
	0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x70,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x17, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64,
	0x4c, 0x6f, 0x77, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0x87,
	0x02, 0x0a, 0x0f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65,
	0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x5d, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x52, 0x10, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x12, 0x48,
	0x0a, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x29, 0x5a, 0x27, 0x70, 0x72, 0x6f, 0x70,
	0x68, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x68, 0x75, 0x62, 0x2f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prophetstor_api_datahub_predictions_predictions_proto_rawDescOnce sync.Once
	file_prophetstor_api_datahub_predictions_predictions_proto_rawDescData = file_prophetstor_api_datahub_predictions_predictions_proto_rawDesc
)

func file_prophetstor_api_datahub_predictions_predictions_proto_rawDescGZIP() []byte {
	file_prophetstor_api_datahub_predictions_predictions_proto_rawDescOnce.Do(func() {
		file_prophetstor_api_datahub_predictions_predictions_proto_rawDescData = protoimpl.X.CompressGZIP(file_prophetstor_api_datahub_predictions_predictions_proto_rawDescData)
	})
	return file_prophetstor_api_datahub_predictions_predictions_proto_rawDescData
}

var file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_prophetstor_api_datahub_predictions_predictions_proto_goTypes = []interface{}{
	(*ContainerPrediction)(nil),   // 0: prophetstor.api.datahub.predictions.ContainerPrediction
	(*PodPrediction)(nil),         // 1: prophetstor.api.datahub.predictions.PodPrediction
	(*ControllerPrediction)(nil),  // 2: prophetstor.api.datahub.predictions.ControllerPrediction
	(*ApplicationPrediction)(nil), // 3: prophetstor.api.datahub.predictions.ApplicationPrediction
	(*NamespacePrediction)(nil),   // 4: prophetstor.api.datahub.predictions.NamespacePrediction
	(*NodePrediction)(nil),        // 5: prophetstor.api.datahub.predictions.NodePrediction
	(*ClusterPrediction)(nil),     // 6: prophetstor.api.datahub.predictions.ClusterPrediction
	(*WritePrediction)(nil),       // 7: prophetstor.api.datahub.predictions.WritePrediction
	(*MetricData)(nil),            // 8: prophetstor.api.datahub.predictions.MetricData
	(*resources.ObjectMeta)(nil),  // 9: prophetstor.api.datahub.resources.ObjectMeta
	(resources.Kind)(0),           // 10: prophetstor.api.datahub.resources.Kind
	(common.MetricType)(0),        // 11: prophetstor.api.datahub.common.MetricType
	(common.ResourceBoundary)(0),  // 12: prophetstor.api.datahub.common.ResourceBoundary
	(*common.WriteData)(nil),      // 13: prophetstor.api.datahub.common.WriteData
}
var file_prophetstor_api_datahub_predictions_predictions_proto_depIdxs = []int32{
	8,  // 0: prophetstor.api.datahub.predictions.ContainerPrediction.predicted_raw_data:type_name -> prophetstor.api.datahub.predictions.MetricData
	8,  // 1: prophetstor.api.datahub.predictions.ContainerPrediction.predicted_upperbound_data:type_name -> prophetstor.api.datahub.predictions.MetricData
	8,  // 2: prophetstor.api.datahub.predictions.ContainerPrediction.predicted_lowerbound_data:type_name -> prophetstor.api.datahub.predictions.MetricData
	9,  // 3: prophetstor.api.datahub.predictions.PodPrediction.object_meta:type_name -> prophetstor.api.datahub.resources.ObjectMeta
	0,  // 4: prophetstor.api.datahub.predictions.PodPrediction.container_predictions:type_name -> prophetstor.api.datahub.predictions.ContainerPrediction
	9,  // 5: prophetstor.api.datahub.predictions.ControllerPrediction.object_meta:type_name -> prophetstor.api.datahub.resources.ObjectMeta
	10, // 6: prophetstor.api.datahub.predictions.ControllerPrediction.kind:type_name -> prophetstor.api.datahub.resources.Kind
	8,  // 7: prophetstor.api.datahub.predictions.ControllerPrediction.predicted_raw_data:type_name -> prophetstor.api.datahub.predictions.MetricData
	8,  // 8: prophetstor.api.datahub.predictions.ControllerPrediction.predicted_upperbound_data:type_name -> prophetstor.api.datahub.predictions.MetricData
	8,  // 9: prophetstor.api.datahub.predictions.ControllerPrediction.predicted_lowerbound_data:type_name -> prophetstor.api.datahub.predictions.MetricData
	9,  // 10: prophetstor.api.datahub.predictions.ApplicationPrediction.object_meta:type_name -> prophetstor.api.datahub.resources.ObjectMeta
	8,  // 11: prophetstor.api.datahub.predictions.ApplicationPrediction.predicted_raw_data:type_name -> prophetstor.api.datahub.predictions.MetricData
	8,  // 12: prophetstor.api.datahub.predictions.ApplicationPrediction.predicted_upperbound_data:type_name -> prophetstor.api.datahub.predictions.MetricData
	8,  // 13: prophetstor.api.datahub.predictions.ApplicationPrediction.predicted_lowerbound_data:type_name -> prophetstor.api.datahub.predictions.MetricData
	9,  // 14: prophetstor.api.datahub.predictions.NamespacePrediction.object_meta:type_name -> prophetstor.api.datahub.resources.ObjectMeta
	8,  // 15: prophetstor.api.datahub.predictions.NamespacePrediction.predicted_raw_data:type_name -> prophetstor.api.datahub.predictions.MetricData
	8,  // 16: prophetstor.api.datahub.predictions.NamespacePrediction.predicted_upperbound_data:type_name -> prophetstor.api.datahub.predictions.MetricData
	8,  // 17: prophetstor.api.datahub.predictions.NamespacePrediction.predicted_lowerbound_data:type_name -> prophetstor.api.datahub.predictions.MetricData
	9,  // 18: prophetstor.api.datahub.predictions.NodePrediction.object_meta:type_name -> prophetstor.api.datahub.resources.ObjectMeta
	8,  // 19: prophetstor.api.datahub.predictions.NodePrediction.predicted_raw_data:type_name -> prophetstor.api.datahub.predictions.MetricData
	8,  // 20: prophetstor.api.datahub.predictions.NodePrediction.predicted_upperbound_data:type_name -> prophetstor.api.datahub.predictions.MetricData
	8,  // 21: prophetstor.api.datahub.predictions.NodePrediction.predicted_lowerbound_data:type_name -> prophetstor.api.datahub.predictions.MetricData
	9,  // 22: prophetstor.api.datahub.predictions.ClusterPrediction.object_meta:type_name -> prophetstor.api.datahub.resources.ObjectMeta
	8,  // 23: prophetstor.api.datahub.predictions.ClusterPrediction.predicted_raw_data:type_name -> prophetstor.api.datahub.predictions.MetricData
	8,  // 24: prophetstor.api.datahub.predictions.ClusterPrediction.predicted_upperbound_data:type_name -> prophetstor.api.datahub.predictions.MetricData
	8,  // 25: prophetstor.api.datahub.predictions.ClusterPrediction.predicted_lowerbound_data:type_name -> prophetstor.api.datahub.predictions.MetricData
	11, // 26: prophetstor.api.datahub.predictions.WritePrediction.metric_type:type_name -> prophetstor.api.datahub.common.MetricType
	12, // 27: prophetstor.api.datahub.predictions.WritePrediction.resource_boundary:type_name -> prophetstor.api.datahub.common.ResourceBoundary
	13, // 28: prophetstor.api.datahub.predictions.WritePrediction.write_data:type_name -> prophetstor.api.datahub.common.WriteData
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_prophetstor_api_datahub_predictions_predictions_proto_init() }
func file_prophetstor_api_datahub_predictions_predictions_proto_init() {
	if File_prophetstor_api_datahub_predictions_predictions_proto != nil {
		return
	}
	file_prophetstor_api_datahub_predictions_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerPrediction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodPrediction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControllerPrediction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationPrediction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespacePrediction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodePrediction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterPrediction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WritePrediction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prophetstor_api_datahub_predictions_predictions_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_prophetstor_api_datahub_predictions_predictions_proto_goTypes,
		DependencyIndexes: file_prophetstor_api_datahub_predictions_predictions_proto_depIdxs,
		MessageInfos:      file_prophetstor_api_datahub_predictions_predictions_proto_msgTypes,
	}.Build()
	File_prophetstor_api_datahub_predictions_predictions_proto = out.File
	file_prophetstor_api_datahub_predictions_predictions_proto_rawDesc = nil
	file_prophetstor_api_datahub_predictions_predictions_proto_goTypes = nil
	file_prophetstor_api_datahub_predictions_predictions_proto_depIdxs = nil
}
