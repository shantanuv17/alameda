// source: prophetstor/api/datahub/data/services.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var prophetstor_api_datahub_data_data_pb = require('../../../../prophetstor/api/datahub/data/data_pb.js');
goog.object.extend(proto, prophetstor_api_datahub_data_data_pb);
var prophetstor_api_datahub_data_types_pb = require('../../../../prophetstor/api/datahub/data/types_pb.js');
goog.object.extend(proto, prophetstor_api_datahub_data_types_pb);
var prophetstor_api_datahub_schemas_types_pb = require('../../../../prophetstor/api/datahub/schemas/types_pb.js');
goog.object.extend(proto, prophetstor_api_datahub_schemas_types_pb);
var google_rpc_status_pb = require('../../../../prophetstor/api/google/rpc/status_pb.js');
goog.object.extend(proto, google_rpc_status_pb);
goog.exportSymbol('proto.prophetstor.api.datahub.data.DeleteDataRequest', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.data.ReadDataRequest', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.data.ReadDataResponse', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.data.WriteDataRequest', null, global);
goog.exportSymbol('proto.prophetstor.api.datahub.data.WriteMetaRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.data.WriteDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.data.WriteDataRequest.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.data.WriteDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.data.WriteDataRequest.displayName = 'proto.prophetstor.api.datahub.data.WriteDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.data.ReadDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.data.ReadDataRequest.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.data.ReadDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.data.ReadDataRequest.displayName = 'proto.prophetstor.api.datahub.data.ReadDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.data.ReadDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.api.datahub.data.ReadDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.data.ReadDataResponse.displayName = 'proto.prophetstor.api.datahub.data.ReadDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.data.DeleteDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.data.DeleteDataRequest.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.data.DeleteDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.data.DeleteDataRequest.displayName = 'proto.prophetstor.api.datahub.data.DeleteDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.api.datahub.data.WriteMetaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.api.datahub.data.WriteMetaRequest.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.api.datahub.data.WriteMetaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.api.datahub.data.WriteMetaRequest.displayName = 'proto.prophetstor.api.datahub.data.WriteMetaRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.data.WriteDataRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.data.WriteDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.data.WriteDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.data.WriteDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.data.WriteDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaMeta: (f = msg.getSchemaMeta()) && prophetstor_api_datahub_schemas_types_pb.SchemaMeta.toObject(includeInstance, f),
    writeDataList: jspb.Message.toObjectList(msg.getWriteDataList(),
    prophetstor_api_datahub_data_data_pb.WriteData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.data.WriteDataRequest}
 */
proto.prophetstor.api.datahub.data.WriteDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.data.WriteDataRequest;
  return proto.prophetstor.api.datahub.data.WriteDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.data.WriteDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.data.WriteDataRequest}
 */
proto.prophetstor.api.datahub.data.WriteDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new prophetstor_api_datahub_schemas_types_pb.SchemaMeta;
      reader.readMessage(value,prophetstor_api_datahub_schemas_types_pb.SchemaMeta.deserializeBinaryFromReader);
      msg.setSchemaMeta(value);
      break;
    case 2:
      var value = new prophetstor_api_datahub_data_data_pb.WriteData;
      reader.readMessage(value,prophetstor_api_datahub_data_data_pb.WriteData.deserializeBinaryFromReader);
      msg.addWriteData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.data.WriteDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.data.WriteDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.data.WriteDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.data.WriteDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      prophetstor_api_datahub_schemas_types_pb.SchemaMeta.serializeBinaryToWriter
    );
  }
  f = message.getWriteDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      prophetstor_api_datahub_data_data_pb.WriteData.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.api.datahub.schemas.SchemaMeta schema_meta = 1;
 * @return {?proto.prophetstor.api.datahub.schemas.SchemaMeta}
 */
proto.prophetstor.api.datahub.data.WriteDataRequest.prototype.getSchemaMeta = function() {
  return /** @type{?proto.prophetstor.api.datahub.schemas.SchemaMeta} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_schemas_types_pb.SchemaMeta, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.schemas.SchemaMeta|undefined} value
 * @return {!proto.prophetstor.api.datahub.data.WriteDataRequest} returns this
*/
proto.prophetstor.api.datahub.data.WriteDataRequest.prototype.setSchemaMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.data.WriteDataRequest} returns this
 */
proto.prophetstor.api.datahub.data.WriteDataRequest.prototype.clearSchemaMeta = function() {
  return this.setSchemaMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.data.WriteDataRequest.prototype.hasSchemaMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated WriteData write_data = 2;
 * @return {!Array<!proto.prophetstor.api.datahub.data.WriteData>}
 */
proto.prophetstor.api.datahub.data.WriteDataRequest.prototype.getWriteDataList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.data.WriteData>} */ (
    jspb.Message.getRepeatedWrapperField(this, prophetstor_api_datahub_data_data_pb.WriteData, 2));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.data.WriteData>} value
 * @return {!proto.prophetstor.api.datahub.data.WriteDataRequest} returns this
*/
proto.prophetstor.api.datahub.data.WriteDataRequest.prototype.setWriteDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.data.WriteData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.data.WriteData}
 */
proto.prophetstor.api.datahub.data.WriteDataRequest.prototype.addWriteData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.api.datahub.data.WriteData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.data.WriteDataRequest} returns this
 */
proto.prophetstor.api.datahub.data.WriteDataRequest.prototype.clearWriteDataList = function() {
  return this.setWriteDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.data.ReadDataRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.data.ReadDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.data.ReadDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.data.ReadDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.data.ReadDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaMeta: (f = msg.getSchemaMeta()) && prophetstor_api_datahub_schemas_types_pb.SchemaMeta.toObject(includeInstance, f),
    readDataList: jspb.Message.toObjectList(msg.getReadDataList(),
    prophetstor_api_datahub_data_data_pb.ReadData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.data.ReadDataRequest}
 */
proto.prophetstor.api.datahub.data.ReadDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.data.ReadDataRequest;
  return proto.prophetstor.api.datahub.data.ReadDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.data.ReadDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.data.ReadDataRequest}
 */
proto.prophetstor.api.datahub.data.ReadDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new prophetstor_api_datahub_schemas_types_pb.SchemaMeta;
      reader.readMessage(value,prophetstor_api_datahub_schemas_types_pb.SchemaMeta.deserializeBinaryFromReader);
      msg.setSchemaMeta(value);
      break;
    case 2:
      var value = new prophetstor_api_datahub_data_data_pb.ReadData;
      reader.readMessage(value,prophetstor_api_datahub_data_data_pb.ReadData.deserializeBinaryFromReader);
      msg.addReadData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.data.ReadDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.data.ReadDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.data.ReadDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.data.ReadDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      prophetstor_api_datahub_schemas_types_pb.SchemaMeta.serializeBinaryToWriter
    );
  }
  f = message.getReadDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      prophetstor_api_datahub_data_data_pb.ReadData.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.api.datahub.schemas.SchemaMeta schema_meta = 1;
 * @return {?proto.prophetstor.api.datahub.schemas.SchemaMeta}
 */
proto.prophetstor.api.datahub.data.ReadDataRequest.prototype.getSchemaMeta = function() {
  return /** @type{?proto.prophetstor.api.datahub.schemas.SchemaMeta} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_schemas_types_pb.SchemaMeta, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.schemas.SchemaMeta|undefined} value
 * @return {!proto.prophetstor.api.datahub.data.ReadDataRequest} returns this
*/
proto.prophetstor.api.datahub.data.ReadDataRequest.prototype.setSchemaMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.data.ReadDataRequest} returns this
 */
proto.prophetstor.api.datahub.data.ReadDataRequest.prototype.clearSchemaMeta = function() {
  return this.setSchemaMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.data.ReadDataRequest.prototype.hasSchemaMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ReadData read_data = 2;
 * @return {!Array<!proto.prophetstor.api.datahub.data.ReadData>}
 */
proto.prophetstor.api.datahub.data.ReadDataRequest.prototype.getReadDataList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.data.ReadData>} */ (
    jspb.Message.getRepeatedWrapperField(this, prophetstor_api_datahub_data_data_pb.ReadData, 2));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.data.ReadData>} value
 * @return {!proto.prophetstor.api.datahub.data.ReadDataRequest} returns this
*/
proto.prophetstor.api.datahub.data.ReadDataRequest.prototype.setReadDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.data.ReadData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.data.ReadData}
 */
proto.prophetstor.api.datahub.data.ReadDataRequest.prototype.addReadData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.api.datahub.data.ReadData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.data.ReadDataRequest} returns this
 */
proto.prophetstor.api.datahub.data.ReadDataRequest.prototype.clearReadDataList = function() {
  return this.setReadDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.data.ReadDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.data.ReadDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.data.ReadDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.data.ReadDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f),
    data: (f = msg.getData()) && prophetstor_api_datahub_data_types_pb.Data.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.data.ReadDataResponse}
 */
proto.prophetstor.api.datahub.data.ReadDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.data.ReadDataResponse;
  return proto.prophetstor.api.datahub.data.ReadDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.data.ReadDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.data.ReadDataResponse}
 */
proto.prophetstor.api.datahub.data.ReadDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new prophetstor_api_datahub_data_types_pb.Data;
      reader.readMessage(value,prophetstor_api_datahub_data_types_pb.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.data.ReadDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.data.ReadDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.data.ReadDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.data.ReadDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      prophetstor_api_datahub_data_types_pb.Data.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.prophetstor.api.datahub.data.ReadDataResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.prophetstor.api.datahub.data.ReadDataResponse} returns this
*/
proto.prophetstor.api.datahub.data.ReadDataResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.data.ReadDataResponse} returns this
 */
proto.prophetstor.api.datahub.data.ReadDataResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.data.ReadDataResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Data data = 2;
 * @return {?proto.prophetstor.api.datahub.data.Data}
 */
proto.prophetstor.api.datahub.data.ReadDataResponse.prototype.getData = function() {
  return /** @type{?proto.prophetstor.api.datahub.data.Data} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_data_types_pb.Data, 2));
};


/**
 * @param {?proto.prophetstor.api.datahub.data.Data|undefined} value
 * @return {!proto.prophetstor.api.datahub.data.ReadDataResponse} returns this
*/
proto.prophetstor.api.datahub.data.ReadDataResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.data.ReadDataResponse} returns this
 */
proto.prophetstor.api.datahub.data.ReadDataResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.data.ReadDataResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.data.DeleteDataRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.data.DeleteDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.data.DeleteDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.data.DeleteDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.data.DeleteDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaMeta: (f = msg.getSchemaMeta()) && prophetstor_api_datahub_schemas_types_pb.SchemaMeta.toObject(includeInstance, f),
    deleteDataList: jspb.Message.toObjectList(msg.getDeleteDataList(),
    prophetstor_api_datahub_data_data_pb.DeleteData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.data.DeleteDataRequest}
 */
proto.prophetstor.api.datahub.data.DeleteDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.data.DeleteDataRequest;
  return proto.prophetstor.api.datahub.data.DeleteDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.data.DeleteDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.data.DeleteDataRequest}
 */
proto.prophetstor.api.datahub.data.DeleteDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new prophetstor_api_datahub_schemas_types_pb.SchemaMeta;
      reader.readMessage(value,prophetstor_api_datahub_schemas_types_pb.SchemaMeta.deserializeBinaryFromReader);
      msg.setSchemaMeta(value);
      break;
    case 2:
      var value = new prophetstor_api_datahub_data_data_pb.DeleteData;
      reader.readMessage(value,prophetstor_api_datahub_data_data_pb.DeleteData.deserializeBinaryFromReader);
      msg.addDeleteData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.data.DeleteDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.data.DeleteDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.data.DeleteDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.data.DeleteDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      prophetstor_api_datahub_schemas_types_pb.SchemaMeta.serializeBinaryToWriter
    );
  }
  f = message.getDeleteDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      prophetstor_api_datahub_data_data_pb.DeleteData.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.api.datahub.schemas.SchemaMeta schema_meta = 1;
 * @return {?proto.prophetstor.api.datahub.schemas.SchemaMeta}
 */
proto.prophetstor.api.datahub.data.DeleteDataRequest.prototype.getSchemaMeta = function() {
  return /** @type{?proto.prophetstor.api.datahub.schemas.SchemaMeta} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_schemas_types_pb.SchemaMeta, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.schemas.SchemaMeta|undefined} value
 * @return {!proto.prophetstor.api.datahub.data.DeleteDataRequest} returns this
*/
proto.prophetstor.api.datahub.data.DeleteDataRequest.prototype.setSchemaMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.data.DeleteDataRequest} returns this
 */
proto.prophetstor.api.datahub.data.DeleteDataRequest.prototype.clearSchemaMeta = function() {
  return this.setSchemaMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.data.DeleteDataRequest.prototype.hasSchemaMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated DeleteData delete_data = 2;
 * @return {!Array<!proto.prophetstor.api.datahub.data.DeleteData>}
 */
proto.prophetstor.api.datahub.data.DeleteDataRequest.prototype.getDeleteDataList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.data.DeleteData>} */ (
    jspb.Message.getRepeatedWrapperField(this, prophetstor_api_datahub_data_data_pb.DeleteData, 2));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.data.DeleteData>} value
 * @return {!proto.prophetstor.api.datahub.data.DeleteDataRequest} returns this
*/
proto.prophetstor.api.datahub.data.DeleteDataRequest.prototype.setDeleteDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.data.DeleteData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.data.DeleteData}
 */
proto.prophetstor.api.datahub.data.DeleteDataRequest.prototype.addDeleteData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.api.datahub.data.DeleteData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.data.DeleteDataRequest} returns this
 */
proto.prophetstor.api.datahub.data.DeleteDataRequest.prototype.clearDeleteDataList = function() {
  return this.setDeleteDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.api.datahub.data.WriteMetaRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.api.datahub.data.WriteMetaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.api.datahub.data.WriteMetaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.api.datahub.data.WriteMetaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.data.WriteMetaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaMeta: (f = msg.getSchemaMeta()) && prophetstor_api_datahub_schemas_types_pb.SchemaMeta.toObject(includeInstance, f),
    writeMetaList: jspb.Message.toObjectList(msg.getWriteMetaList(),
    prophetstor_api_datahub_data_data_pb.WriteMeta.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.api.datahub.data.WriteMetaRequest}
 */
proto.prophetstor.api.datahub.data.WriteMetaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.api.datahub.data.WriteMetaRequest;
  return proto.prophetstor.api.datahub.data.WriteMetaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.api.datahub.data.WriteMetaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.api.datahub.data.WriteMetaRequest}
 */
proto.prophetstor.api.datahub.data.WriteMetaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new prophetstor_api_datahub_schemas_types_pb.SchemaMeta;
      reader.readMessage(value,prophetstor_api_datahub_schemas_types_pb.SchemaMeta.deserializeBinaryFromReader);
      msg.setSchemaMeta(value);
      break;
    case 2:
      var value = new prophetstor_api_datahub_data_data_pb.WriteMeta;
      reader.readMessage(value,prophetstor_api_datahub_data_data_pb.WriteMeta.deserializeBinaryFromReader);
      msg.addWriteMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.api.datahub.data.WriteMetaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.api.datahub.data.WriteMetaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.api.datahub.data.WriteMetaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.api.datahub.data.WriteMetaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      prophetstor_api_datahub_schemas_types_pb.SchemaMeta.serializeBinaryToWriter
    );
  }
  f = message.getWriteMetaList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      prophetstor_api_datahub_data_data_pb.WriteMeta.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.api.datahub.schemas.SchemaMeta schema_meta = 1;
 * @return {?proto.prophetstor.api.datahub.schemas.SchemaMeta}
 */
proto.prophetstor.api.datahub.data.WriteMetaRequest.prototype.getSchemaMeta = function() {
  return /** @type{?proto.prophetstor.api.datahub.schemas.SchemaMeta} */ (
    jspb.Message.getWrapperField(this, prophetstor_api_datahub_schemas_types_pb.SchemaMeta, 1));
};


/**
 * @param {?proto.prophetstor.api.datahub.schemas.SchemaMeta|undefined} value
 * @return {!proto.prophetstor.api.datahub.data.WriteMetaRequest} returns this
*/
proto.prophetstor.api.datahub.data.WriteMetaRequest.prototype.setSchemaMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.api.datahub.data.WriteMetaRequest} returns this
 */
proto.prophetstor.api.datahub.data.WriteMetaRequest.prototype.clearSchemaMeta = function() {
  return this.setSchemaMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.api.datahub.data.WriteMetaRequest.prototype.hasSchemaMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated WriteMeta write_meta = 2;
 * @return {!Array<!proto.prophetstor.api.datahub.data.WriteMeta>}
 */
proto.prophetstor.api.datahub.data.WriteMetaRequest.prototype.getWriteMetaList = function() {
  return /** @type{!Array<!proto.prophetstor.api.datahub.data.WriteMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, prophetstor_api_datahub_data_data_pb.WriteMeta, 2));
};


/**
 * @param {!Array<!proto.prophetstor.api.datahub.data.WriteMeta>} value
 * @return {!proto.prophetstor.api.datahub.data.WriteMetaRequest} returns this
*/
proto.prophetstor.api.datahub.data.WriteMetaRequest.prototype.setWriteMetaList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.api.datahub.data.WriteMeta=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.api.datahub.data.WriteMeta}
 */
proto.prophetstor.api.datahub.data.WriteMetaRequest.prototype.addWriteMeta = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.api.datahub.data.WriteMeta, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.api.datahub.data.WriteMetaRequest} returns this
 */
proto.prophetstor.api.datahub.data.WriteMetaRequest.prototype.clearWriteMetaList = function() {
  return this.setWriteMetaList([]);
};


goog.object.extend(exports, proto.prophetstor.api.datahub.data);
